{"version":3,"sources":["types.ts","misc/Footer.tsx","ICLSchema.ts","db.ts","matrix/data.ts","matrix/components.tsx","formulas.ts","matrix/VaultDistributionRows.tsx","matrix/VaultStatRows.tsx","matrix/index.tsx","misc/NavBar.tsx","normality/linear-gauge/index.ts","normality/Gauge.tsx","normality/Histogram.tsx","normality/index.tsx","util.ts","patient/FieldWithUnit.tsx","patient/Biometrics.tsx","patient/ICLPower.tsx","patient/Info.tsx","patient/SpectacleRefraction.tsx","patient/index.tsx","regression/index.tsx","misc/TabLinks.tsx","ICLContainer.tsx","App.tsx","index.tsx"],"names":["INITIAL_VALUES","patient","name","dateOfBirth","eye","biometrics","ata","wtw","clr","acq","acan","acat","kf","cct","spectacleRefraction","sphere","cylindre","axis","vertex","Footer","className","style","fontSize","color","href","process","target","rel","INVALID_ERROR","REQUIRED_ERROR","ACQ_INVALID_ERROR","KF_INVALID_ERROR","CCT_INVALID_ERROR","SPHERE_INVALID_ERROR","CYLINDRE_INVALID_ERROR","ICLSchema","Yup","shape","optional","typeError","required","min","max","DATA_POINTS","csv","split","reduce","memo","row","map","col","Number","filter","isNaN","mapCsvToRows","iclSize","iclSe","aca","vault","VALUES","ATA","point","CLR","ACQ","ACA","WTW","getHistogramData","source","Math","apply","step","data","Array","from","keys","i","to","count","forEach","value","item","find","el","HISTOGRAM_DATA","NUM_DATA_POINTS","length","LENS_SIZES","label","id","MYOPIA_LEVELS","title","Infinity","getDataPoints","lens","myopia","dataPoints","filterFlatRows","memoLens","memoMyopia","level","MatrixRow","values","scope","val","index","DividerRow","colSpan","FACTOR0","FACTOR1","round","decimals","pow","calcPosMeridian","calcNegMeridian","calcIclSphere","calcIclCylindre","posMer","negMer","calcIclCylindreEquivalent","negCylindre","getVaultDistribution","range","points","undefined","countByVaultRange","FORMATTERS","PercentVaultSizeRow","a","formatVaultSizeTexts","VAULT_SIZE_RANGES","VaultDistributionRows","getVaultVals","reducer","lessThan","b","greaterThan","getVaultMaxMin","comparator","VaultSizeRow","VAULT_STATS","func","VaultStatRows","stat","getNumEyes","rows","LensHeaderCol","MyopiaHeaderCol","MyopiaHeaderColGroup","Matrix","size","acc","NavBar","resetForm","type","onClick","defaultZones","defaultPointer","height","width","createDiv","styles","div","document","createElement","Object","key","setProperty","LinearGauge","htmlElement","zones","zoneHeight","pointer","container","divisions","divisionHeight","subDivisionHeight","subDivisions","this","valuePercent","pointerSvg","svg","createElementNS","setAttribute","triangle","appendChild","createPointer","floor","totalSubDivisions","fill","_","sub","subDivision","position","top","left","createSubDivision","division","createDivision","divisionColor","display","renderPointer","renderSubDivisions","renderDivisions","z","zone","flex","createZone","d","childNodes","node","removeChild","QUANTILES","getComputedStyle","body","getPropertyValue","buildZones","quantiles","qq","q","quantile","sorted","sort","pos","base","rest","Gauge","useRef","useLayoutEffect","current","x","setOptions","dispose","marginLeft","marginRight","ref","am4core","queue","Histogram","chart","am4charts","t","titles","create","text","marginBottom","categoryAxis","xAxes","push","dataFields","category","renderer","grid","template","location","minGridDistance","valueAxis","yAxes","series","stroke","columns","trim","valueY","categoryX","tooltipText","Graph","histogramSeries","gaugeValues","Normality","getClassName","error","touched","invalid","valid","join","UNITS","Map","UnitSufix","unit","get","FieldWithUnit","placeholder","disabled","htmlFor","autoComplete","component","Biometrics","errors","ICLPower","calcAge","differenceInYears","Date","Info","maxLength","as","SpectacleRefraction","Patient","otherProps","Regression","LINKS","TabLinks","link","exact","activeClassName","TabContent","path","ICLContainer","initialValues","validationSchema","onSubmit","hashType","App","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.684246af.chunk.js","sourcesContent":["export interface PatientInfo {\n  name: string;\n  dateOfBirth: string;\n  eye: 'left' | 'right';\n}\n\nexport interface Biometrics {\n  ata: number;\n  wtw: number;\n  clr: number;\n  acq: number;\n  acan: number;\n  acat: number;\n  kf: number;\n  cct: number;\n}\n\nexport interface SpectacleRefraction {\n  sphere: number;\n  cylindre: number;\n  axis: number;\n  vertex: number;\n}\n\nexport interface ICLInputs {\n  patient: PatientInfo;\n  biometrics: Biometrics;\n  spectacleRefraction: SpectacleRefraction;\n}\n\nexport const INITIAL_VALUES: ICLInputs = {\n  patient: {\n    name: '',\n    dateOfBirth: '',\n    eye: 'left'\n  },\n  biometrics: {\n    ata: 0,\n    wtw: 0,\n    clr: 0,\n    acq: 0,\n    acan: 0,\n    acat: 0,\n    kf: 0,\n    cct: 0\n  },\n  spectacleRefraction: {\n    sphere: 0,\n    cylindre: 0,\n    axis: 0,\n    vertex: 0\n  }\n};\n","export const Footer = () => (\n  <footer\n    className=\"p-3 p-md-5 mt-5 bg-light text-center text-sm-left\"\n    style={{ fontSize: '0.875rem', color: '#63707c' }}\n  >\n    <div className=\"container\">\n      <ul className=\"bd-footer-links pl-0 mb-3\">\n        <li className=\"d-inline-block\">\n          <a\n            href={`https://github.com/ruipinge/icl-calc/releases/tag/v${process.env.REACT_APP_VERSION}`}\n          >\n            {`v${process.env.REACT_APP_VERSION}`}\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#instructions\">\n            Instructions\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#data\">\n            Data\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc\">GitHub</a>\n        </li>\n      </ul>\n      <p className=\"mb-0\">\n        Designed and built with love by{' '}\n        <a href=\"https://www.linkedin.com/in/pedro-serra-44697321/\">\n          Pedro Serra\n        </a>{' '}\n        and <a href=\"https://ruipinge.github.io/resume\">Rui Pinge</a>.\n      </p>\n      <p className=\"mb-0\">\n        Available under the{' '}\n        <a\n          href=\"https://github.com/ruipinge/icl-calc/blob/master/LICENSE\"\n          target=\"_blank\"\n          rel=\"license noopener noreferrer\"\n        >\n          MIT License\n        </a>{' '}\n        without any kind of warranty.\n      </p>\n      <p className=\"mb-0\">\n        The authors cannot be held responsible for any consequense of its usage.\n      </p>\n    </div>\n  </footer>\n);\n","import * as Yup from 'yup';\n\nconst ACQ_MIN = 2.7,\n  ACQ_MAX = 6.0,\n  KF_MIN = 20,\n  KF_MAX = 70,\n  CCT_MIN = 300,\n  CCT_MAX = 700,\n  SPHERE_MIN = -25,\n  SPHERE_MAX = 0,\n  CYLINDRE_MIN = -8,\n  CYLINDRE_MAX = 0,\n  INVALID_ERROR = 'Invalid value.',\n  REQUIRED_ERROR = 'Required value.',\n  ACQ_INVALID_ERROR = `${INVALID_ERROR} [${ACQ_MIN}, ${ACQ_MAX}]`,\n  KF_INVALID_ERROR = `${INVALID_ERROR} [${KF_MIN}, ${KF_MAX}]`,\n  CCT_INVALID_ERROR = `${INVALID_ERROR} [${CCT_MIN}, ${CCT_MAX}]`,\n  SPHERE_INVALID_ERROR = `${INVALID_ERROR} [${SPHERE_MIN}, ${SPHERE_MAX}]`,\n  CYLINDRE_INVALID_ERROR = `${INVALID_ERROR} [${CYLINDRE_MIN}, ${CYLINDRE_MAX}]`;\n\nexport const ICLSchema = Yup.object().shape({\n  patient: Yup.object().shape({\n    dateOfBirth: Yup.date().optional().typeError('Invalid date. (yyyy-mm-dd)')\n  }),\n  biometrics: Yup.object().shape({\n    ata: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    wtw: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    clr: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(-1000, INVALID_ERROR)\n      .max(1000, INVALID_ERROR),\n    acq: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(ACQ_MIN, ACQ_INVALID_ERROR)\n      .max(ACQ_MAX, ACQ_INVALID_ERROR),\n    acan: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    acat: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    kf: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(KF_MIN, KF_INVALID_ERROR)\n      .max(KF_MAX, KF_INVALID_ERROR),\n    cct: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CCT_MIN, CCT_INVALID_ERROR)\n      .max(CCT_MAX, CCT_INVALID_ERROR)\n  }),\n  spectacleRefraction: Yup.object().shape({\n    sphere: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(SPHERE_MIN, SPHERE_INVALID_ERROR)\n      .max(SPHERE_MAX, SPHERE_INVALID_ERROR),\n    cylindre: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CYLINDRE_MIN, CYLINDRE_INVALID_ERROR)\n      .max(CYLINDRE_MAX, CYLINDRE_INVALID_ERROR),\n    axis: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(180, INVALID_ERROR),\n    vertex: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR)\n  })\n});\n","import raw from 'raw.macro';\n\nconst CSV = raw('./data.csv');\n\nexport interface DataPoint {\n  iclSize: number;\n  iclSe: number;\n  acq: number;\n  ata: number;\n  clr: number;\n  aca: number;\n  vault: number;\n  wtw: number;\n}\n\nexport const mapCsvToRows = (csv: string): number[][] =>\n  csv\n    .split('\\n')\n    .reduce(\n      (memo, row) => [\n        ...memo,\n        row.split(';').map((col: string) => Number(col))\n      ],\n      [] as number[][]\n    )\n    .filter((row) => !!row[0] && !isNaN(row[0]));\n\nexport const mapRowsToDataPoint = (rows: number[][]): DataPoint[] =>\n  rows.map((row) => ({\n    iclSize: row[1],\n    iclSe: row[2],\n    acq: row[5],\n    ata: row[6],\n    clr: row[7],\n    aca: row[10],\n    vault: row[11],\n    wtw: row[15]\n  }));\n\nconst mapCsvToDataPoint = (csv: string): DataPoint[] =>\n  mapRowsToDataPoint(mapCsvToRows(csv));\n\nexport const DATA_POINTS: DataPoint[] = mapCsvToDataPoint(CSV);\n\nexport const VALUES = {\n  ATA: DATA_POINTS.map((point) => point.ata),\n  CLR: DATA_POINTS.map((point) => point.clr),\n  ACQ: DATA_POINTS.map((point) => point.acq),\n  ACA: DATA_POINTS.map((point) => point.aca),\n  WTW: DATA_POINTS.map((point) => point.wtw)\n};\n\nconst MAX_COLS = 10;\n\nexport interface HistogramEntry {\n  from: number;\n  to: number;\n  count: number;\n}\nconst getHistogramData = (source: number[]): HistogramEntry[] => {\n  // Init\n  const min = Math.min.apply(null, source);\n  const max = Math.max.apply(null, source);\n  const range = max - min;\n  const step = range / MAX_COLS;\n\n  // Create items\n  const data = Array.from(Array(MAX_COLS).keys()).map((i) => {\n    const from = min + i * step;\n    const to = min + (i + 1) * step;\n    return {\n      from: from,\n      to: to,\n      count: 0\n    };\n  });\n\n  // Calculate range of the values\n  source.forEach((value) => {\n    const item = data.find((el) => value >= el.from && value <= el.to);\n    item && item.count++;\n  });\n\n  return data;\n};\n\nexport const HISTOGRAM_DATA = {\n  ata: getHistogramData(VALUES.ATA),\n  clr: getHistogramData(VALUES.CLR),\n  acq: getHistogramData(VALUES.ACQ),\n  aca: getHistogramData(VALUES.ACA),\n  wtw: getHistogramData(VALUES.WTW)\n};\n","import { DATA_POINTS, DataPoint } from '../db';\n\nconst ATA_DEVIATION: number = 0.1; // millimetres\nconst CLR_DEVIATION: number = 100 * 0.001; // millimetres\n\nexport const NUM_DATA_POINTS = DATA_POINTS.length;\n\nexport interface VaultRange {\n  min?: number;\n  max?: number;\n}\n\ntype LensSizeId = 'small' | 'medium' | 'large';\ninterface LensSize {\n  id: LensSizeId;\n  label: string;\n  value: number;\n}\nexport const LENS_SIZES: LensSize[] = [\n  {\n    label: '12.6 mm',\n    id: 'small',\n    value: 12.6\n  },\n  {\n    label: '13.2 mm',\n    id: 'medium',\n    value: 13.2\n  },\n  {\n    label: '13.7 mm',\n    id: 'large',\n    value: 13.7\n  }\n];\n\ntype MyopiaId = 'low' | 'moderate' | 'high';\ninterface MyopiaLevel {\n  id: MyopiaId;\n  label: string;\n  title: string;\n  min: number;\n  max: number;\n}\nexport const MYOPIA_LEVELS: MyopiaLevel[] = [\n  {\n    id: 'low',\n    label: 'Low',\n    title: 'Spherical Equivalent (SE) less than -6 dpt',\n    min: -6,\n    max: Infinity\n  },\n  {\n    id: 'moderate',\n    label: 'Moderate',\n    title: 'Spherical Equivalent (SE) between -6 dpt and -12 dpt',\n    min: -12,\n    max: -6\n  },\n  {\n    id: 'high',\n    label: 'High',\n    title: 'Spherical Equivalent (SE) greater than -12 dpt',\n    min: -Infinity,\n    max: -12\n  }\n];\n\nexport interface MatrixFilter {\n  readonly ata: number;\n  readonly clr: number;\n  readonly dataPoints?: DataPoint[];\n}\n\ninterface CacheEntry {\n  lens: LensSize;\n  myopia: MyopiaLevel;\n  dataPoints?: DataPoint[];\n}\n\nexport const getDataPoints = ({\n  lens,\n  myopia,\n  dataPoints = DATA_POINTS\n}: CacheEntry): DataPoint[] =>\n  dataPoints.filter(\n    (point) =>\n      lens.value === point.iclSize &&\n      myopia.min <= point.iclSe &&\n      point.iclSe < myopia.max\n  );\n\nconst filter = ({\n  ata,\n  clr,\n  point\n}: {\n  ata: number;\n  clr: number;\n  point: DataPoint;\n}) =>\n  ata >= point.ata - ATA_DEVIATION &&\n  ata <= point.ata + ATA_DEVIATION &&\n  clr >= point.clr - CLR_DEVIATION && // clr in db is in millimetres\n  clr <= point.clr + CLR_DEVIATION; // clr in db is in millimetres\n\nexport const filterFlatRows = ({\n  ata,\n  clr,\n  dataPoints = DATA_POINTS\n}: MatrixFilter): DataPoint[][] =>\n  LENS_SIZES.reduce(\n    (memoLens, lens) => [\n      ...memoLens,\n      ...MYOPIA_LEVELS.reduce(\n        (memoMyopia, level) => [\n          ...memoMyopia,\n          ...[\n            getDataPoints({\n              lens: lens,\n              myopia: level,\n              dataPoints: dataPoints\n            }).filter((point: DataPoint) => filter({ ata, clr, point }))\n          ]\n        ],\n        [] as DataPoint[][]\n      )\n    ],\n    [] as DataPoint[][]\n  );\n","import { LENS_SIZES, MYOPIA_LEVELS } from './data';\n\nexport const MatrixRow = ({\n  label,\n  title,\n  values\n}: {\n  label: string;\n  title: string;\n  values: number[];\n}) => (\n  <tr>\n    <th scope=\"row\" title={title}>\n      {label}\n    </th>\n    {values.map((val, index) => (\n      <td key={index} className=\"text-right\">\n        {val}\n      </td>\n    ))}\n  </tr>\n);\n\nexport const DividerRow = () => (\n  <tr className=\"table-bordered\">\n    <td colSpan={LENS_SIZES.length * MYOPIA_LEVELS.length + 1} />\n  </tr>\n);\n","const FACTOR0 = -1.33756,\n  FACTOR1 = 0.9446;\n\nexport const round = (val: number, decimals: number = 2) =>\n  Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\nexport const calcPosMeridian = (sphere: number) => {\n  return FACTOR0 + FACTOR1 * sphere;\n};\n\nexport const calcNegMeridian = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return FACTOR0 + FACTOR1 * (sphere + cylindre);\n};\n\nexport const calcIclSphere = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return round(calcNegMeridian({ sphere: sphere, cylindre: cylindre }));\n};\n\nexport const calcIclCylindre = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const posMer = calcPosMeridian(sphere),\n    negMer = calcNegMeridian({ sphere: sphere, cylindre: cylindre });\n\n  return round(posMer - negMer);\n};\n\nexport const calcIclAxis = (axis: number) => {\n  if (axis >= 0 && axis < 90) {\n    return round(axis + 90, 1);\n  }\n\n  if (axis > 90 && axis <= 180) {\n    return round(axis - 90, 1);\n  }\n\n  return round(axis, 1);\n};\n\nexport const calcIclCylindreEquivalent = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const negCylindre =\n    calcNegMeridian({ sphere: sphere, cylindre: cylindre }) -\n    calcPosMeridian(sphere);\n  return round(calcPosMeridian(sphere) + negCylindre / 2);\n};\n","import { MatrixFilter, VaultRange, filterFlatRows } from './data';\n\nimport { DataPoint } from '../db';\nimport { MatrixRow } from './components';\nimport { round } from '../formulas';\n\nexport const countByVaultRange = ({\n  points,\n  range\n}: {\n  points: DataPoint[];\n  range: VaultRange;\n}): number =>\n  points.filter((point) => {\n    if (range.min !== undefined && range.max !== undefined) {\n      return range.min <= point.vault && point.vault < range.max;\n    }\n    if (range.min !== undefined) {\n      return range.min <= point.vault;\n    }\n    if (range.max !== undefined) {\n      return point.vault < range.max;\n    }\n    return false;\n  }).length;\n\nexport const getVaultDistribution = ({\n  filter,\n  range\n}: {\n  filter: MatrixFilter;\n  range: VaultRange;\n}): number[] =>\n  filterFlatRows(filter).map((points) =>\n    points.length !== 0\n      ? round(countByVaultRange({ points, range }) / points.length, 3)\n      : 0\n  );\n\ninterface VaultDestributionTexts {\n  label: string;\n  title: string;\n}\n\nconst FORMATTERS = {\n  minMax: (min: number, max: number) => ({\n    title: `Percentage of Eyes with Vault size between ${min} mm and ${max} mm`,\n    label: `% ${min} < Vault < ${max}`\n  }),\n  min: (min: number) => ({\n    title: `Percentage of Eyes with Vault size greater or equal than ${min} mm`,\n    label: `% ${min} < Vault`\n  }),\n  max: (max: number) => ({\n    title: `Percentage of Eyes with Vault size less than ${max} mm`,\n    label: `% Vault < ${max}`\n  }),\n  empty: {\n    label: '',\n    title: ''\n  }\n};\n\nexport const formatVaultSizeTexts = (\n  range: VaultRange\n): VaultDestributionTexts => {\n  if (range.min !== undefined && range.max !== undefined) {\n    return FORMATTERS.minMax(range.min, range.max);\n  }\n  if (range.min !== undefined) {\n    return FORMATTERS.min(range.min);\n  }\n  if (range.max !== undefined) {\n    return FORMATTERS.max(range.max);\n  }\n  return FORMATTERS.empty;\n};\n\nconst PercentVaultSizeRow = ({\n  filter,\n  range\n}: {\n  filter: MatrixFilter;\n  range: VaultRange;\n}) => {\n  const a = formatVaultSizeTexts(range);\n  return (\n    <MatrixRow\n      label={a.label}\n      title={a.title}\n      values={getVaultDistribution({ range, filter })}\n    />\n  );\n};\n\ninterface VaultSizeRange {\n  min?: number;\n  max?: number;\n}\nconst VAULT_SIZE_RANGES: VaultSizeRange[] = [\n  {\n    max: 0.25\n  },\n  {\n    min: 0.25,\n    max: 0.5\n  },\n  {\n    min: 0.5,\n    max: 0.75\n  },\n  {\n    min: 0.75,\n    max: 1\n  },\n  {\n    min: 1\n  }\n];\n\nexport const VaultDistributionRows = (filter: MatrixFilter) => (\n  <>\n    {VAULT_SIZE_RANGES.map((range, index) => (\n      <PercentVaultSizeRow filter={filter} range={range} key={index} />\n    ))}\n  </>\n);\n","import { MatrixFilter, filterFlatRows } from './data';\n\nimport { DataPoint } from '../db';\nimport { MatrixRow } from './components';\nimport { round } from '../formulas';\n\nexport const getVaultVals = ({\n  filter,\n  reducer\n}: {\n  filter: MatrixFilter;\n  reducer: (points: DataPoint[]) => number;\n}): number[] =>\n  filterFlatRows(filter).map((points: DataPoint[]) =>\n    round(reducer(points), 5)\n  );\n\nexport const getVaultAverages = (filter: MatrixFilter): number[] =>\n  getVaultVals({\n    filter,\n    reducer: (points: DataPoint[]) =>\n      points.reduce((memo, point) => memo + point.vault, 0) / points.length || 0\n  });\n\ntype lessGreater = (a: number, b: number) => boolean;\nconst lessThan: lessGreater = (a: number, b: number) => a < b;\nconst greaterThan: lessGreater = (a: number, b: number) => a > b;\n\nexport const getVaultMaxMin = ({\n  filter,\n  comparator\n}: {\n  filter: MatrixFilter;\n  comparator: lessGreater;\n}): number[] =>\n  getVaultVals({\n    filter,\n    reducer: (points: DataPoint[]) =>\n      points.reduce(\n        (memo, point) =>\n          memo === 0 || comparator(memo, point.vault) ? point.vault : memo,\n        0\n      )\n  });\n\nexport const getVaultMaxs = (filter: MatrixFilter): number[] =>\n  getVaultMaxMin({ filter, comparator: lessThan });\n\nexport const getVaultMins = (filter: MatrixFilter): number[] =>\n  getVaultMaxMin({ filter, comparator: greaterThan });\n\nconst VaultSizeRow = ({\n  label,\n  values\n}: {\n  label: string;\n  values: number[];\n}) => (\n  <MatrixRow\n    label={`${label} Vault`}\n    title={`${label} Vault size in millimetres`}\n    values={values}\n  />\n);\n\ninterface VaultStat {\n  label: string;\n  func: (filter: MatrixFilter) => number[];\n}\nconst VAULT_STATS: VaultStat[] = [\n  {\n    label: 'Average',\n    func: getVaultAverages\n  },\n  {\n    label: 'Minimum',\n    func: getVaultMins\n  },\n  {\n    label: 'Maximum',\n    func: getVaultMaxs\n  }\n];\n\nexport const VaultStatRows = (filter: MatrixFilter) => (\n  <>\n    {VAULT_STATS.map((stat) => (\n      <VaultSizeRow\n        key={stat.label}\n        label={stat.label}\n        values={stat.func(filter)}\n      />\n    ))}\n  </>\n);\n","import { DividerRow, MatrixRow } from './components';\nimport {\n  LENS_SIZES,\n  MYOPIA_LEVELS,\n  MatrixFilter,\n  NUM_DATA_POINTS,\n  filterFlatRows\n} from './data';\n\nimport { DataPoint } from '../db';\nimport { VaultDistributionRows } from './VaultDistributionRows';\nimport { VaultStatRows } from './VaultStatRows';\n\nexport const getNumEyes = (filter: MatrixFilter): number[] =>\n  filterFlatRows(filter).map((rows: DataPoint[]) => rows.length);\n\nconst LensHeaderCol = ({ label }: { label: string }) => (\n  <th scope=\"col\" colSpan={MYOPIA_LEVELS.length} className=\"text-right\">\n    {label}\n  </th>\n);\n\nconst MyopiaHeaderCol = ({\n  label,\n  title\n}: {\n  label: string;\n  title: string;\n}) => (\n  <th scope=\"col\" className=\"text-right\" title={title}>\n    {label}\n  </th>\n);\n\nconst MyopiaHeaderColGroup = () => (\n  <>\n    {MYOPIA_LEVELS.map((level) => (\n      <MyopiaHeaderCol label={level.label} title={level.title} key={level.id} />\n    ))}\n  </>\n);\n\nexport const Matrix = (filter: MatrixFilter) => (\n  <>\n    <table className=\"table table-bordered table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Lens Size</th>\n          {LENS_SIZES.map((size) => (\n            <LensHeaderCol label={size.label} key={size.id} />\n          ))}\n        </tr>\n        <tr>\n          <th scope=\"col\">Myopia</th>\n          {LENS_SIZES.map((size) => (\n            <MyopiaHeaderColGroup key={size.id} />\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <MatrixRow\n          label=\"Number of Eyes\"\n          title=\"Number of Eyes matching the column criteria\"\n          values={getNumEyes(filter)}\n        />\n        <DividerRow />\n        <VaultStatRows {...filter} />\n        <DividerRow />\n        <VaultDistributionRows {...filter} />\n      </tbody>\n    </table>\n    <ul className=\"list-inline\">\n      <li className=\"list-inline-item\">\n        <strong>Angle to Angle (AtA): </strong>\n        {filter.ata} mm.\n      </li>\n      <li className=\"list-inline-item\">\n        <strong>Crystaline Lens Rise (CLR): </strong>\n        {filter.clr} mm.\n      </li>\n      <li className=\"list-inline-item\">\n        <strong>Number of matching Eyes: </strong>\n        {getNumEyes(filter).reduce((acc, a) => acc + a, 0)}/{NUM_DATA_POINTS}.\n      </li>\n    </ul>\n  </>\n);\n","export const NavBar = ({ resetForm }: { resetForm: (a?: any) => void }) => (\n  <nav className=\"navbar navbar-expand navbar-dark bg-dark fixed-top\">\n    <div className=\"container\">\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL || '/'}>\n        ICL Size Calc\n      </a>\n      <form className=\"form-inline\">\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={() => {\n            resetForm();\n          }}\n        >\n          Reset\n        </button>\n      </form>\n    </div>\n  </nav>\n);\n","export type Zone = {\n  readonly min: number;\n  readonly max: number;\n  readonly color: string;\n};\n\nexport type Pointer = {\n  readonly color: string;\n  readonly height: number;\n  readonly width: number;\n};\n\nexport type Options = {\n  readonly divisionColor?: string;\n  readonly divisions?: number;\n  readonly divisionHeight?: number;\n  readonly pointer?: Pointer;\n  readonly subDivisions?: number;\n  readonly subDivisionHeight?: number;\n  readonly value?: number;\n  readonly zones?: Zone[];\n  readonly zoneHeight?: number;\n};\n\nconst defaultZoneHeight = 12;\nconst defaultDivisions = 5;\nconst defaultDivisionHeight = 18;\nconst defaultDivisionColor = '#000000';\nconst defaultSubDivisions = 1;\nconst defaultSubDivisionHeight = 8;\n\nconst defaultZones = [\n  {\n    min: 0,\n    max: 3,\n    color: 'green'\n  },\n  {\n    min: 3,\n    max: 5,\n    color: 'yellow'\n  },\n  {\n    min: 5,\n    max: 6,\n    color: 'red'\n  }\n];\n\nconst defaultPointer = {\n  color: 'red',\n  height: 18,\n  width: 5\n};\n\ntype Style = {\n  readonly [key: string]: string;\n};\n\nconst createDiv = ({ styles = {} }: { readonly styles?: Style }) => {\n  const div = document.createElement('div');\n  Object.keys(styles).forEach((key) => div.style.setProperty(key, styles[key]));\n  return div;\n};\n\nconst createDivision = ({\n  division,\n  divisions,\n  height\n}: {\n  readonly division: number;\n  readonly divisions: number;\n  readonly height: number;\n}) => {\n  const div = createDiv({\n    styles: {\n      position: 'absolute',\n      top: '0px',\n      height: `${height}px`,\n      'border-left': '1px solid #000000'\n    }\n  });\n  if (division < divisions) {\n    div.style.setProperty('left', `${(division / divisions) * 100}%`);\n  } else {\n    div.style.setProperty('right', '0%');\n  }\n  return div;\n};\n\nconst createSubDivision = ({\n  subDivision,\n  totalSubDivisions,\n  subDivisionHeight\n}: {\n  readonly subDivision: number;\n  readonly totalSubDivisions: number;\n  readonly subDivisionHeight: number;\n}) => {\n  return createDiv({\n    styles: {\n      position: `absolute`,\n      top: '0px',\n      left: `${(subDivision / totalSubDivisions) * 100}%`,\n      height: `${subDivisionHeight}px`,\n      'border-left': '1px solid #000000'\n    }\n  });\n};\n\nconst createZone = ({\n  zone,\n  height\n}: {\n  readonly zone: Zone;\n  readonly height: number;\n}): HTMLElement => {\n  return createDiv({\n    styles: {\n      height: `${height}px`,\n      flex: `${zone.max - zone.min}`, // TODO: make sure decimals are not used\n      'background-color': zone.color\n    }\n  });\n};\n\nconst createPointer = (pointer: Pointer): SVGElement => {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('width', `${pointer.width}`);\n  svg.setAttribute('height', `${pointer.height}`);\n  svg.style.setProperty('position', 'absolute');\n\n  const triangle = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'polygon'\n  );\n  triangle.setAttribute(\n    'points',\n    `${pointer.width / 2},0 0,${pointer.height} ${pointer.width},${\n      pointer.height\n    }`\n  );\n  triangle.setAttribute('fill', '#ff0000');\n  svg.appendChild(triangle);\n  return svg;\n};\n\nexport class LinearGauge {\n  readonly el: HTMLElement;\n  zones: Zone[];\n  zoneHeight: number;\n  value?: number;\n  pointer: Pointer;\n  container?: HTMLDivElement;\n  divisions: number;\n  divisionHeight: number;\n  subDivisionHeight: number;\n  subDivisions: number;\n\n  constructor(htmlElement: HTMLElement) {\n    this.el = htmlElement;\n    this.zones = [];\n    this.zoneHeight = defaultZoneHeight;\n    this.pointer = defaultPointer;\n    this.divisions = defaultDivisions;\n    this.divisionHeight = defaultDivisionHeight;\n    this.subDivisions = defaultSubDivisions;\n    this.subDivisionHeight = defaultSubDivisionHeight;\n  }\n\n  renderPointer(value?: number) {\n    const min = this.zones[0].min;\n    const max = this.zones[this.zones.length - 1].max;\n\n    if (value !== undefined && value >= min && value <= max) {\n      const totalRange = max - min;\n      const valuePercent = ((value - min) / totalRange) * 100;\n\n      const pointerSvg = createPointer(this.pointer);\n      pointerSvg.style.setProperty(\n        'left',\n        `calc(${valuePercent}% - ${Math.floor(this.pointer.width / 2)}px)`\n      );\n      pointerSvg.style.setProperty('top', `${this.zoneHeight}px`);\n      this.container?.appendChild(pointerSvg);\n    }\n  }\n\n  renderSubDivisions() {\n    const totalSubDivisions = this.divisions * this.subDivisions;\n    Array(totalSubDivisions)\n      .fill(0)\n      .map((_, sub) => sub)\n      .filter((sub) => sub % this.subDivisions !== 0)\n      .map((subDivision) =>\n        createSubDivision({\n          subDivision: subDivision,\n          totalSubDivisions: totalSubDivisions,\n          subDivisionHeight: this.subDivisionHeight\n        })\n      )\n      .forEach((div) => this.container?.appendChild(div));\n  }\n\n  renderDivisions() {\n    Array(this.divisions + 1)\n      .fill(0)\n      .map((_, division) =>\n        createDivision({\n          division: division,\n          divisions: this.divisions,\n          height: this.divisionHeight\n        })\n      )\n      .forEach((div) => this.container?.appendChild(div));\n  }\n\n  setOptions({\n    divisionColor = defaultDivisionColor,\n    divisions = defaultDivisions,\n    divisionHeight = defaultDivisionHeight,\n    pointer = defaultPointer,\n    subDivisions = defaultSubDivisions,\n    subDivisionHeight = defaultSubDivisionHeight,\n    value,\n    zones = defaultZones,\n    zoneHeight = defaultZoneHeight\n  }: Options): LinearGauge {\n    const container = createDiv({\n      styles: {\n        'border-top': `1px solid ${divisionColor}`,\n        display: 'flex',\n        position: 'relative',\n        height: `${Math.max(divisionHeight, zoneHeight + pointer.height)}px`\n      }\n    });\n\n    this.container = container;\n    this.zones = zones;\n    this.zoneHeight = zoneHeight;\n    this.pointer = pointer;\n    this.divisions = divisions;\n    this.divisionHeight = divisionHeight;\n    this.subDivisions = subDivisions;\n    this.subDivisionHeight = subDivisionHeight;\n\n    // Pointer\n    this.renderPointer(value);\n\n    // Sub-Divisions\n    this.renderSubDivisions();\n\n    // Divisions\n    this.renderDivisions();\n\n    // Zones\n    zones\n      .map((z) => createZone({ zone: z, height: zoneHeight }))\n      .forEach((d) => container.appendChild(d));\n\n    this.el.appendChild(container);\n\n    return this;\n  }\n\n  dispose(): HTMLElement {\n    this.el.childNodes.forEach((node) => this.el.removeChild(node));\n    // while (this.el.lastChild) {\n    //   this.el.removeChild(this.el.lastChild);\n    // }\n    // this.el.textContent = '';\n    return this.el;\n  }\n}\n","import { LinearGauge, Zone } from './linear-gauge';\nimport { useLayoutEffect, useRef } from 'react';\n\nimport { number } from '@amcharts/amcharts4/core';\nimport { string } from 'yup/lib/locale';\n\n/**\n * https://stackoverflow.com/questions/48719873/how-to-get-median-and-quartiles-percentiles-of-an-array-in-javascript-or-php\n *\n * @param {number[]} values - Dataset\n * @param {number} quantile - Quantile [0.0, 1.0]\n * @returns {number}\n */\nexport const quantile = (values: number[], quantile: number) => {\n  const sorted = values.sort((a, b) => a - b);\n  const pos = (sorted.length - 1) * quantile;\n  const base = Math.floor(pos);\n  const rest = pos - base;\n  if (sorted[base + 1] !== undefined) {\n    return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\n  }\n  return sorted[base];\n};\n\nexport type Quantile = {\n  readonly value: number;\n  readonly color: string;\n};\n\nconst QUANTILES: Quantile[] = [\n  {\n    value: 0.025,\n    color: getComputedStyle(document.body).getPropertyValue('--danger')\n  },\n  {\n    value: 0.25,\n    color: getComputedStyle(document.body).getPropertyValue('--warning')\n  },\n  {\n    value: 0.75,\n    color: getComputedStyle(document.body).getPropertyValue('--success')\n  },\n  {\n    value: 0.975,\n    color: getComputedStyle(document.body).getPropertyValue('--warning')\n  },\n  {\n    value: 1.0,\n    color: getComputedStyle(document.body).getPropertyValue('--danger')\n  }\n];\n\nexport const buildZones = ({\n  values,\n  quantiles = QUANTILES\n}: {\n  values: number[];\n  quantiles?: Quantile[];\n}): Zone[] => {\n  const qq = quantiles.map((q) => quantile(values, q.value));\n  return quantiles.map((q, index) => {\n    if (index === 0) {\n      return {\n        min: Math.min(...values),\n        max: qq[0],\n        color: q.color\n      };\n    }\n    return {\n      min: qq[index - 1],\n      max: qq[index],\n      color: q.color\n    };\n  });\n};\n\nexport const Gauge = ({\n  value,\n  values\n}: {\n  value: number;\n  values: number[];\n}) => {\n  const container = useRef<HTMLDivElement>(null);\n\n  /* istanbul ignore next */\n  useLayoutEffect(() => {\n    if (container.current === null) {\n      return;\n    }\n\n    let x: LinearGauge = new LinearGauge(container.current);\n    x.setOptions({\n      divisions: 5,\n      subDivisions: 2,\n      zones: buildZones({ values: values }),\n      value: value\n    });\n\n    return () => {\n      x.dispose();\n    };\n  }, []);\n\n  return (\n    <div style={{ marginLeft: '71px', marginRight: '15px' }} ref={container} />\n  );\n};\n","import * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\n\nimport { useLayoutEffect, useRef } from 'react';\n\nimport { HistogramEntry } from '../db';\n\nam4core.options.queue = true;\n\nexport const Histogram = ({\n  data,\n  title\n}: {\n  data: HistogramEntry[];\n  title: string;\n}) => {\n  const chart = useRef<am4charts.XYChart>();\n  const ref = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Create chart instance\n\n    let x: am4charts.XYChart = am4core.create(\n      ref.current || undefined,\n      am4charts.XYChart\n    );\n\n    let t = x.titles.create();\n    t.text = title;\n    t.marginBottom = 22;\n    t.fontSize = '1rem';\n\n    // Add data\n    x.data = data;\n\n    // Create axes\n    const categoryAxis = x.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = 'from';\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 30;\n\n    const valueAxis = x.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = 'Number of Eyes';\n    valueAxis.min = 0;\n    valueAxis.max = Math.max(...[100, ...data.map((d) => d.count)]);\n\n    // Create series\n    const series = x.series.push(new am4charts.ColumnSeries());\n    const fill = getComputedStyle(document.body).getPropertyValue(\n      '--secondary' // Bootstrap 4\n    );\n    const stroke = getComputedStyle(document.body).getPropertyValue(\n      '--dark' // Bootstrap 4\n    );\n    series.columns.template.fill = am4core.color(fill.trim());\n    series.columns.template.stroke = am4core.color(stroke.trim());\n    series.dataFields.valueY = 'count';\n    series.dataFields.categoryX = 'from';\n    series.columns.template.tooltipText =\n      'Interval: [bold][[{from}, {to}[[[/]\\nNumber of Eyes: [bold]{count}[/]';\n\n    chart.current = x;\n\n    return () => {\n      x.dispose();\n    };\n  }, []);\n\n  return <div ref={ref} style={{ width: '100%', height: '300px' }} />;\n};\n","import { HISTOGRAM_DATA, HistogramEntry, VALUES } from '../db';\n\nimport { Gauge } from './Gauge';\nimport { Histogram } from './Histogram';\n\nconst Graph = ({\n  title,\n  value,\n  histogramSeries,\n  gaugeValues\n}: {\n  title: string;\n  value: number;\n  histogramSeries: HistogramEntry[];\n  gaugeValues: number[];\n}) => (\n  <>\n    <div className=\"col-md-4\">\n      <Histogram title={title} data={histogramSeries} />\n      <Gauge value={value} values={gaugeValues} />\n    </div>\n  </>\n);\n\nexport const Normality = ({\n  ata,\n  clr,\n  acq,\n  aca,\n  wtw\n}: {\n  ata: number;\n  clr: number;\n  acq: number;\n  aca: number;\n  wtw: number;\n}) => (\n  <>\n    <div className=\"row\">\n      <Graph\n        title={'Angle to Angle - AtA (mm)'}\n        histogramSeries={HISTOGRAM_DATA.ata}\n        value={ata}\n        gaugeValues={VALUES.ATA}\n      />\n      <Graph\n        title={'Crystalline Lens Rise - CLR (μm)'}\n        histogramSeries={HISTOGRAM_DATA.clr}\n        value={clr}\n        gaugeValues={VALUES.CLR}\n      />\n      <Graph\n        title={'Internal Anterior Chamber Depth - ACQ (mm)'}\n        histogramSeries={HISTOGRAM_DATA.acq}\n        value={acq}\n        gaugeValues={VALUES.ACQ}\n      />\n    </div>\n    <div className=\"row\">\n      <Graph\n        title={'Average Anterior Chamber Angle - ACA (º)'}\n        histogramSeries={HISTOGRAM_DATA.aca}\n        value={aca}\n        gaugeValues={VALUES.ACA}\n      />\n      <Graph\n        title={'White to White - WtW (mm)'}\n        histogramSeries={HISTOGRAM_DATA.wtw}\n        value={wtw}\n        gaugeValues={VALUES.WTW}\n      />\n      <div className=\"col-md-4\"></div>\n    </div>\n  </>\n);\n","export const getClassName = ({\n  error,\n  touched,\n  base = ['form-control'],\n  invalid = ['is-invalid'],\n  valid = []\n}: {\n  error?: string;\n  touched?: boolean;\n  base?: Array<string>;\n  invalid?: Array<string>;\n  valid?: Array<string>;\n}): string => [...base, ...(error && touched ? invalid : valid)].join(' ');\n","import * as React from 'react';\n\nimport { ErrorMessage, Field } from 'formik';\nimport { getClassName } from '../util';\n\ntype Unit = 'mm' | 'nm' | 'º' | 'dpt' | 'μm';\n\nconst UNITS: Map<Unit, string> = new Map([\n  ['mm', 'millimetres'], // 10^(-3) metres\n  ['μm', 'micrometres'], // 10^(-6) metres (aka \"micron\", or \"micra\")\n  ['nm', 'nanometres'], // 10^(-9) metres\n  ['º', 'degrees'],\n  ['dpt', 'dioptres']\n]);\n\ninterface FieldWithUnitProps {\n  label: string;\n  name: string;\n  unit: Unit;\n  touched?: boolean;\n  placeholder?: string;\n  error?: string;\n  value?: number;\n  disabled?: boolean;\n}\n\nconst UnitSufix = ({ unit }: { unit: Unit }) => (\n  <div className=\"input-group-append\">\n    <span className=\"input-group-text\" title={UNITS.get(unit)}>\n      {unit}\n    </span>\n  </div>\n);\n\nexport const FieldWithUnit: React.FC<FieldWithUnitProps> = ({\n  label,\n  name,\n  unit,\n  placeholder,\n  error,\n  touched,\n  value,\n  disabled\n}) => {\n  return (\n    <div className={'form-group row'}>\n      <label htmlFor={name + 'field'} className=\"col-sm-6 col-form-label\">\n        {label}\n      </label>\n      <div className=\"col-sm-6\">\n        <div className=\"input-group\">\n          {disabled ? (\n            <input\n              name={name}\n              value={value}\n              className=\"form-control text-right\"\n              disabled={true}\n            />\n          ) : (\n            <Field\n              type=\"number\"\n              name={name}\n              className={getClassName({\n                error: error,\n                touched: touched,\n                base: ['form-control', 'text-right']\n              })}\n              placeholder={placeholder}\n              autoComplete=\"off\"\n            />\n          )}\n          <UnitSufix unit={unit} />\n          <ErrorMessage\n            name={name}\n            component=\"div\"\n            className=\"invalid-feedback\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const Biometrics = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'biometrics'>>) => (\n  <>\n    <h4>Biometrics</h4>\n    <FieldWithUnit\n      label=\"Angle to Angle (AtA)\"\n      name=\"biometrics.ata\"\n      unit=\"mm\"\n      error={errors.biometrics?.ata}\n      touched={touched.biometrics?.ata}\n    />\n    <FieldWithUnit\n      label=\"White to White (WtW)\"\n      name=\"biometrics.wtw\"\n      unit=\"mm\"\n      error={errors.biometrics?.wtw}\n      touched={touched.biometrics?.wtw}\n    />\n    <FieldWithUnit\n      label=\"Crystaline Lens Rise (CLR)\"\n      name=\"biometrics.clr\"\n      unit=\"μm\"\n      error={errors.biometrics?.clr}\n      touched={touched.biometrics?.clr}\n    />\n    <FieldWithUnit\n      label=\"Internal Anterior Chamber Depth (ACQ)\"\n      name=\"biometrics.acq\"\n      unit=\"mm\"\n      error={errors.biometrics?.acq}\n      touched={touched.biometrics?.acq}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle nasal (ACAn)\"\n      name=\"biometrics.acan\"\n      unit=\"º\"\n      error={errors.biometrics?.acan}\n      touched={touched.biometrics?.acan}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle temporal (ACAt)\"\n      name=\"biometrics.acat\"\n      unit=\"º\"\n      error={errors.biometrics?.acat}\n      touched={touched.biometrics?.acat}\n    />\n    <FieldWithUnit\n      label=\"Keratometry - Flat Meridian (Kf)\"\n      name=\"biometrics.kf\"\n      unit=\"dpt\"\n      error={errors.biometrics?.kf}\n      touched={touched.biometrics?.kf}\n    />\n    <FieldWithUnit\n      label=\"Central Corneal Thickness (CCT)\"\n      name=\"biometrics.cct\"\n      unit=\"μm\"\n      error={errors.biometrics?.cct}\n      touched={touched.biometrics?.cct}\n    />\n  </>\n);\n","import {\n  calcIclAxis,\n  calcIclCylindre,\n  calcIclCylindreEquivalent,\n  calcIclSphere\n} from '../formulas';\n\nimport { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const ICLPower = ({\n  errors,\n  touched,\n  values\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <>\n    <h4>ICL Power</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"iclSphere\"\n      value={calcIclSphere({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"iclCylindre\"\n      value={calcIclCylindre({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"iclAxis\"\n      value={calcIclAxis(values.spectacleRefraction.axis)}\n      unit=\"º\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Spherical Equivalent (SE)\"\n      value={calcIclCylindreEquivalent({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      name=\"iclSphericalEquivalent\"\n      unit=\"º\"\n      disabled={true}\n    />\n  </>\n);\n","import { ErrorMessage, Field, FormikState } from 'formik';\n\nimport { ICLInputs } from '../types';\nimport { differenceInYears } from 'date-fns';\nimport { getClassName } from '../util';\n\nexport const calcAge = ({\n  dateOfBirth,\n  error\n}: {\n  dateOfBirth?: string;\n  error?: string;\n}): number =>\n  (dateOfBirth &&\n    !error &&\n    differenceInYears(new Date(), new Date(dateOfBirth))) ||\n  0;\n\nexport const Info = ({\n  errors,\n  values,\n  touched\n}: FormikState<Pick<ICLInputs, 'patient'>>) => (\n  <>\n    <h4>Information</h4>\n    <div className=\"form-row\">\n      <div className=\"form-group col-md-4\">\n        <label htmlFor=\"fieldName\">Name</label>\n        <Field\n          name=\"patient.name\"\n          className=\"form-control\"\n          id=\"fieldName\"\n          placeholder=\"enter patient name\"\n          autoComplete=\"off\"\n        />\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldDateOfBirth\">Date of Birth</label>\n        <Field\n          name=\"patient.dateOfBirth\"\n          className={getClassName({\n            error: errors.patient?.dateOfBirth,\n            touched: touched.patient?.dateOfBirth\n          })}\n          id=\"fieldDateOfBirth\"\n          placeholder=\"yyyy-mm-dd\"\n          autoComplete=\"off\"\n          maxLength={10}\n        />\n        <ErrorMessage\n          name=\"patient.dateOfBirth\"\n          component=\"div\"\n          className=\"invalid-feedback\"\n        />\n      </div>\n      <div className=\"form-group col-md-2\">\n        <label htmlFor=\"fieldAge\">Age</label>\n        <div className=\"input-group\">\n          <input\n            name=\"age\"\n            className=\"form-control text-right\"\n            id=\"fieldAge\"\n            disabled={true}\n            value={calcAge({\n              dateOfBirth: values.patient?.dateOfBirth,\n              error: errors.patient?.dateOfBirth\n            })}\n          />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\" title=\"years\">\n              yr.\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldEye\">Eye</label>\n        <Field\n          as=\"select\"\n          name=\"patient.eye\"\n          className=\"form-control\"\n          id=\"fieldEye\"\n        >\n          <option value=\"\">Select...</option>\n          <option value=\"left\">Left</option>\n          <option value=\"right\">Right</option>\n        </Field>\n      </div>\n    </div>\n  </>\n);\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const SpectacleRefraction = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <>\n    <h4>Spectacle Refraction</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"spectacleRefraction.sphere\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.sphere}\n      touched={touched.spectacleRefraction?.sphere}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"spectacleRefraction.cylindre\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.cylindre}\n      touched={touched.spectacleRefraction?.cylindre}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"spectacleRefraction.axis\"\n      unit=\"º\"\n      error={errors.spectacleRefraction?.axis}\n      touched={touched.spectacleRefraction?.axis}\n    />\n    <FieldWithUnit\n      label=\"Vertex\"\n      name=\"spectacleRefraction.vertex\"\n      unit=\"mm\"\n      error={errors.spectacleRefraction?.vertex}\n      touched={touched.spectacleRefraction?.vertex}\n    />\n  </>\n);\n","import { Biometrics } from './Biometrics';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\nimport { ICLPower } from './ICLPower';\nimport { Info } from './Info';\nimport { SpectacleRefraction } from './SpectacleRefraction';\n\nexport const Patient = ({\n  errors,\n  touched,\n  values,\n  ...otherProps\n}: FormikState<ICLInputs>) => (\n  <>\n    <Info values={values} errors={errors} touched={touched} {...otherProps} />\n    <hr />\n    <div className=\"form-row\">\n      <div className=\"col-md-4\">\n        <Biometrics\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <SpectacleRefraction\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <ICLPower\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n    </div>\n  </>\n);\n","export const Regression = () => <>Regression is coming soon...</>;\n","import { NavLink } from 'react-router-dom';\n\ninterface Link {\n  to: string;\n  label: string;\n}\n\nconst LINKS: Link[] = [\n  {\n    to: '/',\n    label: 'Patient'\n  },\n  {\n    to: '/normality',\n    label: 'Biometric Normality'\n  },\n  {\n    to: '/matrix',\n    label: 'Floating Matrix'\n  },\n  {\n    to: '/regression',\n    label: 'Regression'\n  }\n];\n\nexport const TabLinks = () => (\n  <ul className=\"nav nav-pills\" style={{ marginBottom: '1rem' }}>\n    {LINKS.map((link, index) => (\n      <li className=\"nav-item\" key={index}>\n        <NavLink\n          exact={true}\n          className=\"nav-link\"\n          activeClassName=\"active\"\n          to={link.to}\n        >\n          {link.label}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n","import { Formik, FormikState } from 'formik';\nimport { ICLInputs, INITIAL_VALUES } from './types';\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\n\nimport { Footer } from './misc/Footer';\nimport { ICLSchema } from './ICLSchema';\nimport { Matrix } from './matrix';\nimport { NavBar } from './misc/NavBar';\nimport { Normality } from './normality';\nimport { Patient } from './patient';\nimport { Regression } from './regression';\nimport { TabLinks } from './misc/TabLinks';\n\nconst TabContent = ({\n  errors,\n  touched,\n  values,\n  ...otherProps\n}: FormikState<ICLInputs>) => (\n  <Switch>\n    <Route path=\"/normality\">\n      <Normality\n        ata={values.biometrics.ata}\n        clr={values.biometrics.clr}\n        acq={values.biometrics.acq}\n        aca={(values.biometrics.acan + values.biometrics.acat) / 2.0}\n        wtw={values.biometrics.wtw}\n      />\n    </Route>\n    <Route path=\"/matrix\">\n      <Matrix\n        ata={values.biometrics.ata}\n        clr={values.biometrics.clr * 0.001} // CLR in Matrix is in millimetres\n      />\n    </Route>\n    <Route path=\"/regression\">\n      <Regression />\n    </Route>\n    <Route path=\"/\">\n      <Patient\n        values={values}\n        errors={errors}\n        touched={touched}\n        {...otherProps}\n      />\n    </Route>\n  </Switch>\n);\n\nexport const ICLContainer = () => (\n  <Formik\n    initialValues={INITIAL_VALUES}\n    validationSchema={ICLSchema}\n    onSubmit={\n      /* istanbul ignore next */\n      () => {}\n    }\n  >\n    {({ errors, touched, values, resetForm, ...otherProps }) => (\n      <>\n        <NavBar resetForm={resetForm} />\n        <div className=\"container\">\n          <Router hashType=\"noslash\">\n            <TabLinks />\n            <hr />\n            <TabContent\n              values={values}\n              errors={errors}\n              touched={touched}\n              {...otherProps}\n            />\n          </Router>\n        </div>\n        <Footer />\n      </>\n    )}\n  </Formik>\n);\n","import { ICLContainer } from './ICLContainer';\n\nconst App = () => <ICLContainer />;\n\nexport default App;\n","import './App.scss';\n\nimport * as Sentry from '@sentry/react';\n\nimport App from './App';\nimport { Integrations } from '@sentry/tracing';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn:\n      'https://2e937d9ae4044696992e8d4afba8d9b5@o551236.ingest.sentry.io/5674476',\n    integrations: [new Integrations.BrowserTracing()],\n\n    // Set tracesSampleRate to 1.0 to capture 100%\n    // of transactions for performance monitoring.\n    // We recommend adjusting this value in production\n    tracesSampleRate: 1.0\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}