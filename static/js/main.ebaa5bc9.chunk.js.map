{"version":3,"sources":["types.ts","misc/Footer.tsx","ICLSchema.ts","db.ts","matrix/data.ts","matrix/components.tsx","formulas.ts","matrix/VaultDistributionRows.tsx","matrix/VaultStatRows.tsx","matrix/index.tsx","misc/NavBar.tsx","normality/linear-gauge/index.ts","normality/Gauge.tsx","normality/Histogram.tsx","normality/index.tsx","util.ts","patient/FieldWithUnit.tsx","patient/Biometry.tsx","patient/ICLPower.tsx","patient/Info.tsx","patient/SpectacleRefraction.tsx","patient/index.tsx","regression/index.tsx","misc/TabLinks.tsx","ICLContainer.tsx","App.tsx","index.tsx"],"names":["INITIAL_VALUES","patient","name","dateOfBirth","eye","biometry","ata","wtw","clr","acd","acan","acat","kf","cct","spectacleRefraction","sphere","cylindre","axis","vertex","Footer","className","style","fontSize","color","href","process","target","rel","INVALID_ERROR","REQUIRED_ERROR","ACD_INVALID_ERROR","KF_INVALID_ERROR","CCT_INVALID_ERROR","SPHERE_INVALID_ERROR","CYLINDRE_INVALID_ERROR","ICLSchema","Yup","shape","optional","typeError","required","min","max","DATA_POINTS","csv","split","reduce","memo","row","map","col","Number","filter","isNaN","mapCsvToRows","age","iclSize","iclSe","aca","vault","keratometry","VALUES","ATA","point","CLR","ACD","ACA","WTW","getHistogramData","source","Math","apply","step","data","Array","from","keys","i","to","count","forEach","value","item","find","el","HISTOGRAM_DATA","NUM_DATA_POINTS","length","LENS_SIZES","label","id","MYOPIA_LEVELS","title","Infinity","getDataPoints","lens","myopia","dataPoints","filterFlatRows","memoLens","memoMyopia","level","filterPoint","MatrixRow","values","scope","val","index","DividerRow","colSpan","FACTOR0","FACTOR1","round","decimals","pow","calcPosMeridian","calcNegMeridian","calcIclSphere","calcIclCylindre","posMer","negMer","calcIclCylindreEquivalent","negCylindre","getVaultDistribution","range","points","undefined","countByVaultRange","FORMATTERS","PercentVaultSizeRow","a","formatVaultSizeTexts","VAULT_SIZE_RANGES","VaultDistributionRows","getVaultVals","reducer","lessThan","b","greaterThan","getVaultMaxMin","comparator","VaultSizeRow","VAULT_STATS","func","VaultStatRows","stat","getNumEyes","rows","LensHeaderCol","MyopiaHeaderCol","MyopiaHeaderColGroup","Matrix","size","acc","NavBar","resetForm","type","onClick","defaultZones","defaultPointer","height","width","createDiv","styles","div","document","createElement","Object","key","setProperty","LinearGauge","htmlElement","zones","zoneHeight","pointer","container","divisions","divisionHeight","subDivisionHeight","subDivisions","this","valuePercent","pointerSvg","svg","createElementNS","setAttribute","triangle","appendChild","createPointer","floor","totalSubDivisions","fill","_","sub","subDivision","position","top","left","createSubDivision","division","createDivision","divisionColor","display","renderPointer","renderSubDivisions","renderDivisions","z","zone","flex","createZone","d","childNodes","node","removeChild","QUANTILES","getComputedStyle","body","getPropertyValue","buildZones","quantiles","qq","q","quantile","sorted","sort","pos","base","rest","Gauge","useRef","useLayoutEffect","current","x","setOptions","dispose","marginLeft","marginRight","ref","am4core","queue","Histogram","chart","am4charts","t","titles","create","text","marginBottom","categoryAxis","xAxes","push","dataFields","category","renderer","grid","template","location","minGridDistance","valueAxis","yAxes","series","stroke","columns","trim","valueY","categoryX","tooltipText","Graph","histogramSeries","gaugeValues","Normality","getClassName","error","touched","invalid","valid","join","UNITS","Map","UnitSufix","unit","get","FieldWithUnit","placeholder","disabled","htmlFor","autoComplete","component","Biometry","errors","ICLPower","calcAge","differenceInYears","Date","Info","maxLength","as","SpectacleRefraction","Patient","otherProps","Regression","LINKS","TabLinks","link","exact","activeClassName","TabContent","path","ICLContainer","initialValues","validationSchema","onSubmit","hashType","App","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ebaa5bc9.chunk.js","sourcesContent":["export interface PatientInfo {\n  name: string;\n  dateOfBirth: string;\n  eye: 'left' | 'right';\n}\n\nexport interface Biometry {\n  ata: number;\n  wtw: number;\n  clr: number;\n  acd: number;\n  acan: number;\n  acat: number;\n  kf: number;\n  cct: number;\n}\n\nexport interface SpectacleRefraction {\n  sphere: number;\n  cylindre: number;\n  axis: number;\n  vertex: number;\n}\n\nexport interface ICLInputs {\n  patient: PatientInfo;\n  biometry: Biometry;\n  spectacleRefraction: SpectacleRefraction;\n}\n\nexport const INITIAL_VALUES: ICLInputs = {\n  patient: {\n    name: '',\n    dateOfBirth: '',\n    eye: 'left'\n  },\n  biometry: {\n    ata: 0,\n    wtw: 0,\n    clr: 0,\n    acd: 0,\n    acan: 0,\n    acat: 0,\n    kf: 0,\n    cct: 0\n  },\n  spectacleRefraction: {\n    sphere: 0,\n    cylindre: 0,\n    axis: 0,\n    vertex: 0\n  }\n};\n","export const Footer = () => (\n  <footer\n    className=\"p-3 p-md-5 mt-5 bg-light text-center text-sm-left\"\n    style={{ fontSize: '0.875rem', color: '#63707c' }}\n  >\n    <div className=\"container\">\n      <ul className=\"bd-footer-links pl-0 mb-3\">\n        <li className=\"d-inline-block\">\n          <a\n            href={`https://github.com/ruipinge/icl-calc/releases/tag/v${process.env.REACT_APP_VERSION}`}\n          >\n            {`v${process.env.REACT_APP_VERSION}`}\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#instructions\">\n            Instructions\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#data\">\n            Data\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc\">GitHub</a>\n        </li>\n      </ul>\n      <p className=\"mb-0\">\n        Designed and built with love by{' '}\n        <a href=\"https://www.linkedin.com/in/pedro-serra-44697321/\">\n          Pedro Serra\n        </a>{' '}\n        and <a href=\"https://ruipinge.github.io/resume\">Rui Pinge</a>.\n      </p>\n      <p className=\"mb-0\">\n        Available under the{' '}\n        <a\n          href=\"https://github.com/ruipinge/icl-calc/blob/master/LICENSE\"\n          target=\"_blank\"\n          rel=\"license noopener noreferrer\"\n        >\n          MIT License\n        </a>{' '}\n        without any kind of warranty.\n      </p>\n      <p className=\"mb-0\">\n        The authors cannot be held responsible for any consequense of its usage.\n      </p>\n    </div>\n  </footer>\n);\n","import * as Yup from 'yup';\n\nconst ACD_MIN = 2.7,\n  ACD_MAX = 6.0,\n  KF_MIN = 35,\n  KF_MAX = 50,\n  CCT_MIN = 300,\n  CCT_MAX = 700,\n  SPHERE_MIN = -25,\n  SPHERE_MAX = 0,\n  CYLINDRE_MIN = -8,\n  CYLINDRE_MAX = 0,\n  INVALID_ERROR = 'Invalid value.',\n  REQUIRED_ERROR = 'Required value.',\n  ACD_INVALID_ERROR = `${INVALID_ERROR} [${ACD_MIN}, ${ACD_MAX}]`,\n  KF_INVALID_ERROR = `${INVALID_ERROR} [${KF_MIN}, ${KF_MAX}]`,\n  CCT_INVALID_ERROR = `${INVALID_ERROR} [${CCT_MIN}, ${CCT_MAX}]`,\n  SPHERE_INVALID_ERROR = `${INVALID_ERROR} [${SPHERE_MIN}, ${SPHERE_MAX}]`,\n  CYLINDRE_INVALID_ERROR = `${INVALID_ERROR} [${CYLINDRE_MIN}, ${CYLINDRE_MAX}]`;\n\nexport const ICLSchema = Yup.object().shape({\n  patient: Yup.object().shape({\n    dateOfBirth: Yup.date().optional().typeError('Invalid date. (yyyy-mm-dd)')\n  }),\n  biometry: Yup.object().shape({\n    ata: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    wtw: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    clr: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(-1000, INVALID_ERROR)\n      .max(1000, INVALID_ERROR),\n    acd: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(ACD_MIN, ACD_INVALID_ERROR)\n      .max(ACD_MAX, ACD_INVALID_ERROR),\n    acan: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    acat: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    kf: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(KF_MIN, KF_INVALID_ERROR)\n      .max(KF_MAX, KF_INVALID_ERROR),\n    cct: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CCT_MIN, CCT_INVALID_ERROR)\n      .max(CCT_MAX, CCT_INVALID_ERROR)\n  }),\n  spectacleRefraction: Yup.object().shape({\n    sphere: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(SPHERE_MIN, SPHERE_INVALID_ERROR)\n      .max(SPHERE_MAX, SPHERE_INVALID_ERROR),\n    cylindre: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CYLINDRE_MIN, CYLINDRE_INVALID_ERROR)\n      .max(CYLINDRE_MAX, CYLINDRE_INVALID_ERROR),\n    axis: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(180, INVALID_ERROR),\n    vertex: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(8, INVALID_ERROR)\n      .max(15, INVALID_ERROR)\n  })\n});\n","import raw from 'raw.macro';\n\nconst CSV = raw('./data.csv');\n\nexport interface DataPoint {\n  age: number;\n  iclSize: number;\n  iclSe: number;\n  acd: number;\n  cct: number;\n  ata: number;\n  clr: number;\n  aca: number;\n  vault: number;\n  wtw: number;\n  keratometry: number;\n}\n\nexport const mapCsvToRows = (csv: string): number[][] =>\n  csv\n    .split('\\n')\n    .reduce(\n      (memo, row) => [\n        ...memo,\n        row.split(';').map((col: string) => Number(col))\n      ],\n      [] as number[][]\n    )\n    .filter((row) => !!row[0] && !isNaN(row[0]));\n\nexport const mapRowsToDataPoint = (rows: number[][]): DataPoint[] =>\n  rows.map((row) => ({\n    age: row[0],\n    iclSize: row[1],\n    iclSe: row[2],\n    acd: row[3],\n    cct: row[4],\n    ata: row[5],\n    clr: row[6],\n    aca: row[7],\n    vault: row[8],\n    wtw: row[9],\n    keratometry: row[10]\n  }));\n\nconst mapCsvToDataPoint = (csv: string): DataPoint[] =>\n  mapRowsToDataPoint(mapCsvToRows(csv));\n\nexport const DATA_POINTS: DataPoint[] = mapCsvToDataPoint(CSV);\n\nexport const VALUES = {\n  ATA: DATA_POINTS.map((point) => point.ata),\n  CLR: DATA_POINTS.map((point) => point.clr),\n  ACD: DATA_POINTS.map((point) => point.acd),\n  ACA: DATA_POINTS.map((point) => point.aca),\n  WTW: DATA_POINTS.map((point) => point.wtw)\n};\n\nconst MAX_COLS = 10;\n\nexport interface HistogramEntry {\n  from: number;\n  to: number;\n  count: number;\n}\nconst getHistogramData = (source: number[]): HistogramEntry[] => {\n  // Init\n  const min = Math.min.apply(null, source);\n  const max = Math.max.apply(null, source);\n  const range = max - min;\n  const step = range / MAX_COLS;\n\n  // Create items\n  const data = Array.from(Array(MAX_COLS).keys()).map((i) => {\n    const from = min + i * step;\n    const to = min + (i + 1) * step;\n    return {\n      from: from,\n      to: to,\n      count: 0\n    };\n  });\n\n  // Calculate range of the values\n  source.forEach((value) => {\n    const item = data.find((el) => value >= el.from && value <= el.to);\n    item && item.count++;\n  });\n\n  return data;\n};\n\nexport const HISTOGRAM_DATA = {\n  ata: getHistogramData(VALUES.ATA),\n  clr: getHistogramData(VALUES.CLR),\n  acd: getHistogramData(VALUES.ACD),\n  aca: getHistogramData(VALUES.ACA),\n  wtw: getHistogramData(VALUES.WTW)\n};\n","import { DATA_POINTS, DataPoint } from '../db';\n\nconst ATA_DEVIATION: number = 0.1; // millimetres\nconst CLR_DEVIATION: number = 100; // micrometres\n\nexport const NUM_DATA_POINTS = DATA_POINTS.length;\n\nexport interface VaultRange {\n  min?: number;\n  max?: number;\n}\n\ntype LensSizeId = 'small' | 'medium' | 'large';\ninterface LensSize {\n  id: LensSizeId;\n  label: string;\n  value: number;\n}\nexport const LENS_SIZES: LensSize[] = [\n  {\n    label: '12.6 mm',\n    id: 'small',\n    value: 12.6\n  },\n  {\n    label: '13.2 mm',\n    id: 'medium',\n    value: 13.2\n  },\n  {\n    label: '13.7 mm',\n    id: 'large',\n    value: 13.7\n  }\n];\n\ntype MyopiaId = 'low' | 'moderate' | 'high';\ninterface MyopiaLevel {\n  id: MyopiaId;\n  label: string;\n  title: string;\n  min: number;\n  max: number;\n}\nexport const MYOPIA_LEVELS: MyopiaLevel[] = [\n  {\n    id: 'low',\n    label: 'Low',\n    title: 'Spherical Equivalent (SE) less than -6 dpt',\n    min: -6,\n    max: Infinity\n  },\n  {\n    id: 'moderate',\n    label: 'Moderate',\n    title: 'Spherical Equivalent (SE) between -6 dpt and -12 dpt',\n    min: -12,\n    max: -6\n  },\n  {\n    id: 'high',\n    label: 'High',\n    title: 'Spherical Equivalent (SE) greater than -12 dpt',\n    min: -Infinity,\n    max: -12\n  }\n];\n\nexport interface MatrixFilter {\n  readonly ata: number;\n  readonly clr: number;\n  readonly dataPoints?: DataPoint[];\n}\n\ninterface CacheEntry {\n  lens: LensSize;\n  myopia: MyopiaLevel;\n  dataPoints?: DataPoint[];\n}\n\nexport const getDataPoints = ({\n  lens,\n  myopia,\n  dataPoints = DATA_POINTS\n}: CacheEntry): DataPoint[] =>\n  dataPoints.filter(\n    (point) =>\n      lens.value === point.iclSize &&\n      myopia.min <= point.iclSe &&\n      point.iclSe < myopia.max\n  );\n\nexport const filterPoint = ({\n  ata,\n  clr,\n  point\n}: {\n  ata: number;\n  clr: number;\n  point: DataPoint;\n}) =>\n  ata >= point.ata - ATA_DEVIATION &&\n  ata <= point.ata + ATA_DEVIATION &&\n  clr >= point.clr - CLR_DEVIATION && // clr in db is in micrometres\n  clr <= point.clr + CLR_DEVIATION; // clr in db is in micrometres\n\nexport const filterFlatRows = ({\n  ata,\n  clr,\n  dataPoints = DATA_POINTS\n}: MatrixFilter): DataPoint[][] =>\n  LENS_SIZES.reduce(\n    (memoLens, lens) => [\n      ...memoLens,\n      ...MYOPIA_LEVELS.reduce(\n        (memoMyopia, level) => [\n          ...memoMyopia,\n          ...[\n            getDataPoints({\n              lens: lens,\n              myopia: level,\n              dataPoints: dataPoints\n            }).filter((point: DataPoint) => filterPoint({ ata, clr, point }))\n          ]\n        ],\n        [] as DataPoint[][]\n      )\n    ],\n    [] as DataPoint[][]\n  );\n","import { LENS_SIZES, MYOPIA_LEVELS } from './data';\n\nexport const MatrixRow = ({\n  label,\n  title,\n  values\n}: {\n  label: string;\n  title: string;\n  values: number[];\n}) => (\n  <tr>\n    <th scope=\"row\" title={title}>\n      {label}\n    </th>\n    {values.map((val, index) => (\n      <td key={index} className=\"text-right\">\n        {val}\n      </td>\n    ))}\n  </tr>\n);\n\nexport const DividerRow = () => (\n  <tr className=\"table-bordered\">\n    <td colSpan={LENS_SIZES.length * MYOPIA_LEVELS.length + 1} />\n  </tr>\n);\n","const FACTOR0 = -1.33756,\n  FACTOR1 = 0.9446;\n\nexport const round = (val: number, decimals: number = 2) =>\n  Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\nexport const calcPosMeridian = (sphere: number) => {\n  return FACTOR0 + FACTOR1 * sphere;\n};\n\nexport const calcNegMeridian = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return FACTOR0 + FACTOR1 * (sphere + cylindre);\n};\n\nexport const calcIclSphere = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return round(calcNegMeridian({ sphere: sphere, cylindre: cylindre }));\n};\n\nexport const calcIclCylindre = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const posMer = calcPosMeridian(sphere),\n    negMer = calcNegMeridian({ sphere: sphere, cylindre: cylindre });\n\n  return round(posMer - negMer);\n};\n\nexport const calcIclAxis = (axis: number) => {\n  if (axis >= 0 && axis < 90) {\n    return round(axis + 90, 1);\n  }\n\n  if (axis > 90 && axis <= 180) {\n    return round(axis - 90, 1);\n  }\n\n  return round(axis, 1);\n};\n\nexport const calcIclCylindreEquivalent = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const negCylindre =\n    calcNegMeridian({ sphere: sphere, cylindre: cylindre }) -\n    calcPosMeridian(sphere);\n  return round(calcPosMeridian(sphere) + negCylindre / 2);\n};\n","import { MatrixFilter, VaultRange, filterFlatRows } from './data';\n\nimport { DataPoint } from '../db';\nimport { MatrixRow } from './components';\nimport { round } from '../formulas';\n\nexport const countByVaultRange = ({\n  points,\n  range\n}: {\n  points: DataPoint[];\n  range: VaultRange;\n}): number =>\n  points.filter((point) => {\n    if (range.min !== undefined && range.max !== undefined) {\n      return range.min <= point.vault && point.vault < range.max;\n    }\n    if (range.min !== undefined) {\n      return range.min <= point.vault;\n    }\n    if (range.max !== undefined) {\n      return point.vault < range.max;\n    }\n    return false;\n  }).length;\n\nexport const getVaultDistribution = ({\n  filter,\n  range\n}: {\n  filter: MatrixFilter;\n  range: VaultRange;\n}): number[] =>\n  filterFlatRows(filter).map((points) =>\n    points.length !== 0\n      ? round(countByVaultRange({ points, range }) / points.length, 3)\n      : 0\n  );\n\ninterface VaultDestributionTexts {\n  label: string;\n  title: string;\n}\n\nconst FORMATTERS = {\n  minMax: (min: number, max: number) => ({\n    title: `Percentage of Eyes with Vault size between ${min} and ${max} micrometres`,\n    label: `% ${min} < Vault < ${max} (μm)`\n  }),\n  min: (min: number) => ({\n    title: `Percentage of Eyes with Vault size greater or equal than ${min} micrometres`,\n    label: `% ${min} < Vault (μm)`\n  }),\n  max: (max: number) => ({\n    title: `Percentage of Eyes with Vault size less than ${max} micrometres`,\n    label: `% Vault < ${max} (μm)`\n  }),\n  empty: {\n    label: '',\n    title: ''\n  }\n};\n\nexport const formatVaultSizeTexts = (\n  range: VaultRange\n): VaultDestributionTexts => {\n  if (range.min !== undefined && range.max !== undefined) {\n    return FORMATTERS.minMax(range.min, range.max);\n  }\n  if (range.min !== undefined) {\n    return FORMATTERS.min(range.min);\n  }\n  if (range.max !== undefined) {\n    return FORMATTERS.max(range.max);\n  }\n  return FORMATTERS.empty;\n};\n\nconst PercentVaultSizeRow = ({\n  filter,\n  range\n}: {\n  filter: MatrixFilter;\n  range: VaultRange;\n}) => {\n  const a = formatVaultSizeTexts(range);\n  return (\n    <MatrixRow\n      label={a.label}\n      title={a.title}\n      values={getVaultDistribution({ range, filter })}\n    />\n  );\n};\n\ninterface VaultSizeRange {\n  min?: number;\n  max?: number;\n}\nconst VAULT_SIZE_RANGES: VaultSizeRange[] = [\n  {\n    max: 250\n  },\n  {\n    min: 250,\n    max: 500\n  },\n  {\n    min: 500,\n    max: 750\n  },\n  {\n    min: 750,\n    max: 1000\n  },\n  {\n    min: 1000\n  }\n];\n\nexport const VaultDistributionRows = (filter: MatrixFilter) => (\n  <>\n    {VAULT_SIZE_RANGES.map((range, index) => (\n      <PercentVaultSizeRow filter={filter} range={range} key={index} />\n    ))}\n  </>\n);\n","import { MatrixFilter, filterFlatRows } from './data';\n\nimport { DataPoint } from '../db';\nimport { MatrixRow } from './components';\nimport { round } from '../formulas';\n\nexport const getVaultVals = ({\n  filter,\n  reducer\n}: {\n  filter: MatrixFilter;\n  reducer: (points: DataPoint[]) => number;\n}): number[] =>\n  filterFlatRows(filter).map((points: DataPoint[]) =>\n    round(reducer(points), 5)\n  );\n\nexport const getVaultAverages = (filter: MatrixFilter): number[] =>\n  getVaultVals({\n    filter,\n    reducer: (points: DataPoint[]) =>\n      points.reduce((memo, point) => memo + point.vault, 0) / points.length || 0\n  });\n\ntype lessGreater = (a: number, b: number) => boolean;\nconst lessThan: lessGreater = (a: number, b: number) => a < b;\nconst greaterThan: lessGreater = (a: number, b: number) => a > b;\n\nexport const getVaultMaxMin = ({\n  filter,\n  comparator\n}: {\n  filter: MatrixFilter;\n  comparator: lessGreater;\n}): number[] =>\n  getVaultVals({\n    filter,\n    reducer: (points: DataPoint[]) =>\n      points.reduce(\n        (memo, point) =>\n          memo === 0 || comparator(memo, point.vault) ? point.vault : memo,\n        0\n      )\n  });\n\nexport const getVaultMaxs = (filter: MatrixFilter): number[] =>\n  getVaultMaxMin({ filter, comparator: lessThan });\n\nexport const getVaultMins = (filter: MatrixFilter): number[] =>\n  getVaultMaxMin({ filter, comparator: greaterThan });\n\nconst VaultSizeRow = ({\n  label,\n  values\n}: {\n  label: string;\n  values: number[];\n}) => (\n  <MatrixRow\n    label={`${label} Vault (μm)`}\n    title={`${label} Vault size in micrometres`}\n    values={values}\n  />\n);\n\ninterface VaultStat {\n  label: string;\n  func: (filter: MatrixFilter) => number[];\n}\nconst VAULT_STATS: VaultStat[] = [\n  {\n    label: 'Average',\n    func: getVaultAverages\n  },\n  {\n    label: 'Minimum',\n    func: getVaultMins\n  },\n  {\n    label: 'Maximum',\n    func: getVaultMaxs\n  }\n];\n\nexport const VaultStatRows = (filter: MatrixFilter) => (\n  <>\n    {VAULT_STATS.map((stat) => (\n      <VaultSizeRow\n        key={stat.label}\n        label={stat.label}\n        values={stat.func(filter)}\n      />\n    ))}\n  </>\n);\n","import { DividerRow, MatrixRow } from './components';\nimport {\n  LENS_SIZES,\n  MYOPIA_LEVELS,\n  MatrixFilter,\n  NUM_DATA_POINTS,\n  filterFlatRows\n} from './data';\n\nimport { DataPoint } from '../db';\nimport { VaultDistributionRows } from './VaultDistributionRows';\nimport { VaultStatRows } from './VaultStatRows';\n\nexport const getNumEyes = (filter: MatrixFilter): number[] =>\n  filterFlatRows(filter).map((rows: DataPoint[]) => rows.length);\n\nconst LensHeaderCol = ({ label }: { label: string }) => (\n  <th scope=\"col\" colSpan={MYOPIA_LEVELS.length} className=\"text-right\">\n    {label}\n  </th>\n);\n\nconst MyopiaHeaderCol = ({\n  label,\n  title\n}: {\n  label: string;\n  title: string;\n}) => (\n  <th scope=\"col\" className=\"text-right\" title={title}>\n    {label}\n  </th>\n);\n\nconst MyopiaHeaderColGroup = () => (\n  <>\n    {MYOPIA_LEVELS.map((level) => (\n      <MyopiaHeaderCol label={level.label} title={level.title} key={level.id} />\n    ))}\n  </>\n);\n\nexport const Matrix = (filter: MatrixFilter) => (\n  <>\n    <table className=\"table table-bordered table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Lens Size</th>\n          {LENS_SIZES.map((size) => (\n            <LensHeaderCol label={size.label} key={size.id} />\n          ))}\n        </tr>\n        <tr>\n          <th scope=\"col\">Myopia</th>\n          {LENS_SIZES.map((size) => (\n            <MyopiaHeaderColGroup key={size.id} />\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <MatrixRow\n          label=\"Number of Eyes\"\n          title=\"Number of Eyes matching the column criteria\"\n          values={getNumEyes(filter)}\n        />\n        <DividerRow />\n        <VaultStatRows {...filter} />\n        <DividerRow />\n        <VaultDistributionRows {...filter} />\n      </tbody>\n    </table>\n    <ul className=\"list-inline\">\n      <li className=\"list-inline-item\">\n        <strong>Angle to Angle (AtA): </strong>\n        {filter.ata} mm.\n      </li>\n      <li className=\"list-inline-item\">\n        <strong>Crystaline Lens Rise (CLR): </strong>\n        {filter.clr * 0.001} mm.\n      </li>\n      <li className=\"list-inline-item\">\n        <strong>Number of matching Eyes: </strong>\n        {getNumEyes(filter).reduce((acc, a) => acc + a, 0)}/{NUM_DATA_POINTS}.\n      </li>\n    </ul>\n  </>\n);\n","export const NavBar = ({ resetForm }: { resetForm: (a?: any) => void }) => (\n  <nav className=\"navbar navbar-expand navbar-dark bg-dark fixed-top\">\n    <div className=\"container\">\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL || '/'}>\n        ICL Size Calc\n      </a>\n      <form className=\"form-inline\">\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={() => {\n            resetForm();\n          }}\n        >\n          Reset\n        </button>\n      </form>\n    </div>\n  </nav>\n);\n","export type Zone = {\n  readonly min: number;\n  readonly max: number;\n  readonly color: string;\n};\n\nexport type Pointer = {\n  readonly color: string;\n  readonly height: number;\n  readonly width: number;\n};\n\nexport type Options = {\n  readonly divisionColor?: string;\n  readonly divisions?: number;\n  readonly divisionHeight?: number;\n  readonly pointer?: Pointer;\n  readonly subDivisions?: number;\n  readonly subDivisionHeight?: number;\n  readonly value?: number;\n  readonly zones?: Zone[];\n  readonly zoneHeight?: number;\n};\n\nconst defaultZoneHeight = 12;\nconst defaultDivisions = 5;\nconst defaultDivisionHeight = 18;\nconst defaultDivisionColor = '#000000';\nconst defaultSubDivisions = 1;\nconst defaultSubDivisionHeight = 8;\n\nconst defaultZones = [\n  {\n    min: 0,\n    max: 3,\n    color: 'green'\n  },\n  {\n    min: 3,\n    max: 5,\n    color: 'yellow'\n  },\n  {\n    min: 5,\n    max: 6,\n    color: 'red'\n  }\n];\n\nconst defaultPointer = {\n  color: 'red',\n  height: 18,\n  width: 5\n};\n\ntype Style = {\n  readonly [key: string]: string;\n};\n\nconst createDiv = ({ styles = {} }: { readonly styles?: Style }) => {\n  const div = document.createElement('div');\n  Object.keys(styles).forEach((key) => div.style.setProperty(key, styles[key]));\n  return div;\n};\n\nconst createDivision = ({\n  division,\n  divisions,\n  height\n}: {\n  readonly division: number;\n  readonly divisions: number;\n  readonly height: number;\n}) => {\n  const div = createDiv({\n    styles: {\n      position: 'absolute',\n      top: '0px',\n      height: `${height}px`,\n      'border-left': '1px solid #000000'\n    }\n  });\n  if (division < divisions) {\n    div.style.setProperty('left', `${(division / divisions) * 100}%`);\n  } else {\n    div.style.setProperty('right', '0%');\n  }\n  return div;\n};\n\nconst createSubDivision = ({\n  subDivision,\n  totalSubDivisions,\n  subDivisionHeight\n}: {\n  readonly subDivision: number;\n  readonly totalSubDivisions: number;\n  readonly subDivisionHeight: number;\n}) => {\n  return createDiv({\n    styles: {\n      position: `absolute`,\n      top: '0px',\n      left: `${(subDivision / totalSubDivisions) * 100}%`,\n      height: `${subDivisionHeight}px`,\n      'border-left': '1px solid #000000'\n    }\n  });\n};\n\nconst createZone = ({\n  zone,\n  height\n}: {\n  readonly zone: Zone;\n  readonly height: number;\n}): HTMLElement => {\n  return createDiv({\n    styles: {\n      height: `${height}px`,\n      flex: `${zone.max - zone.min}`, // TODO: make sure decimals are not used\n      'background-color': zone.color\n    }\n  });\n};\n\nconst createPointer = (pointer: Pointer): SVGElement => {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('width', `${pointer.width}`);\n  svg.setAttribute('height', `${pointer.height}`);\n  svg.style.setProperty('position', 'absolute');\n\n  const triangle = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'polygon'\n  );\n  triangle.setAttribute(\n    'points',\n    `${pointer.width / 2},0 0,${pointer.height} ${pointer.width},${\n      pointer.height\n    }`\n  );\n  triangle.setAttribute('fill', '#ff0000');\n  svg.appendChild(triangle);\n  return svg;\n};\n\nexport class LinearGauge {\n  readonly el: HTMLElement;\n  zones: Zone[];\n  zoneHeight: number;\n  value?: number;\n  pointer: Pointer;\n  container?: HTMLDivElement;\n  divisions: number;\n  divisionHeight: number;\n  subDivisionHeight: number;\n  subDivisions: number;\n\n  constructor(htmlElement: HTMLElement) {\n    this.el = htmlElement;\n    this.zones = [];\n    this.zoneHeight = defaultZoneHeight;\n    this.pointer = defaultPointer;\n    this.divisions = defaultDivisions;\n    this.divisionHeight = defaultDivisionHeight;\n    this.subDivisions = defaultSubDivisions;\n    this.subDivisionHeight = defaultSubDivisionHeight;\n  }\n\n  renderPointer(value?: number) {\n    const min = this.zones[0].min;\n    const max = this.zones[this.zones.length - 1].max;\n\n    if (value !== undefined && value >= min && value <= max) {\n      const totalRange = max - min;\n      const valuePercent = ((value - min) / totalRange) * 100;\n\n      const pointerSvg = createPointer(this.pointer);\n      pointerSvg.style.setProperty(\n        'left',\n        `calc(${valuePercent}% - ${Math.floor(this.pointer.width / 2)}px)`\n      );\n      pointerSvg.style.setProperty('top', `${this.zoneHeight}px`);\n      this.container?.appendChild(pointerSvg);\n    }\n  }\n\n  renderSubDivisions() {\n    const totalSubDivisions = this.divisions * this.subDivisions;\n    Array(totalSubDivisions)\n      .fill(0)\n      .map((_, sub) => sub)\n      .filter((sub) => sub % this.subDivisions !== 0)\n      .map((subDivision) =>\n        createSubDivision({\n          subDivision: subDivision,\n          totalSubDivisions: totalSubDivisions,\n          subDivisionHeight: this.subDivisionHeight\n        })\n      )\n      .forEach((div) => this.container?.appendChild(div));\n  }\n\n  renderDivisions() {\n    Array(this.divisions + 1)\n      .fill(0)\n      .map((_, division) =>\n        createDivision({\n          division: division,\n          divisions: this.divisions,\n          height: this.divisionHeight\n        })\n      )\n      .forEach((div) => this.container?.appendChild(div));\n  }\n\n  setOptions({\n    divisionColor = defaultDivisionColor,\n    divisions = defaultDivisions,\n    divisionHeight = defaultDivisionHeight,\n    pointer = defaultPointer,\n    subDivisions = defaultSubDivisions,\n    subDivisionHeight = defaultSubDivisionHeight,\n    value,\n    zones = defaultZones,\n    zoneHeight = defaultZoneHeight\n  }: Options): LinearGauge {\n    const container = createDiv({\n      styles: {\n        'border-top': `1px solid ${divisionColor}`,\n        display: 'flex',\n        position: 'relative',\n        height: `${Math.max(divisionHeight, zoneHeight + pointer.height)}px`\n      }\n    });\n\n    this.container = container;\n    this.zones = zones;\n    this.zoneHeight = zoneHeight;\n    this.pointer = pointer;\n    this.divisions = divisions;\n    this.divisionHeight = divisionHeight;\n    this.subDivisions = subDivisions;\n    this.subDivisionHeight = subDivisionHeight;\n\n    // Pointer\n    this.renderPointer(value);\n\n    // Sub-Divisions\n    this.renderSubDivisions();\n\n    // Divisions\n    this.renderDivisions();\n\n    // Zones\n    zones\n      .map((z) => createZone({ zone: z, height: zoneHeight }))\n      .forEach((d) => container.appendChild(d));\n\n    this.el.appendChild(container);\n\n    return this;\n  }\n\n  dispose(): HTMLElement {\n    this.el.childNodes.forEach((node) => this.el.removeChild(node));\n    // while (this.el.lastChild) {\n    //   this.el.removeChild(this.el.lastChild);\n    // }\n    // this.el.textContent = '';\n    return this.el;\n  }\n}\n","import { LinearGauge, Zone } from './linear-gauge';\nimport { useLayoutEffect, useRef } from 'react';\n\nimport { number } from '@amcharts/amcharts4/core';\nimport { string } from 'yup/lib/locale';\n\n/**\n * https://stackoverflow.com/questions/48719873/how-to-get-median-and-quartiles-percentiles-of-an-array-in-javascript-or-php\n *\n * @param {number[]} values - Dataset\n * @param {number} quantile - Quantile [0.0, 1.0]\n * @returns {number}\n */\nexport const quantile = (values: number[], quantile: number) => {\n  const sorted = values.sort((a, b) => a - b);\n  const pos = (sorted.length - 1) * quantile;\n  const base = Math.floor(pos);\n  const rest = pos - base;\n  if (sorted[base + 1] !== undefined) {\n    return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\n  }\n  return sorted[base];\n};\n\nexport type Quantile = {\n  readonly value: number;\n  readonly color: string;\n};\n\nconst QUANTILES: Quantile[] = [\n  {\n    value: 0.025,\n    color: getComputedStyle(document.body).getPropertyValue('--danger')\n  },\n  {\n    value: 0.25,\n    color: getComputedStyle(document.body).getPropertyValue('--warning')\n  },\n  {\n    value: 0.75,\n    color: getComputedStyle(document.body).getPropertyValue('--success')\n  },\n  {\n    value: 0.975,\n    color: getComputedStyle(document.body).getPropertyValue('--warning')\n  },\n  {\n    value: 1.0,\n    color: getComputedStyle(document.body).getPropertyValue('--danger')\n  }\n];\n\nexport const buildZones = ({\n  values,\n  quantiles = QUANTILES\n}: {\n  values: number[];\n  quantiles?: Quantile[];\n}): Zone[] => {\n  const qq = quantiles.map((q) => quantile(values, q.value));\n  return quantiles.map((q, index) => {\n    if (index === 0) {\n      return {\n        min: Math.min(...values),\n        max: qq[0],\n        color: q.color\n      };\n    }\n    return {\n      min: qq[index - 1],\n      max: qq[index],\n      color: q.color\n    };\n  });\n};\n\nexport const Gauge = ({\n  value,\n  values\n}: {\n  value: number;\n  values: number[];\n}) => {\n  const container = useRef<HTMLDivElement>(null);\n\n  /* istanbul ignore next */\n  useLayoutEffect(() => {\n    if (container.current === null) {\n      return;\n    }\n\n    let x: LinearGauge = new LinearGauge(container.current);\n    x.setOptions({\n      divisions: 5,\n      subDivisions: 2,\n      zones: buildZones({ values: values }),\n      value: value\n    });\n\n    return () => {\n      x.dispose();\n    };\n  }, []);\n\n  return (\n    <div style={{ marginLeft: '71px', marginRight: '15px' }} ref={container} />\n  );\n};\n","import * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\n\nimport { useLayoutEffect, useRef } from 'react';\n\nimport { HistogramEntry } from '../db';\n\nam4core.options.queue = true;\n\nexport const Histogram = ({\n  data,\n  title\n}: {\n  data: HistogramEntry[];\n  title: string;\n}) => {\n  const chart = useRef<am4charts.XYChart>();\n  const ref = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Create chart instance\n\n    let x: am4charts.XYChart = am4core.create(\n      ref.current || undefined,\n      am4charts.XYChart\n    );\n\n    let t = x.titles.create();\n    t.text = title;\n    t.marginBottom = 22;\n    t.fontSize = '1rem';\n\n    // Add data\n    x.data = data;\n\n    // Create axes\n    const categoryAxis = x.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = 'from';\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 30;\n\n    const valueAxis = x.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = 'Number of Eyes';\n    valueAxis.min = 0;\n    valueAxis.max = Math.max(...[100, ...data.map((d) => d.count)]);\n\n    // Create series\n    const series = x.series.push(new am4charts.ColumnSeries());\n    const fill = getComputedStyle(document.body).getPropertyValue(\n      '--secondary' // Bootstrap 4\n    );\n    const stroke = getComputedStyle(document.body).getPropertyValue(\n      '--dark' // Bootstrap 4\n    );\n    series.columns.template.fill = am4core.color(fill.trim());\n    series.columns.template.stroke = am4core.color(stroke.trim());\n    series.dataFields.valueY = 'count';\n    series.dataFields.categoryX = 'from';\n    series.columns.template.tooltipText =\n      'Interval: [bold][[{from}, {to}[[[/]\\nNumber of Eyes: [bold]{count}[/]';\n\n    chart.current = x;\n\n    return () => {\n      x.dispose();\n    };\n  }, []);\n\n  return <div ref={ref} style={{ width: '100%', height: '300px' }} />;\n};\n","import { HISTOGRAM_DATA, HistogramEntry, VALUES } from '../db';\n\nimport { Gauge } from './Gauge';\nimport { Histogram } from './Histogram';\n\nconst Graph = ({\n  title,\n  value,\n  histogramSeries,\n  gaugeValues\n}: {\n  title: string;\n  value: number;\n  histogramSeries: HistogramEntry[];\n  gaugeValues: number[];\n}) => (\n  <>\n    <div className=\"col-md-4\">\n      <Histogram title={title} data={histogramSeries} />\n      <Gauge value={value} values={gaugeValues} />\n    </div>\n  </>\n);\n\nexport const Normality = ({\n  ata,\n  clr,\n  acd,\n  aca,\n  wtw\n}: {\n  ata: number;\n  clr: number;\n  acd: number;\n  aca: number;\n  wtw: number;\n}) => (\n  <>\n    <div className=\"row\">\n      <Graph\n        title={'Angle to Angle - AtA (mm)'}\n        histogramSeries={HISTOGRAM_DATA.ata}\n        value={ata}\n        gaugeValues={VALUES.ATA}\n      />\n      <Graph\n        title={'Crystalline Lens Rise - CLR (μm)'}\n        histogramSeries={HISTOGRAM_DATA.clr}\n        value={clr}\n        gaugeValues={VALUES.CLR}\n      />\n      <Graph\n        title={'Internal Anterior Chamber Depth - ACD (mm)'}\n        histogramSeries={HISTOGRAM_DATA.acd}\n        value={acd}\n        gaugeValues={VALUES.ACD}\n      />\n    </div>\n    <div className=\"row\">\n      <Graph\n        title={'Average Anterior Chamber Angle - ACA (º)'}\n        histogramSeries={HISTOGRAM_DATA.aca}\n        value={aca}\n        gaugeValues={VALUES.ACA}\n      />\n      <Graph\n        title={'White to White - WtW (mm)'}\n        histogramSeries={HISTOGRAM_DATA.wtw}\n        value={wtw}\n        gaugeValues={VALUES.WTW}\n      />\n      <div className=\"col-md-4\"></div>\n    </div>\n  </>\n);\n","export const getClassName = ({\n  error,\n  touched,\n  base = ['form-control'],\n  invalid = ['is-invalid'],\n  valid = []\n}: {\n  error?: string;\n  touched?: boolean;\n  base?: Array<string>;\n  invalid?: Array<string>;\n  valid?: Array<string>;\n}): string => [...base, ...(error && touched ? invalid : valid)].join(' ');\n","import * as React from 'react';\n\nimport { ErrorMessage, Field } from 'formik';\nimport { getClassName } from '../util';\n\ntype Unit = 'mm' | 'nm' | 'º' | 'dpt' | 'μm';\n\nconst UNITS: Map<Unit, string> = new Map([\n  ['mm', 'millimetres'], // 10^(-3) metres\n  ['μm', 'micrometres'], // 10^(-6) metres (aka \"micron\", or \"micra\")\n  ['nm', 'nanometres'], // 10^(-9) metres\n  ['º', 'degrees'],\n  ['dpt', 'dioptres']\n]);\n\ninterface FieldWithUnitProps {\n  label: string;\n  name: string;\n  unit: Unit;\n  touched?: boolean;\n  placeholder?: string;\n  error?: string;\n  value?: number;\n  disabled?: boolean;\n}\n\nconst UnitSufix = ({ unit }: { unit: Unit }) => (\n  <div className=\"input-group-append\">\n    <span className=\"input-group-text\" title={UNITS.get(unit)}>\n      {unit}\n    </span>\n  </div>\n);\n\nexport const FieldWithUnit: React.FC<FieldWithUnitProps> = ({\n  label,\n  name,\n  unit,\n  placeholder,\n  error,\n  touched,\n  value,\n  disabled\n}) => {\n  return (\n    <div className={'form-group row'}>\n      <label htmlFor={name + 'field'} className=\"col-sm-6 col-form-label\">\n        {label}\n      </label>\n      <div className=\"col-sm-6\">\n        <div className=\"input-group\">\n          {disabled ? (\n            <input\n              name={name}\n              value={value}\n              className=\"form-control text-right\"\n              disabled={true}\n            />\n          ) : (\n            <Field\n              type=\"number\"\n              name={name}\n              className={getClassName({\n                error: error,\n                touched: touched,\n                base: ['form-control', 'text-right']\n              })}\n              placeholder={placeholder}\n              autoComplete=\"off\"\n            />\n          )}\n          <UnitSufix unit={unit} />\n          <ErrorMessage\n            name={name}\n            component=\"div\"\n            className=\"invalid-feedback\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const Biometry = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'biometry'>>) => (\n  <>\n    <h4>Biometry</h4>\n    <FieldWithUnit\n      label=\"Angle to Angle (AtA)\"\n      name=\"biometry.ata\"\n      unit=\"mm\"\n      error={errors.biometry?.ata}\n      touched={touched.biometry?.ata}\n    />\n    <FieldWithUnit\n      label=\"White to White (WtW)\"\n      name=\"biometry.wtw\"\n      unit=\"mm\"\n      error={errors.biometry?.wtw}\n      touched={touched.biometry?.wtw}\n    />\n    <FieldWithUnit\n      label=\"Crystaline Lens Rise (CLR)\"\n      name=\"biometry.clr\"\n      unit=\"μm\"\n      error={errors.biometry?.clr}\n      touched={touched.biometry?.clr}\n    />\n    <FieldWithUnit\n      label=\"Internal Anterior Chamber Depth (ACD)\"\n      name=\"biometry.acd\"\n      unit=\"mm\"\n      error={errors.biometry?.acd}\n      touched={touched.biometry?.acd}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle nasal (ACAn)\"\n      name=\"biometry.acan\"\n      unit=\"º\"\n      error={errors.biometry?.acan}\n      touched={touched.biometry?.acan}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle temporal (ACAt)\"\n      name=\"biometry.acat\"\n      unit=\"º\"\n      error={errors.biometry?.acat}\n      touched={touched.biometry?.acat}\n    />\n    <FieldWithUnit\n      label=\"Keratometry - Flat Meridian (Kf)\"\n      name=\"biometry.kf\"\n      unit=\"dpt\"\n      error={errors.biometry?.kf}\n      touched={touched.biometry?.kf}\n    />\n    <FieldWithUnit\n      label=\"Central Corneal Thickness (CCT)\"\n      name=\"biometry.cct\"\n      unit=\"μm\"\n      error={errors.biometry?.cct}\n      touched={touched.biometry?.cct}\n    />\n  </>\n);\n","import {\n  calcIclAxis,\n  calcIclCylindre,\n  calcIclCylindreEquivalent,\n  calcIclSphere\n} from '../formulas';\n\nimport { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const ICLPower = ({\n  errors,\n  touched,\n  values\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <>\n    <h4>ICL Power</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"iclSphere\"\n      value={calcIclSphere({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"iclCylindre\"\n      value={calcIclCylindre({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"iclAxis\"\n      value={calcIclAxis(values.spectacleRefraction.axis)}\n      unit=\"º\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Spherical Equivalent (SE)\"\n      value={calcIclCylindreEquivalent({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      name=\"iclSphericalEquivalent\"\n      unit=\"dpt\"\n      disabled={true}\n    />\n  </>\n);\n","import { ErrorMessage, Field, FormikState } from 'formik';\n\nimport { ICLInputs } from '../types';\nimport { differenceInYears } from 'date-fns';\nimport { getClassName } from '../util';\n\nexport const calcAge = ({\n  dateOfBirth,\n  error\n}: {\n  dateOfBirth?: string;\n  error?: string;\n}): number =>\n  (dateOfBirth &&\n    !error &&\n    differenceInYears(new Date(), new Date(dateOfBirth))) ||\n  0;\n\nexport const Info = ({\n  errors,\n  values,\n  touched\n}: FormikState<Pick<ICLInputs, 'patient'>>) => (\n  <>\n    <h4>Information</h4>\n    <div className=\"form-row\">\n      <div className=\"form-group col-md-4\">\n        <label htmlFor=\"fieldName\">Name</label>\n        <Field\n          name=\"patient.name\"\n          className=\"form-control\"\n          id=\"fieldName\"\n          placeholder=\"enter patient name\"\n          autoComplete=\"off\"\n        />\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldDateOfBirth\">Date of Birth</label>\n        <Field\n          name=\"patient.dateOfBirth\"\n          className={getClassName({\n            error: errors.patient?.dateOfBirth,\n            touched: touched.patient?.dateOfBirth\n          })}\n          id=\"fieldDateOfBirth\"\n          placeholder=\"yyyy-mm-dd\"\n          autoComplete=\"off\"\n          maxLength={10}\n        />\n        <ErrorMessage\n          name=\"patient.dateOfBirth\"\n          component=\"div\"\n          className=\"invalid-feedback\"\n        />\n      </div>\n      <div className=\"form-group col-md-2\">\n        <label htmlFor=\"fieldAge\">Age</label>\n        <div className=\"input-group\">\n          <input\n            name=\"age\"\n            className=\"form-control text-right\"\n            id=\"fieldAge\"\n            disabled={true}\n            value={calcAge({\n              dateOfBirth: values.patient?.dateOfBirth,\n              error: errors.patient?.dateOfBirth\n            })}\n          />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\" title=\"years\">\n              yr.\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldEye\">Eye</label>\n        <Field\n          as=\"select\"\n          name=\"patient.eye\"\n          className=\"form-control\"\n          id=\"fieldEye\"\n        >\n          <option value=\"\">Select...</option>\n          <option value=\"left\">Left</option>\n          <option value=\"right\">Right</option>\n        </Field>\n      </div>\n    </div>\n  </>\n);\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const SpectacleRefraction = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <>\n    <h4>Spectacle Refraction</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"spectacleRefraction.sphere\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.sphere}\n      touched={touched.spectacleRefraction?.sphere}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"spectacleRefraction.cylindre\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.cylindre}\n      touched={touched.spectacleRefraction?.cylindre}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"spectacleRefraction.axis\"\n      unit=\"º\"\n      error={errors.spectacleRefraction?.axis}\n      touched={touched.spectacleRefraction?.axis}\n    />\n    <FieldWithUnit\n      label=\"Vertex\"\n      name=\"spectacleRefraction.vertex\"\n      unit=\"mm\"\n      error={errors.spectacleRefraction?.vertex}\n      touched={touched.spectacleRefraction?.vertex}\n    />\n  </>\n);\n","import { Biometry } from './Biometry';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\nimport { ICLPower } from './ICLPower';\nimport { Info } from './Info';\nimport { SpectacleRefraction } from './SpectacleRefraction';\n\nexport const Patient = ({\n  errors,\n  touched,\n  values,\n  ...otherProps\n}: FormikState<ICLInputs>) => (\n  <>\n    <Info values={values} errors={errors} touched={touched} {...otherProps} />\n    <hr />\n    <div className=\"form-row\">\n      <div className=\"col-md-4\">\n        <Biometry\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <SpectacleRefraction\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <ICLPower\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n    </div>\n  </>\n);\n","export const Regression = () => <>Regression is coming soon...</>;\n","import { NavLink } from 'react-router-dom';\n\ninterface Link {\n  to: string;\n  label: string;\n}\n\nconst LINKS: Link[] = [\n  {\n    to: '/',\n    label: 'Patient'\n  },\n  {\n    to: '/normality',\n    label: 'Biometric Normality'\n  },\n  {\n    to: '/matrix',\n    label: 'Floating Matrix'\n  },\n  {\n    to: '/regression',\n    label: 'Regression'\n  }\n];\n\nexport const TabLinks = () => (\n  <ul className=\"nav nav-pills\" style={{ marginBottom: '1rem' }}>\n    {LINKS.map((link, index) => (\n      <li className=\"nav-item\" key={index}>\n        <NavLink\n          exact={true}\n          className=\"nav-link\"\n          activeClassName=\"active\"\n          to={link.to}\n        >\n          {link.label}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n","import { Formik, FormikState } from 'formik';\nimport { ICLInputs, INITIAL_VALUES } from './types';\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\n\nimport { Footer } from './misc/Footer';\nimport { ICLSchema } from './ICLSchema';\nimport { Matrix } from './matrix';\nimport { NavBar } from './misc/NavBar';\nimport { Normality } from './normality';\nimport { Patient } from './patient';\nimport { Regression } from './regression';\nimport { TabLinks } from './misc/TabLinks';\n\nconst TabContent = ({\n  errors,\n  touched,\n  values,\n  ...otherProps\n}: FormikState<ICLInputs>) => (\n  <Switch>\n    <Route path=\"/normality\">\n      <Normality\n        ata={values.biometry.ata}\n        clr={values.biometry.clr}\n        acd={values.biometry.acd}\n        aca={(values.biometry.acan + values.biometry.acat) / 2.0}\n        wtw={values.biometry.wtw}\n      />\n    </Route>\n    <Route path=\"/matrix\">\n      <Matrix ata={values.biometry.ata} clr={values.biometry.clr} />\n    </Route>\n    <Route path=\"/regression\">\n      <Regression />\n    </Route>\n    <Route path=\"/\">\n      <Patient\n        values={values}\n        errors={errors}\n        touched={touched}\n        {...otherProps}\n      />\n    </Route>\n  </Switch>\n);\n\nexport const ICLContainer = () => (\n  <Formik\n    initialValues={INITIAL_VALUES}\n    validationSchema={ICLSchema}\n    onSubmit={\n      /* istanbul ignore next */\n      () => {}\n    }\n  >\n    {({ errors, touched, values, resetForm, ...otherProps }) => (\n      <>\n        <NavBar resetForm={resetForm} />\n        <div className=\"container\">\n          <Router hashType=\"noslash\">\n            <TabLinks />\n            <hr />\n            <TabContent\n              values={values}\n              errors={errors}\n              touched={touched}\n              {...otherProps}\n            />\n          </Router>\n        </div>\n        <Footer />\n      </>\n    )}\n  </Formik>\n);\n","import { ICLContainer } from './ICLContainer';\n\nconst App = () => <ICLContainer />;\n\nexport default App;\n","import './App.scss';\n\nimport * as Sentry from '@sentry/react';\n\nimport App from './App';\nimport { Integrations } from '@sentry/tracing';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn:\n      'https://2e937d9ae4044696992e8d4afba8d9b5@o551236.ingest.sentry.io/5674476',\n    integrations: [new Integrations.BrowserTracing()],\n\n    // Set tracesSampleRate to 1.0 to capture 100%\n    // of transactions for performance monitoring.\n    // We recommend adjusting this value in production\n    tracesSampleRate: 1.0\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}