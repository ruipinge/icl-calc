{"version":3,"sources":["types.ts","misc/Footer.tsx","misc/GoogleAnalytics.ts","ICLSchema.ts","db.ts","matrix/data.ts","matrix/components.tsx","formulas.ts","matrix/VaultDistributionRows.tsx","matrix/VaultStatRows.tsx","matrix/index.tsx","misc/NavBar.tsx","normality/linear-gauge/index.ts","normality/Gauge.tsx","normality/Histogram.tsx","normality/index.tsx","util.ts","patient/FieldWithUnit.tsx","patient/Biometry.tsx","patient/CorneaProfile.tsx","patient/ICLPower.tsx","patient/Info.tsx","patient/SpectacleRefraction.tsx","patient/index.tsx","regression/formulas.ts","regression/VaultPrediction.tsx","regression/VaultProbability.tsx","regression/index.tsx","misc/TabLinks.tsx","ICLContainer.tsx","App.tsx","index.tsx"],"names":["INITIAL_VALUES","patient","name","dateOfBirth","eye","this","d","Date","isNaN","getTime","diff","differenceInYears","now","biometry","ata","wtw","clr","acd","acan","acat","corneaProfile","kf","ks","axisf","axiss","cct","spectacleRefraction","sphere","cylindre","axis","vertex","Footer","className","style","fontSize","color","href","process","target","rel","GA","init","ReactGA","initialize","pageview","window","location","pathname","search","INVALID_ERROR","REQUIRED_ERROR","ACD_INVALID_ERROR","KF_INVALID_ERROR","CCT_INVALID_ERROR","SPHERE_INVALID_ERROR","CYLINDRE_INVALID_ERROR","ICLSchema","Yup","shape","optional","typeError","required","min","max","DATA_POINTS","csv","split","reduce","memo","row","map","col","Number","filter","mapCsvToRows","age","iclSize","iclSe","aca","vault","keratometry","VALUES","ATA","point","CLR","ACD","ACA","WTW","AGE","getHistogramData","source","Math","apply","step","data","Array","from","keys","i","to","count","forEach","value","item","find","el","HISTOGRAM_DATA","NUM_DATA_POINTS","length","LENS_SIZE_SMALL","label","id","LENS_SIZE_MEDIUM","LENS_SIZE_LARGE","LENS_SIZES","LENS_SIZES_MAP","small","medium","large","MYOPIA_LEVELS","title","Infinity","getDataPoints","lens","myopia","dataPoints","filterFlatRows","memoLens","memoMyopia","level","filterPoint","MatrixRow","values","scope","val","index","DividerRow","colSpan","FACTOR0","FACTOR1","round","decimals","pow","calcPosMeridian","calcNegMeridian","calcIclSphere","calcIclCylindre","posMer","negMer","calcIclSphericalEquivalent","negCylindre","getVaultDistribution","range","points","undefined","countByVaultRange","FORMATTERS","PercentVaultSizeRow","a","formatVaultSizeTexts","VAULT_SIZE_RANGES","VaultDistributionRows","getVaultVals","reducer","lessThan","b","greaterThan","getVaultMaxMin","comparator","VaultSizeRow","VAULT_STATS","func","VaultStatRows","stat","getNumEyes","rows","LensHeaderCol","MyopiaHeaderCol","MyopiaHeaderColGroup","Matrix","size","acc","NavBar","resetForm","type","onClick","defaultZones","defaultPointer","height","width","createDiv","styles","div","document","createElement","Object","key","setProperty","LinearGauge","htmlElement","zones","zoneHeight","pointer","container","divisions","divisionHeight","subDivisionHeight","subDivisions","valuePercent","pointerSvg","svg","createElementNS","setAttribute","triangle","appendChild","createPointer","floor","totalSubDivisions","fill","_","sub","subDivision","position","top","left","createSubDivision","division","createDivision","divisionColor","display","renderPointer","renderSubDivisions","renderDivisions","z","zone","flex","createZone","childNodes","node","removeChild","QUANTILES","getComputedStyle","body","getPropertyValue","buildZones","quantiles","qq","q","quantile","sorted","sort","pos","base","rest","Gauge","useRef","useLayoutEffect","current","x","setOptions","dispose","marginLeft","marginRight","ref","am4core","queue","Histogram","chart","am4charts","t","titles","create","text","marginBottom","categoryAxis","xAxes","push","dataFields","category","renderer","grid","template","minGridDistance","valueAxis","yAxes","series","stroke","columns","trim","valueY","categoryX","tooltipText","Graph","histogramSeries","gaugeValues","GRAPH_CONFIGS","arg","Normality","args","config","getClassName","error","touched","invalid","valid","join","UNITS","Map","UnitSufix","unit","get","FieldWithUnit","placeholder","disabled","htmlFor","autoComplete","component","Biometry","errors","CorneaProfile","defaultValue","ICLPower","Info","maxLength","as","SpectacleRefraction","Patient","otherProps","RegressionLensSizes","vaultPredictionVal0","probExpVal0","probExpVal1","compression","lensSize","vaultPrediction","ri","lensSizeId","se","vaultPredictionVal1","cornea2endothelium","probability","exp","probExpFactor0","probExpFactor1","VaultPrediction","VaultProbability","Regression","LINKS","TabLinks","link","exact","activeClassName","TabContent","path","ICLContainer","initialValues","validationSchema","onSubmit","hashType","App","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ba09b4a2.chunk.js","sourcesContent":["import { differenceInYears } from 'date-fns';\n\nexport interface PatientInfoInterface {\n  name: string;\n  dateOfBirth: string;\n  eye: 'left' | 'right';\n  age(): number;\n}\n\nexport class PatientInfo implements PatientInfoInterface {\n  name: string;\n  dateOfBirth: string;\n  eye: 'left' | 'right';\n\n  age(): number {\n    if (!this.dateOfBirth) {\n      return 0;\n    }\n    const d: Date = new Date(this.dateOfBirth);\n    if (isNaN(d.getTime())) {\n      return 0;\n    }\n    const diff: number = differenceInYears(new Date(Date.now()), d);\n    return diff < 0 ? 0 : diff;\n  }\n\n  constructor({\n    name,\n    dateOfBirth,\n    eye\n  }: {\n    name: string;\n    dateOfBirth: string;\n    eye: 'left' | 'right';\n  }) {\n    this.name = name;\n    this.dateOfBirth = dateOfBirth;\n    this.eye = eye;\n  }\n}\n\nexport interface Biometry {\n  ata: number;\n  wtw: number;\n  clr: number;\n  acd: number;\n  acan: number;\n  acat: number;\n}\n\nexport interface CorneaProfile {\n  kf: number;\n  ks: number;\n  axisf: number;\n  axiss: number;\n  cct: number;\n}\n\nexport interface SpectacleRefraction {\n  sphere: number;\n  cylindre: number;\n  axis: number;\n  vertex: number;\n}\n\nexport interface ICLInputs {\n  patient: PatientInfo;\n  biometry: Biometry;\n  corneaProfile: CorneaProfile;\n  spectacleRefraction: SpectacleRefraction;\n}\n\nexport const INITIAL_VALUES: ICLInputs = {\n  patient: new PatientInfo({\n    name: '',\n    dateOfBirth: '',\n    eye: 'left'\n  }),\n  biometry: {\n    ata: 0,\n    wtw: 0,\n    clr: 0,\n    acd: 0,\n    acan: 0,\n    acat: 0\n  },\n  corneaProfile: {\n    kf: 0,\n    ks: 0,\n    axisf: 0,\n    axiss: 0,\n    cct: 0\n  },\n  spectacleRefraction: {\n    sphere: 0,\n    cylindre: 0,\n    axis: 0,\n    vertex: 0\n  }\n};\n","export const Footer = () => (\n  <footer\n    className=\"p-3 p-md-5 mt-5 bg-light text-center text-sm-left\"\n    style={{ fontSize: '0.875rem', color: '#63707c' }}\n  >\n    <div className=\"container\">\n      <ul className=\"bd-footer-links pl-0 mb-3\">\n        <li className=\"d-inline-block\">\n          <a\n            href={`https://github.com/ruipinge/icl-calc/releases/tag/v${process.env.REACT_APP_VERSION}`}\n          >\n            {`v${process.env.REACT_APP_VERSION}`}\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#instructions\">\n            Instructions\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#data\">\n            Data\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc\">GitHub</a>\n        </li>\n      </ul>\n      <p className=\"mb-0\">\n        Designed and built with love by{' '}\n        <a href=\"https://www.linkedin.com/in/pedro-serra-44697321/\">\n          Pedro Serra\n        </a>{' '}\n        and <a href=\"https://ruipinge.github.io/resume\">Rui Pinge</a>.\n      </p>\n      <p className=\"mb-0\">\n        Available under the{' '}\n        <a\n          href=\"https://github.com/ruipinge/icl-calc/blob/master/LICENSE\"\n          target=\"_blank\"\n          rel=\"license noopener noreferrer\"\n        >\n          MIT License\n        </a>{' '}\n        without any kind of warranty.\n      </p>\n      <p className=\"mb-0\">\n        The authors cannot be held responsible for any consequense of its usage.\n      </p>\n    </div>\n  </footer>\n);\n","import ReactGA from 'react-ga';\n\nconst GA = {\n  init: () => {\n    const isGAEnabled = process.env.NODE_ENV === 'production';\n\n    if (isGAEnabled) {\n      ReactGA.initialize('UA-212134595-1');\n      ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n\n    return isGAEnabled;\n  }\n};\n\nexport default GA;\n","import * as Yup from 'yup';\n\nconst ACD_MIN = 2.7,\n  ACD_MAX = 6.0,\n  KF_MIN = 35,\n  KF_MAX = 50,\n  CCT_MIN = 300,\n  CCT_MAX = 700,\n  SPHERE_MIN = -25,\n  SPHERE_MAX = 0,\n  CYLINDRE_MIN = -8,\n  CYLINDRE_MAX = 0,\n  INVALID_ERROR = 'Invalid value.',\n  REQUIRED_ERROR = 'Required value.',\n  ACD_INVALID_ERROR = `${INVALID_ERROR} [${ACD_MIN}, ${ACD_MAX}]`,\n  KF_INVALID_ERROR = `${INVALID_ERROR} [${KF_MIN}, ${KF_MAX}]`,\n  CCT_INVALID_ERROR = `${INVALID_ERROR} [${CCT_MIN}, ${CCT_MAX}]`,\n  SPHERE_INVALID_ERROR = `${INVALID_ERROR} [${SPHERE_MIN}, ${SPHERE_MAX}]`,\n  CYLINDRE_INVALID_ERROR = `${INVALID_ERROR} [${CYLINDRE_MIN}, ${CYLINDRE_MAX}]`;\n\nexport const ICLSchema = Yup.object().shape({\n  patient: Yup.object().shape({\n    dateOfBirth: Yup.date().optional().typeError('Invalid date. (yyyy-mm-dd)')\n  }),\n  biometry: Yup.object().shape({\n    ata: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    wtw: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    clr: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(-1000, INVALID_ERROR)\n      .max(1000, INVALID_ERROR),\n    acd: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(ACD_MIN, ACD_INVALID_ERROR)\n      .max(ACD_MAX, ACD_INVALID_ERROR),\n    acan: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    acat: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    kf: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(KF_MIN, KF_INVALID_ERROR)\n      .max(KF_MAX, KF_INVALID_ERROR),\n    cct: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CCT_MIN, CCT_INVALID_ERROR)\n      .max(CCT_MAX, CCT_INVALID_ERROR)\n  }),\n  spectacleRefraction: Yup.object().shape({\n    sphere: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(SPHERE_MIN, SPHERE_INVALID_ERROR)\n      .max(SPHERE_MAX, SPHERE_INVALID_ERROR),\n    cylindre: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CYLINDRE_MIN, CYLINDRE_INVALID_ERROR)\n      .max(CYLINDRE_MAX, CYLINDRE_INVALID_ERROR),\n    axis: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(180, INVALID_ERROR),\n    vertex: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(8, INVALID_ERROR)\n      .max(15, INVALID_ERROR)\n  })\n});\n","import raw from 'raw.macro';\n\nconst CSV = raw('./data.csv');\n\nexport interface DataPoint {\n  age: number;\n  iclSize: number;\n  iclSe: number;\n  acd: number;\n  cct: number;\n  ata: number;\n  clr: number;\n  aca: number;\n  vault: number;\n  wtw: number;\n  keratometry: number;\n}\n\nexport const mapCsvToRows = (csv: string): number[][] =>\n  csv\n    .split('\\n')\n    .reduce(\n      (memo, row) => [\n        ...memo,\n        row.split(';').map((col: string) => Number(col))\n      ],\n      [] as number[][]\n    )\n    .filter((row) => !!row[0] && !isNaN(row[0]));\n\nexport const mapRowsToDataPoint = (rows: number[][]): DataPoint[] =>\n  rows.map((row) => ({\n    age: row[0],\n    iclSize: row[1],\n    iclSe: row[2],\n    acd: row[3],\n    cct: row[4],\n    ata: row[5],\n    clr: row[6],\n    aca: row[7],\n    vault: row[8],\n    wtw: row[9],\n    keratometry: row[10]\n  }));\n\nconst mapCsvToDataPoint = (csv: string): DataPoint[] =>\n  mapRowsToDataPoint(mapCsvToRows(csv));\n\nexport const DATA_POINTS: DataPoint[] = mapCsvToDataPoint(CSV);\n\nexport const VALUES = {\n  ATA: DATA_POINTS.map((point) => point.ata),\n  CLR: DATA_POINTS.map((point) => point.clr),\n  ACD: DATA_POINTS.map((point) => point.acd),\n  ACA: DATA_POINTS.map((point) => point.aca),\n  WTW: DATA_POINTS.map((point) => point.wtw),\n  AGE: DATA_POINTS.map((point) => point.age)\n};\n\nconst MAX_COLS = 10;\n\nexport interface HistogramEntry {\n  from: number;\n  to: number;\n  count: number;\n}\nconst getHistogramData = (source: number[]): HistogramEntry[] => {\n  // Init\n  const min = Math.min.apply(null, source);\n  const max = Math.max.apply(null, source);\n  const range = max - min;\n  const step = range / MAX_COLS;\n\n  // Create items\n  const data = Array.from(Array(MAX_COLS).keys()).map((i) => {\n    const from = min + i * step;\n    const to = min + (i + 1) * step;\n    return {\n      from: from,\n      to: to,\n      count: 0\n    };\n  });\n\n  // Calculate range of the values\n  source.forEach((value) => {\n    const item = data.find((el) => value >= el.from && value <= el.to);\n    item && item.count++;\n  });\n\n  return data;\n};\n\nexport const HISTOGRAM_DATA = {\n  ata: getHistogramData(VALUES.ATA),\n  clr: getHistogramData(VALUES.CLR),\n  acd: getHistogramData(VALUES.ACD),\n  aca: getHistogramData(VALUES.ACA),\n  wtw: getHistogramData(VALUES.WTW),\n  age: getHistogramData(VALUES.AGE)\n};\n","import { DATA_POINTS, DataPoint } from '../db';\n\nconst ATA_DEVIATION: number = 0.1; // millimetres\nconst CLR_DEVIATION: number = 100; // micrometres\n\nexport const NUM_DATA_POINTS = DATA_POINTS.length;\n\nexport interface VaultRange {\n  min?: number;\n  max?: number;\n}\n\nexport type LensSizeId = 'small' | 'medium' | 'large';\nexport interface LensSize {\n  id: LensSizeId;\n  label: string;\n  value: number;\n}\n\nexport const LENS_SIZE_SMALL: LensSize = {\n  label: '12.6 mm',\n  id: 'small',\n  value: 12.6\n};\nexport const LENS_SIZE_MEDIUM: LensSize = {\n  label: '13.2 mm',\n  id: 'medium',\n  value: 13.2\n};\nexport const LENS_SIZE_LARGE: LensSize = {\n  label: '13.7 mm',\n  id: 'large',\n  value: 13.7\n};\n\nexport const LENS_SIZES: LensSize[] = [\n  LENS_SIZE_SMALL,\n  LENS_SIZE_MEDIUM,\n  LENS_SIZE_LARGE\n];\n\ntype LensSizesType = {\n  [key in LensSizeId]: LensSize;\n};\n\nexport const LENS_SIZES_MAP: LensSizesType = {\n  small: LENS_SIZE_SMALL,\n  medium: LENS_SIZE_MEDIUM,\n  large: LENS_SIZE_LARGE\n};\n\ntype MyopiaId = 'low' | 'moderate' | 'high';\ninterface MyopiaLevel {\n  id: MyopiaId;\n  label: string;\n  title: string;\n  min: number;\n  max: number;\n}\nexport const MYOPIA_LEVELS: MyopiaLevel[] = [\n  {\n    id: 'low',\n    label: 'Low',\n    title: 'Spherical Equivalent (SE) less than -6 dpt',\n    min: -6,\n    max: Infinity\n  },\n  {\n    id: 'moderate',\n    label: 'Moderate',\n    title: 'Spherical Equivalent (SE) between -6 dpt and -12 dpt',\n    min: -12,\n    max: -6\n  },\n  {\n    id: 'high',\n    label: 'High',\n    title: 'Spherical Equivalent (SE) greater than -12 dpt',\n    min: -Infinity,\n    max: -12\n  }\n];\n\nexport interface MatrixFilter {\n  readonly ata: number;\n  readonly clr: number;\n  readonly dataPoints?: DataPoint[];\n}\n\ninterface CacheEntry {\n  lens: LensSize;\n  myopia: MyopiaLevel;\n  dataPoints?: DataPoint[];\n}\n\nexport const getDataPoints = ({\n  lens,\n  myopia,\n  dataPoints = DATA_POINTS\n}: CacheEntry): DataPoint[] =>\n  dataPoints.filter(\n    (point) =>\n      lens.value === point.iclSize &&\n      myopia.min <= point.iclSe &&\n      point.iclSe < myopia.max\n  );\n\nexport const filterPoint = ({\n  ata,\n  clr,\n  point\n}: {\n  ata: number;\n  clr: number;\n  point: DataPoint;\n}) =>\n  ata >= point.ata - ATA_DEVIATION &&\n  ata <= point.ata + ATA_DEVIATION &&\n  clr >= point.clr - CLR_DEVIATION && // clr in db is in micrometres\n  clr <= point.clr + CLR_DEVIATION; // clr in db is in micrometres\n\nexport const filterFlatRows = ({\n  ata,\n  clr,\n  dataPoints = DATA_POINTS\n}: MatrixFilter): DataPoint[][] =>\n  LENS_SIZES.reduce(\n    (memoLens, lens) => [\n      ...memoLens,\n      ...MYOPIA_LEVELS.reduce(\n        (memoMyopia, level) => [\n          ...memoMyopia,\n          ...[\n            getDataPoints({\n              lens: lens,\n              myopia: level,\n              dataPoints: dataPoints\n            }).filter((point: DataPoint) => filterPoint({ ata, clr, point }))\n          ]\n        ],\n        [] as DataPoint[][]\n      )\n    ],\n    [] as DataPoint[][]\n  );\n","import { LENS_SIZES, MYOPIA_LEVELS } from './data';\n\nexport const MatrixRow = ({\n  label,\n  title,\n  values\n}: {\n  label: string;\n  title: string;\n  values: number[];\n}) => (\n  <tr>\n    <th scope=\"row\" title={title}>\n      {label}\n    </th>\n    {values.map((val, index) => (\n      <td key={index} className=\"text-right\">\n        {val}\n      </td>\n    ))}\n  </tr>\n);\n\nexport const DividerRow = () => (\n  <tr className=\"table-bordered\">\n    <td colSpan={LENS_SIZES.length * MYOPIA_LEVELS.length + 1} />\n  </tr>\n);\n","const FACTOR0 = -1.33756,\n  FACTOR1 = 0.9446;\n\nexport const round = (val: number, decimals: number = 2) =>\n  Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\nexport const calcPosMeridian = (sphere: number) => {\n  return FACTOR0 + FACTOR1 * sphere;\n};\n\nexport const calcNegMeridian = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return FACTOR0 + FACTOR1 * (sphere + cylindre);\n};\n\nexport const calcIclSphere = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return round(calcNegMeridian({ sphere: sphere, cylindre: cylindre }));\n};\n\nexport const calcIclCylindre = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const posMer = calcPosMeridian(sphere),\n    negMer = calcNegMeridian({ sphere: sphere, cylindre: cylindre });\n\n  return round(posMer - negMer);\n};\n\nexport const calcIclAxis = (axis: number) => {\n  if (axis >= 0 && axis < 90) {\n    return round(axis + 90, 1);\n  }\n\n  if (axis > 90 && axis <= 180) {\n    return round(axis - 90, 1);\n  }\n\n  return round(axis, 1);\n};\n\nexport const calcIclSphericalEquivalent = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const negCylindre =\n    calcNegMeridian({ sphere: sphere, cylindre: cylindre }) -\n    calcPosMeridian(sphere);\n  return round(calcPosMeridian(sphere) + negCylindre / 2);\n};\n","import { MatrixFilter, VaultRange, filterFlatRows } from './data';\n\nimport { DataPoint } from '../db';\nimport { MatrixRow } from './components';\nimport { round } from '../formulas';\n\nexport const countByVaultRange = ({\n  points,\n  range\n}: {\n  points: DataPoint[];\n  range: VaultRange;\n}): number =>\n  points.filter((point) => {\n    if (range.min !== undefined && range.max !== undefined) {\n      return range.min <= point.vault && point.vault < range.max;\n    }\n    if (range.min !== undefined) {\n      return range.min <= point.vault;\n    }\n    if (range.max !== undefined) {\n      return point.vault < range.max;\n    }\n    return false;\n  }).length;\n\nexport const getVaultDistribution = ({\n  filter,\n  range\n}: {\n  filter: MatrixFilter;\n  range: VaultRange;\n}): number[] =>\n  filterFlatRows(filter).map((points) =>\n    points.length !== 0\n      ? round((100 * countByVaultRange({ points, range })) / points.length, 1)\n      : 0\n  );\n\ninterface VaultDestributionTexts {\n  label: string;\n  title: string;\n}\n\nconst FORMATTERS = {\n  minMax: (min: number, max: number) => ({\n    title: `Percentage of Eyes with Vault size between ${min} and ${max} micrometres`,\n    label: `% ${min} < Vault < ${max} (μm)`\n  }),\n  min: (min: number) => ({\n    title: `Percentage of Eyes with Vault size greater or equal than ${min} micrometres`,\n    label: `% ${min} < Vault (μm)`\n  }),\n  max: (max: number) => ({\n    title: `Percentage of Eyes with Vault size less than ${max} micrometres`,\n    label: `% Vault < ${max} (μm)`\n  }),\n  empty: {\n    label: '',\n    title: ''\n  }\n};\n\nexport const formatVaultSizeTexts = (\n  range: VaultRange\n): VaultDestributionTexts => {\n  if (range.min !== undefined && range.max !== undefined) {\n    return FORMATTERS.minMax(range.min, range.max);\n  }\n  if (range.min !== undefined) {\n    return FORMATTERS.min(range.min);\n  }\n  if (range.max !== undefined) {\n    return FORMATTERS.max(range.max);\n  }\n  return FORMATTERS.empty;\n};\n\nconst PercentVaultSizeRow = ({\n  filter,\n  range\n}: {\n  filter: MatrixFilter;\n  range: VaultRange;\n}) => {\n  const a = formatVaultSizeTexts(range);\n  return (\n    <MatrixRow\n      label={a.label}\n      title={a.title}\n      values={getVaultDistribution({ range, filter })}\n    />\n  );\n};\n\ninterface VaultSizeRange {\n  min?: number;\n  max?: number;\n}\nconst VAULT_SIZE_RANGES: VaultSizeRange[] = [\n  {\n    max: 250\n  },\n  {\n    min: 250,\n    max: 500\n  },\n  {\n    min: 500,\n    max: 750\n  },\n  {\n    min: 750,\n    max: 1000\n  },\n  {\n    min: 1000\n  }\n];\n\nexport const VaultDistributionRows = (filter: MatrixFilter) => (\n  <>\n    {VAULT_SIZE_RANGES.map((range, index) => (\n      <PercentVaultSizeRow filter={filter} range={range} key={index} />\n    ))}\n  </>\n);\n","import { MatrixFilter, filterFlatRows } from './data';\n\nimport { DataPoint } from '../db';\nimport { MatrixRow } from './components';\nimport { round } from '../formulas';\n\nexport const getVaultVals = ({\n  filter,\n  reducer\n}: {\n  filter: MatrixFilter;\n  reducer: (points: DataPoint[]) => number;\n}): number[] =>\n  filterFlatRows(filter).map((points: DataPoint[]) =>\n    round(reducer(points), 5)\n  );\n\nexport const getVaultAverages = (filter: MatrixFilter): number[] =>\n  getVaultVals({\n    filter,\n    reducer: (points: DataPoint[]) =>\n      Math.round(\n        points.reduce((memo, point) => memo + point.vault, 0) / points.length\n      ) || 0\n  });\n\ntype lessGreater = (a: number, b: number) => boolean;\nconst lessThan: lessGreater = (a: number, b: number) => a < b;\nconst greaterThan: lessGreater = (a: number, b: number) => a > b;\n\nexport const getVaultMaxMin = ({\n  filter,\n  comparator\n}: {\n  filter: MatrixFilter;\n  comparator: lessGreater;\n}): number[] =>\n  getVaultVals({\n    filter,\n    reducer: (points: DataPoint[]) =>\n      points.reduce(\n        (memo, point) =>\n          memo === 0 || comparator(memo, point.vault) ? point.vault : memo,\n        0\n      )\n  });\n\nexport const getVaultMaxs = (filter: MatrixFilter): number[] =>\n  getVaultMaxMin({ filter, comparator: lessThan });\n\nexport const getVaultMins = (filter: MatrixFilter): number[] =>\n  getVaultMaxMin({ filter, comparator: greaterThan });\n\nconst VaultSizeRow = ({\n  label,\n  values\n}: {\n  label: string;\n  values: number[];\n}) => (\n  <MatrixRow\n    label={`${label} Vault (μm)`}\n    title={`${label} Vault size in micrometres`}\n    values={values}\n  />\n);\n\ninterface VaultStat {\n  label: string;\n  func: (filter: MatrixFilter) => number[];\n}\nconst VAULT_STATS: VaultStat[] = [\n  {\n    label: 'Average',\n    func: getVaultAverages\n  },\n  {\n    label: 'Minimum',\n    func: getVaultMins\n  },\n  {\n    label: 'Maximum',\n    func: getVaultMaxs\n  }\n];\n\nexport const VaultStatRows = (filter: MatrixFilter) => (\n  <>\n    {VAULT_STATS.map((stat) => (\n      <VaultSizeRow\n        key={stat.label}\n        label={stat.label}\n        values={stat.func(filter)}\n      />\n    ))}\n  </>\n);\n","import { DividerRow, MatrixRow } from './components';\nimport {\n  LENS_SIZES,\n  MYOPIA_LEVELS,\n  MatrixFilter,\n  NUM_DATA_POINTS,\n  filterFlatRows\n} from './data';\n\nimport { DataPoint } from '../db';\nimport { VaultDistributionRows } from './VaultDistributionRows';\nimport { VaultStatRows } from './VaultStatRows';\n\nexport const getNumEyes = (filter: MatrixFilter): number[] =>\n  filterFlatRows(filter).map((rows: DataPoint[]) => rows.length);\n\nconst LensHeaderCol = ({ label }: { label: string }) => (\n  <th scope=\"col\" colSpan={MYOPIA_LEVELS.length} className=\"text-right\">\n    {label}\n  </th>\n);\n\nconst MyopiaHeaderCol = ({\n  label,\n  title\n}: {\n  label: string;\n  title: string;\n}) => (\n  <th scope=\"col\" className=\"text-right\" title={title}>\n    {label}\n  </th>\n);\n\nconst MyopiaHeaderColGroup = () => (\n  <>\n    {MYOPIA_LEVELS.map((level) => (\n      <MyopiaHeaderCol label={level.label} title={level.title} key={level.id} />\n    ))}\n  </>\n);\n\nexport const Matrix = (filter: MatrixFilter) => (\n  <>\n    <table className=\"table table-bordered table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Lens Size</th>\n          {LENS_SIZES.map((size) => (\n            <LensHeaderCol label={size.label} key={size.id} />\n          ))}\n        </tr>\n        <tr>\n          <th scope=\"col\">Myopia</th>\n          {LENS_SIZES.map((size) => (\n            <MyopiaHeaderColGroup key={size.id} />\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <MatrixRow\n          label=\"Number of Eyes\"\n          title=\"Number of Eyes matching the column criteria\"\n          values={getNumEyes(filter)}\n        />\n        <DividerRow />\n        <VaultStatRows {...filter} />\n        <DividerRow />\n        <VaultDistributionRows {...filter} />\n      </tbody>\n    </table>\n    <ul className=\"list-inline\">\n      <li className=\"list-inline-item\">\n        <strong>Angle to Angle (AtA): </strong>\n        {filter.ata} mm.\n      </li>\n      <li className=\"list-inline-item\">\n        <strong>Crystaline Lens Rise (CLR): </strong>\n        {filter.clr * 0.001} mm.\n      </li>\n      <li className=\"list-inline-item\">\n        <strong>Number of matching Eyes: </strong>\n        {getNumEyes(filter).reduce((acc, a) => acc + a, 0)}/{NUM_DATA_POINTS}.\n      </li>\n    </ul>\n  </>\n);\n","export const NavBar = ({ resetForm }: { resetForm: (a?: any) => void }) => (\n  <nav className=\"navbar navbar-expand navbar-dark bg-dark fixed-top\">\n    <div className=\"container\">\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL || '/'}>\n        ICL Size Calc\n      </a>\n      <form className=\"form-inline\">\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={() => {\n            resetForm();\n          }}\n        >\n          Reset\n        </button>\n      </form>\n    </div>\n  </nav>\n);\n","export type Zone = {\n  readonly min: number;\n  readonly max: number;\n  readonly color: string;\n};\n\nexport type Pointer = {\n  readonly color: string;\n  readonly height: number;\n  readonly width: number;\n};\n\nexport type Options = {\n  readonly divisionColor?: string;\n  readonly divisions?: number;\n  readonly divisionHeight?: number;\n  readonly pointer?: Pointer;\n  readonly subDivisions?: number;\n  readonly subDivisionHeight?: number;\n  readonly value?: number;\n  readonly zones?: Zone[];\n  readonly zoneHeight?: number;\n};\n\nconst defaultZoneHeight = 12;\nconst defaultDivisions = 5;\nconst defaultDivisionHeight = 18;\nconst defaultDivisionColor = '#000000';\nconst defaultSubDivisions = 1;\nconst defaultSubDivisionHeight = 8;\n\nconst defaultZones = [\n  {\n    min: 0,\n    max: 3,\n    color: 'green'\n  },\n  {\n    min: 3,\n    max: 5,\n    color: 'yellow'\n  },\n  {\n    min: 5,\n    max: 6,\n    color: 'red'\n  }\n];\n\nconst defaultPointer = {\n  color: 'red',\n  height: 18,\n  width: 5\n};\n\ntype Style = {\n  readonly [key: string]: string;\n};\n\nconst createDiv = ({ styles = {} }: { readonly styles?: Style }) => {\n  const div = document.createElement('div');\n  Object.keys(styles).forEach((key) => div.style.setProperty(key, styles[key]));\n  return div;\n};\n\nconst createDivision = ({\n  division,\n  divisions,\n  height\n}: {\n  readonly division: number;\n  readonly divisions: number;\n  readonly height: number;\n}) => {\n  const div = createDiv({\n    styles: {\n      position: 'absolute',\n      top: '0px',\n      height: `${height}px`,\n      'border-left': '1px solid #000000'\n    }\n  });\n  if (division < divisions) {\n    div.style.setProperty('left', `${(division / divisions) * 100}%`);\n  } else {\n    div.style.setProperty('right', '0%');\n  }\n  return div;\n};\n\nconst createSubDivision = ({\n  subDivision,\n  totalSubDivisions,\n  subDivisionHeight\n}: {\n  readonly subDivision: number;\n  readonly totalSubDivisions: number;\n  readonly subDivisionHeight: number;\n}) => {\n  return createDiv({\n    styles: {\n      position: `absolute`,\n      top: '0px',\n      left: `${(subDivision / totalSubDivisions) * 100}%`,\n      height: `${subDivisionHeight}px`,\n      'border-left': '1px solid #000000'\n    }\n  });\n};\n\nconst createZone = ({\n  zone,\n  height\n}: {\n  readonly zone: Zone;\n  readonly height: number;\n}): HTMLElement => {\n  return createDiv({\n    styles: {\n      height: `${height}px`,\n      flex: `${zone.max - zone.min}`, // TODO: make sure decimals are not used\n      'background-color': zone.color\n    }\n  });\n};\n\nconst createPointer = (pointer: Pointer): SVGElement => {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('width', `${pointer.width}`);\n  svg.setAttribute('height', `${pointer.height}`);\n  svg.style.setProperty('position', 'absolute');\n\n  const triangle = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'polygon'\n  );\n  triangle.setAttribute(\n    'points',\n    `${pointer.width / 2},0 0,${pointer.height} ${pointer.width},${\n      pointer.height\n    }`\n  );\n  triangle.setAttribute('fill', '#ff0000');\n  svg.appendChild(triangle);\n  return svg;\n};\n\nexport class LinearGauge {\n  readonly el: HTMLElement;\n  zones: Zone[];\n  zoneHeight: number;\n  value?: number;\n  pointer: Pointer;\n  container?: HTMLDivElement;\n  divisions: number;\n  divisionHeight: number;\n  subDivisionHeight: number;\n  subDivisions: number;\n\n  constructor(htmlElement: HTMLElement) {\n    this.el = htmlElement;\n    this.zones = [];\n    this.zoneHeight = defaultZoneHeight;\n    this.pointer = defaultPointer;\n    this.divisions = defaultDivisions;\n    this.divisionHeight = defaultDivisionHeight;\n    this.subDivisions = defaultSubDivisions;\n    this.subDivisionHeight = defaultSubDivisionHeight;\n  }\n\n  renderPointer(value?: number) {\n    const min = this.zones[0].min;\n    const max = this.zones[this.zones.length - 1].max;\n\n    if (value !== undefined && value >= min && value <= max) {\n      const totalRange = max - min;\n      const valuePercent = ((value - min) / totalRange) * 100;\n\n      const pointerSvg = createPointer(this.pointer);\n      pointerSvg.style.setProperty(\n        'left',\n        `calc(${valuePercent}% - ${Math.floor(this.pointer.width / 2)}px)`\n      );\n      pointerSvg.style.setProperty('top', `${this.zoneHeight}px`);\n      this.container?.appendChild(pointerSvg);\n    }\n  }\n\n  renderSubDivisions() {\n    const totalSubDivisions = this.divisions * this.subDivisions;\n    Array(totalSubDivisions)\n      .fill(0)\n      .map((_, sub) => sub)\n      .filter((sub) => sub % this.subDivisions !== 0)\n      .map((subDivision) =>\n        createSubDivision({\n          subDivision: subDivision,\n          totalSubDivisions: totalSubDivisions,\n          subDivisionHeight: this.subDivisionHeight\n        })\n      )\n      .forEach((div) => this.container?.appendChild(div));\n  }\n\n  renderDivisions() {\n    Array(this.divisions + 1)\n      .fill(0)\n      .map((_, division) =>\n        createDivision({\n          division: division,\n          divisions: this.divisions,\n          height: this.divisionHeight\n        })\n      )\n      .forEach((div) => this.container?.appendChild(div));\n  }\n\n  setOptions({\n    divisionColor = defaultDivisionColor,\n    divisions = defaultDivisions,\n    divisionHeight = defaultDivisionHeight,\n    pointer = defaultPointer,\n    subDivisions = defaultSubDivisions,\n    subDivisionHeight = defaultSubDivisionHeight,\n    value,\n    zones = defaultZones,\n    zoneHeight = defaultZoneHeight\n  }: Options): LinearGauge {\n    const container = createDiv({\n      styles: {\n        'border-top': `1px solid ${divisionColor}`,\n        display: 'flex',\n        position: 'relative',\n        height: `${Math.max(divisionHeight, zoneHeight + pointer.height)}px`\n      }\n    });\n\n    this.container = container;\n    this.zones = zones;\n    this.zoneHeight = zoneHeight;\n    this.pointer = pointer;\n    this.divisions = divisions;\n    this.divisionHeight = divisionHeight;\n    this.subDivisions = subDivisions;\n    this.subDivisionHeight = subDivisionHeight;\n\n    // Pointer\n    this.renderPointer(value);\n\n    // Sub-Divisions\n    this.renderSubDivisions();\n\n    // Divisions\n    this.renderDivisions();\n\n    // Zones\n    zones\n      .map((z) => createZone({ zone: z, height: zoneHeight }))\n      .forEach((d) => container.appendChild(d));\n\n    this.el.appendChild(container);\n\n    return this;\n  }\n\n  dispose(): HTMLElement {\n    this.el.childNodes.forEach((node) => this.el.removeChild(node));\n    // while (this.el.lastChild) {\n    //   this.el.removeChild(this.el.lastChild);\n    // }\n    // this.el.textContent = '';\n    return this.el;\n  }\n}\n","import { LinearGauge, Zone } from './linear-gauge';\nimport { useLayoutEffect, useRef } from 'react';\n\n/**\n * https://stackoverflow.com/questions/48719873/how-to-get-median-and-quartiles-percentiles-of-an-array-in-javascript-or-php\n *\n * @param {number[]} values - Dataset\n * @param {number} quantile - Quantile [0.0, 1.0]\n * @returns {number}\n */\nexport const quantile = (values: number[], quantile: number) => {\n  const sorted = values.sort((a, b) => a - b);\n  const pos = (sorted.length - 1) * quantile;\n  const base = Math.floor(pos);\n  const rest = pos - base;\n  if (sorted[base + 1] !== undefined) {\n    return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\n  }\n  return sorted[base];\n};\n\nexport type Quantile = {\n  readonly value: number;\n  readonly color: string;\n};\n\nconst QUANTILES: Quantile[] = [\n  {\n    value: 0.025,\n    color: getComputedStyle(document.body).getPropertyValue('--danger')\n  },\n  {\n    value: 0.25,\n    color: getComputedStyle(document.body).getPropertyValue('--warning')\n  },\n  {\n    value: 0.75,\n    color: getComputedStyle(document.body).getPropertyValue('--success')\n  },\n  {\n    value: 0.975,\n    color: getComputedStyle(document.body).getPropertyValue('--warning')\n  },\n  {\n    value: 1.0,\n    color: getComputedStyle(document.body).getPropertyValue('--danger')\n  }\n];\n\nexport const buildZones = ({\n  values,\n  quantiles = QUANTILES\n}: {\n  values: number[];\n  quantiles?: Quantile[];\n}): Zone[] => {\n  const qq = quantiles.map((q) => quantile(values, q.value));\n  return quantiles.map((q, index) => {\n    if (index === 0) {\n      return {\n        min: Math.min(...values),\n        max: qq[0],\n        color: q.color\n      };\n    }\n    return {\n      min: qq[index - 1],\n      max: qq[index],\n      color: q.color\n    };\n  });\n};\n\nexport const Gauge = ({\n  value,\n  values\n}: {\n  value: number;\n  values: number[];\n}) => {\n  const container = useRef<HTMLDivElement>(null);\n\n  /* istanbul ignore next */\n  useLayoutEffect(() => {\n    if (container.current === null) {\n      return;\n    }\n\n    let x: LinearGauge = new LinearGauge(container.current);\n    x.setOptions({\n      divisions: 5,\n      subDivisions: 2,\n      zones: buildZones({ values: values }),\n      value: value\n    });\n\n    return () => {\n      x.dispose();\n    };\n  });\n\n  return (\n    <div style={{ marginLeft: '71px', marginRight: '15px' }} ref={container} />\n  );\n};\n","import * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\n\nimport { useLayoutEffect, useRef } from 'react';\n\nimport { HistogramEntry } from '../db';\n\nam4core.options.queue = true;\n\nexport const Histogram = ({\n  data,\n  title\n}: {\n  data: HistogramEntry[];\n  title: string;\n}) => {\n  const chart = useRef<am4charts.XYChart>();\n  const ref = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Create chart instance\n\n    let x: am4charts.XYChart = am4core.create(\n      ref.current || undefined,\n      am4charts.XYChart\n    );\n\n    let t = x.titles.create();\n    t.text = title;\n    t.marginBottom = 22;\n    t.fontSize = '1rem';\n\n    // Add data\n    x.data = data;\n\n    // Create axes\n    const categoryAxis = x.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = 'from';\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 30;\n\n    const valueAxis = x.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = 'Number of Eyes';\n    valueAxis.min = 0;\n    valueAxis.max = Math.max(...[100, ...data.map((d) => d.count)]);\n\n    // Create series\n    const series = x.series.push(new am4charts.ColumnSeries());\n    const fill = getComputedStyle(document.body).getPropertyValue(\n      '--secondary' // Bootstrap 4\n    );\n    const stroke = getComputedStyle(document.body).getPropertyValue(\n      '--dark' // Bootstrap 4\n    );\n    series.columns.template.fill = am4core.color(fill.trim());\n    series.columns.template.stroke = am4core.color(stroke.trim());\n    series.dataFields.valueY = 'count';\n    series.dataFields.categoryX = 'from';\n    series.columns.template.tooltipText =\n      'Interval: [bold][[{from}, {to}[[[/]\\nNumber of Eyes: [bold]{count}[/]';\n\n    chart.current = x;\n\n    return () => {\n      x.dispose();\n    };\n  });\n\n  return <div ref={ref} style={{ width: '100%', height: '300px' }} />;\n};\n","import { HISTOGRAM_DATA, HistogramEntry, VALUES } from '../db';\n\nimport { Gauge } from './Gauge';\nimport { Histogram } from './Histogram';\n\nconst Graph = ({\n  title,\n  value,\n  histogramSeries,\n  gaugeValues\n}: {\n  title: string;\n  value: number;\n  histogramSeries: HistogramEntry[];\n  gaugeValues: number[];\n}) => (\n  <>\n    <div className=\"col-md-4\">\n      <Histogram title={title} data={histogramSeries} />\n      <Gauge value={value} values={gaugeValues} />\n    </div>\n  </>\n);\n\ninterface GraphConfig {\n  title: string;\n  data: HistogramEntry[];\n  arg: string;\n  values: number[];\n}\n\nconst GRAPH_CONFIGS: GraphConfig[] = [\n  {\n    title: 'Angle to Angle - AtA (mm)',\n    data: HISTOGRAM_DATA.ata,\n    arg: 'ata',\n    values: VALUES.ATA\n  },\n  {\n    title: 'Crystalline Lens Rise - CLR (μm)',\n    data: HISTOGRAM_DATA.clr,\n    arg: 'clr',\n    values: VALUES.CLR\n  },\n  {\n    title: 'Internal Anterior Chamber Depth - ACD (mm)',\n    data: HISTOGRAM_DATA.acd,\n    arg: 'acd',\n    values: VALUES.ACD\n  },\n  {\n    title: 'Average Anterior Chamber Angle - ACA (º)',\n    data: HISTOGRAM_DATA.aca,\n    arg: 'aca',\n    values: VALUES.ACA\n  },\n  {\n    title: 'White to White - WtW (mm)',\n    data: HISTOGRAM_DATA.wtw,\n    arg: 'wtw',\n    values: VALUES.WTW\n  },\n  {\n    title: 'Age (years)',\n    data: HISTOGRAM_DATA.age,\n    arg: 'age',\n    values: VALUES.AGE\n  }\n];\n\nexport const Normality = ({ ...args }) => (\n  <>\n    <div className=\"row\">\n      {GRAPH_CONFIGS.map((config) => (\n        <Graph\n          title={config.title}\n          histogramSeries={config.data}\n          value={args[config.arg]}\n          gaugeValues={config.values}\n          key={config.arg}\n        />\n      ))}\n    </div>\n  </>\n);\n","export const getClassName = ({\n  error,\n  touched,\n  base = ['form-control'],\n  invalid = ['is-invalid'],\n  valid = []\n}: {\n  error?: string;\n  touched?: boolean;\n  base?: Array<string>;\n  invalid?: Array<string>;\n  valid?: Array<string>;\n}): string => [...base, ...(error && touched ? invalid : valid)].join(' ');\n","import * as React from 'react';\n\nimport { ErrorMessage, Field } from 'formik';\nimport { getClassName } from '../util';\n\ntype Unit = 'mm' | 'nm' | 'º' | 'dpt' | 'μm';\n\nconst UNITS: Map<Unit, string> = new Map([\n  ['mm', 'millimetres'], // 10^(-3) metres\n  ['μm', 'micrometres'], // 10^(-6) metres (aka \"micron\", or \"micra\")\n  ['nm', 'nanometres'], // 10^(-9) metres\n  ['º', 'degrees'],\n  ['dpt', 'dioptres']\n]);\n\ninterface FieldWithUnitProps {\n  label: string;\n  name: string;\n  unit: Unit;\n  touched?: boolean;\n  placeholder?: string;\n  error?: string;\n  value?: number;\n  disabled?: boolean;\n}\n\nconst UnitSufix = ({ unit }: { unit: Unit }) => (\n  <div className=\"input-group-append\">\n    <span className=\"input-group-text\" title={UNITS.get(unit)}>\n      {unit}\n    </span>\n  </div>\n);\n\nexport const FieldWithUnit: React.FC<FieldWithUnitProps> = ({\n  label,\n  name,\n  unit,\n  placeholder,\n  error,\n  touched,\n  value,\n  disabled\n}) => {\n  return (\n    <div className={'form-group row'}>\n      <label htmlFor={name + 'field'} className=\"col-sm-6 col-form-label\">\n        {label}\n      </label>\n      <div className=\"col-sm-6\">\n        <div className=\"input-group\">\n          {disabled ? (\n            <input\n              name={name}\n              value={value}\n              className=\"form-control text-right\"\n              disabled={true}\n            />\n          ) : (\n            <Field\n              type=\"number\"\n              name={name}\n              className={getClassName({\n                error: error,\n                touched: touched,\n                base: ['form-control', 'text-right']\n              })}\n              placeholder={placeholder}\n              autoComplete=\"off\"\n            />\n          )}\n          <UnitSufix unit={unit} />\n          <ErrorMessage\n            name={name}\n            component=\"div\"\n            className=\"invalid-feedback\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const Biometry = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'biometry'>>) => (\n  <div className=\"section-form\">\n    <h4>Biometry</h4>\n    <FieldWithUnit\n      label=\"Angle to Angle (AtA)\"\n      name=\"biometry.ata\"\n      unit=\"mm\"\n      error={errors.biometry?.ata}\n      touched={touched.biometry?.ata}\n    />\n    <FieldWithUnit\n      label=\"White to White (WtW)\"\n      name=\"biometry.wtw\"\n      unit=\"mm\"\n      error={errors.biometry?.wtw}\n      touched={touched.biometry?.wtw}\n    />\n    <FieldWithUnit\n      label=\"Crystaline Lens Rise (CLR)\"\n      name=\"biometry.clr\"\n      unit=\"μm\"\n      error={errors.biometry?.clr}\n      touched={touched.biometry?.clr}\n    />\n    <FieldWithUnit\n      label=\"Internal Anterior Chamber Depth (ACD)\"\n      name=\"biometry.acd\"\n      unit=\"mm\"\n      error={errors.biometry?.acd}\n      touched={touched.biometry?.acd}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle nasal (ACAn)\"\n      name=\"biometry.acan\"\n      unit=\"º\"\n      error={errors.biometry?.acan}\n      touched={touched.biometry?.acan}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle temporal (ACAt)\"\n      name=\"biometry.acat\"\n      unit=\"º\"\n      error={errors.biometry?.acat}\n      touched={touched.biometry?.acat}\n    />\n  </div>\n);\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const CorneaProfile = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'corneaProfile'>>) => (\n  <div className=\"section-form\">\n    <h4>Cornea Profile</h4>\n    <FieldWithUnit\n      label=\"Keratometry - Flat Meridian (Kf)\"\n      name=\"corneaProfile.kf\"\n      unit=\"dpt\"\n      error={errors.corneaProfile?.kf}\n      touched={touched.corneaProfile?.kf}\n    />\n    <FieldWithUnit\n      label=\"Axis - Flat Meridian\"\n      name=\"corneaProfile.kf\"\n      unit=\"º\"\n      error={errors.corneaProfile?.axisf}\n      touched={touched.corneaProfile?.axisf}\n    />\n    <FieldWithUnit\n      label=\"Keratometry - Steep Meridian (Ks)\"\n      name=\"corneaProfile.ks\"\n      unit=\"dpt\"\n      error={errors.corneaProfile?.ks}\n      touched={touched.corneaProfile?.ks}\n    />\n    <FieldWithUnit\n      label=\"Axis - Steep Meridian\"\n      name=\"corneaProfile.ks\"\n      unit=\"º\"\n      error={errors.corneaProfile?.axiss}\n      touched={touched.corneaProfile?.axiss}\n    />\n    <FieldWithUnit\n      label=\"Central Corneal Thickness (CCT)\"\n      name=\"corneaProfile.cct\"\n      unit=\"μm\"\n      error={errors.corneaProfile?.cct}\n      touched={touched.corneaProfile?.cct}\n    />\n    <div className={'form-group row mb-4'}>\n      <label htmlFor={'corneaProfile.pcrf'} className=\"col-sm-6 col-form-label\">\n        Previous Corneal Refractive Surgery\n      </label>\n      <div className=\"col-sm-6\">\n        <div className=\"input-group\">\n          <select\n            name=\"corneaProfile.pcrf\"\n            className=\"form-control\"\n            disabled={true}\n            defaultValue={'none'}\n          >\n            <option value={'none'}>None</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import {\n  calcIclAxis,\n  calcIclCylindre,\n  calcIclSphere,\n  calcIclSphericalEquivalent\n} from '../formulas';\n\nimport { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const ICLPower = ({\n  errors,\n  touched,\n  values\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <div>\n    <h4>ICL Power</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"iclSphere\"\n      value={calcIclSphere({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"iclCylindre\"\n      value={calcIclCylindre({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"iclAxis\"\n      value={calcIclAxis(values.spectacleRefraction.axis)}\n      unit=\"º\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Spherical Equivalent (SE)\"\n      value={calcIclSphericalEquivalent({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      name=\"iclSphericalEquivalent\"\n      unit=\"dpt\"\n      disabled={true}\n    />\n  </div>\n);\n","import { ErrorMessage, Field, FormikState } from 'formik';\n\nimport { ICLInputs } from '../types';\nimport { getClassName } from '../util';\n\nexport const Info = ({\n  errors,\n  values,\n  touched\n}: FormikState<Pick<ICLInputs, 'patient'>>) => (\n  <>\n    <h4>Information</h4>\n    <div className=\"form-row\">\n      <div className=\"form-group col-md-4\">\n        <label htmlFor=\"fieldName\">Name</label>\n        <Field\n          name=\"patient.name\"\n          className=\"form-control\"\n          id=\"fieldName\"\n          placeholder=\"enter patient name\"\n          autoComplete=\"off\"\n        />\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldDateOfBirth\">Date of Birth</label>\n        <Field\n          name=\"patient.dateOfBirth\"\n          className={getClassName({\n            error: errors.patient?.dateOfBirth,\n            touched: touched.patient?.dateOfBirth\n          })}\n          id=\"fieldDateOfBirth\"\n          placeholder=\"yyyy-mm-dd\"\n          autoComplete=\"off\"\n          maxLength={10}\n        />\n        <ErrorMessage\n          name=\"patient.dateOfBirth\"\n          component=\"div\"\n          className=\"invalid-feedback\"\n        />\n      </div>\n      <div className=\"form-group col-md-2\">\n        <label htmlFor=\"fieldAge\">Age</label>\n        <div className=\"input-group\">\n          <input\n            name=\"age\"\n            className=\"form-control text-right\"\n            id=\"fieldAge\"\n            disabled={true}\n            value={values.patient.age()}\n          />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\" title=\"years\">\n              years\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldEye\">Eye</label>\n        <Field\n          as=\"select\"\n          name=\"patient.eye\"\n          className=\"form-control\"\n          id=\"fieldEye\"\n        >\n          <option value=\"\">Select...</option>\n          <option value=\"left\">Left</option>\n          <option value=\"right\">Right</option>\n        </Field>\n      </div>\n    </div>\n  </>\n);\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const SpectacleRefraction = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <div className=\"section-form\">\n    <h4>Spectacle Refraction</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"spectacleRefraction.sphere\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.sphere}\n      touched={touched.spectacleRefraction?.sphere}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"spectacleRefraction.cylindre\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.cylindre}\n      touched={touched.spectacleRefraction?.cylindre}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"spectacleRefraction.axis\"\n      unit=\"º\"\n      error={errors.spectacleRefraction?.axis}\n      touched={touched.spectacleRefraction?.axis}\n    />\n    <FieldWithUnit\n      label=\"Vertex\"\n      name=\"spectacleRefraction.vertex\"\n      unit=\"mm\"\n      error={errors.spectacleRefraction?.vertex}\n      touched={touched.spectacleRefraction?.vertex}\n    />\n  </div>\n);\n","import { Biometry } from './Biometry';\nimport { CorneaProfile } from './CorneaProfile';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\nimport { ICLPower } from './ICLPower';\nimport { Info } from './Info';\nimport { SpectacleRefraction } from './SpectacleRefraction';\n\nexport const Patient = ({\n  errors,\n  touched,\n  values,\n  ...otherProps\n}: FormikState<ICLInputs>) => (\n  <>\n    <Info values={values} errors={errors} touched={touched} {...otherProps} />\n    <hr />\n    <div className=\"form-row\">\n      <div className=\"col-md-4\">\n        <Biometry\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <CorneaProfile\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <SpectacleRefraction\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n        <ICLPower\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n    </div>\n  </>\n);\n","import { LENS_SIZES_MAP, LensSizeId } from '../matrix/data';\n\nexport interface RegressionInfo {\n  acd: number;\n  ata: number;\n  clr: number;\n  se: number;\n  age: number;\n}\n\ninterface RegressionExt {\n  vaultPredictionVal0: number;\n  probExpVal0: number;\n  probExpVal1: number;\n}\n\ntype LensSizeRegressionType = {\n  [key in LensSizeId]: RegressionExt;\n};\n\nexport const RegressionLensSizes: LensSizeRegressionType = {\n  small: {\n    vaultPredictionVal0: 4132.04 - 260.99,\n    probExpVal0: -1.259,\n    probExpVal1: -5.829\n  },\n  medium: {\n    vaultPredictionVal0: 4132.04,\n    probExpVal0: -1.401,\n    probExpVal1: -5.733\n  },\n  large: {\n    vaultPredictionVal0: 4132.04 + 330.19,\n    probExpVal0: -2.191,\n    probExpVal1: -3.775\n  }\n};\n\nconst vaultPredictionVal1 = (ri: RegressionInfo) =>\n  -287.45 * ri.ata + -0.37 * ri.clr + -20.39 * ri.se + -4.82 * ri.age;\n\nconst compression = ({\n  ata,\n  lensSize\n}: {\n  ata: number;\n  lensSize: number;\n}): number => lensSize - ata;\n\nconst probExpFactor0 = ({\n  ri,\n  lensSize\n}: {\n  ri: RegressionInfo;\n  lensSize: number;\n}) =>\n  0.028 * ri.age -\n  0.506 * compression({ ata: ri.ata, lensSize: lensSize }) +\n  0.005 * ri.clr +\n  0.202 * ri.se;\n\nconst probExpFactor1 = ({\n  ri,\n  lensSize\n}: {\n  ri: RegressionInfo;\n  lensSize: number;\n}) =>\n  -0.076 * ri.age +\n  3.721 * compression({ ata: ri.ata, lensSize: lensSize }) +\n  0.0 * ri.clr -\n  0.164 * ri.se;\n\nexport const vaultPrediction = ({\n  ri,\n  lensSizeId\n}: {\n  ri: RegressionInfo;\n  lensSizeId: LensSizeId;\n}): number =>\n  RegressionLensSizes[lensSizeId].vaultPredictionVal0 + vaultPredictionVal1(ri);\n\nexport const cornea2endothelium = ({\n  ri,\n  lensSizeId\n}: {\n  ri: RegressionInfo;\n  lensSizeId: LensSizeId;\n}): number => ri.acd - (220 + vaultPrediction({ ri, lensSizeId })) / 1000;\n\nexport const probability = ({\n  ri,\n  lensSizeId\n}: {\n  ri: RegressionInfo;\n  lensSizeId: LensSizeId;\n}) =>\n  1 /\n  (1 +\n    Math.exp(\n      RegressionLensSizes[lensSizeId].probExpVal0 +\n        probExpFactor0({ ri: ri, lensSize: LENS_SIZES_MAP[lensSizeId].value })\n    ) +\n    Math.exp(\n      RegressionLensSizes[lensSizeId].probExpVal1 +\n        probExpFactor1({ ri: ri, lensSize: LENS_SIZES_MAP[lensSizeId].value })\n    ));\n","import {\n  RegressionInfo,\n  cornea2endothelium,\n  vaultPrediction\n} from './formulas';\n\nimport { LENS_SIZES } from '../matrix/data';\nimport { round } from '../formulas';\n\nexport const VaultPrediction = (values: RegressionInfo) => (\n  <>\n    <h4>Vault Prediction</h4>\n    <table className=\"table table-bordered table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\" className=\"col-4\">\n            Lens Size\n          </th>\n          <th scope=\"col\" className=\"col-4 text-right\">\n            Vault (μm)\n          </th>\n          <th scope=\"col\" className=\"col-4 text-right\">\n            Corneal Endothelium to ICL (mm)\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {LENS_SIZES.map((size) => (\n          <tr key={size.id}>\n            <th scope=\"col\" className=\"col-4\">\n              {size.label}\n            </th>\n            <td className=\"col-4 text-right\">\n              {round(\n                vaultPrediction({\n                  ri: values,\n                  lensSizeId: size.id\n                })\n              )}\n            </td>\n            <td className=\"col-4 text-right\">\n              {round(\n                cornea2endothelium({\n                  ri: values,\n                  lensSizeId: size.id\n                })\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </>\n);\n","import { RegressionInfo, probability } from './formulas';\n\nimport { LENS_SIZES } from '../matrix/data';\nimport { round } from '../formulas';\n\nexport const VaultProbability = (values: RegressionInfo) => (\n  <>\n    <h4>{'Probability of 250 < Vault < 1000 (μm)'}</h4>\n    <table className=\"table table-bordered table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\" className=\"col-4\">\n            Lens Size\n          </th>\n          <th scope=\"col\" className=\"col-4 text-right\">\n            Probability (%)\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {LENS_SIZES.map((size) => (\n          <tr key={size.id}>\n            <th scope=\"col\" className=\"col-4\">\n              {size.label}\n            </th>\n            <td className=\"col-4 text-right\">\n              {round(\n                probability({\n                  ri: values,\n                  lensSizeId: size.id\n                }) * 100,\n                1\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </>\n);\n","import { RegressionInfo } from './formulas';\nimport { VaultPrediction } from './VaultPrediction';\nimport { VaultProbability } from './VaultProbability';\n\nexport const Regression = (values: RegressionInfo) => (\n  <>\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        <VaultPrediction {...values} />\n      </div>\n    </div>\n    <hr />\n    <div className=\"row\">\n      <div className=\"col-md-5\">\n        <VaultProbability {...values} />\n      </div>\n    </div>\n  </>\n);\n","import { NavLink } from 'react-router-dom';\n\ninterface Link {\n  to: string;\n  label: string;\n}\n\nconst LINKS: Link[] = [\n  {\n    to: '/',\n    label: 'Patient'\n  },\n  {\n    to: '/normality',\n    label: 'Biometric Normality'\n  },\n  {\n    to: '/matrix',\n    label: 'Floating Matrix'\n  },\n  {\n    to: '/regression',\n    label: 'Regression'\n  }\n];\n\nexport const TabLinks = () => (\n  <ul className=\"nav nav-pills\" style={{ marginBottom: '1rem' }}>\n    {LINKS.map((link, index) => (\n      <li className=\"nav-item\" key={index}>\n        <NavLink\n          exact={true}\n          className=\"nav-link\"\n          activeClassName=\"active\"\n          to={link.to}\n        >\n          {link.label}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n","import { Formik, FormikState } from 'formik';\nimport { ICLInputs, INITIAL_VALUES } from './types';\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\n\nimport { Footer } from './misc/Footer';\nimport GA from './misc/GoogleAnalytics';\nimport { ICLSchema } from './ICLSchema';\nimport { Matrix } from './matrix';\nimport { NavBar } from './misc/NavBar';\nimport { Normality } from './normality';\nimport { Patient } from './patient';\nimport { Regression } from './regression';\nimport { TabLinks } from './misc/TabLinks';\nimport { calcIclSphericalEquivalent } from './formulas';\n\nconst TabContent = ({\n  errors,\n  touched,\n  values,\n  ...otherProps\n}: FormikState<ICLInputs>) => (\n  <Switch>\n    <Route path=\"/normality\">\n      <Normality\n        ata={values.biometry.ata}\n        clr={values.biometry.clr}\n        acd={values.biometry.acd}\n        aca={(values.biometry.acan + values.biometry.acat) / 2.0}\n        wtw={values.biometry.wtw}\n        age={values.patient.age()}\n      />\n    </Route>\n    <Route path=\"/matrix\">\n      <Matrix ata={values.biometry.ata} clr={values.biometry.clr} />\n    </Route>\n    <Route path=\"/regression\">\n      <Regression\n        acd={values.biometry.acd}\n        ata={values.biometry.ata}\n        clr={values.biometry.clr}\n        se={calcIclSphericalEquivalent({\n          sphere: values.spectacleRefraction.sphere,\n          cylindre: values.spectacleRefraction.cylindre\n        })}\n        age={values.patient.age()}\n      />\n    </Route>\n    <Route path=\"/\">\n      <Patient\n        values={values}\n        errors={errors}\n        touched={touched}\n        {...otherProps}\n      />\n    </Route>\n  </Switch>\n);\n\nexport const ICLContainer = () => (\n  <Formik\n    initialValues={INITIAL_VALUES}\n    validationSchema={ICLSchema}\n    onSubmit={\n      /* istanbul ignore next */\n      () => {}\n    }\n  >\n    {({ errors, touched, values, resetForm, ...otherProps }) => (\n      <>\n        <NavBar resetForm={resetForm} />\n        <div className=\"container\">\n          {GA.init()}\n          <Router hashType=\"noslash\">\n            <TabLinks />\n            <hr />\n            <TabContent\n              values={values}\n              errors={errors}\n              touched={touched}\n              {...otherProps}\n            />\n          </Router>\n        </div>\n        <Footer />\n      </>\n    )}\n  </Formik>\n);\n","import { ICLContainer } from './ICLContainer';\n\nconst App = () => <ICLContainer />;\n\nexport default App;\n","import './App.scss';\n\nimport * as Sentry from '@sentry/react';\n\nimport App from './App';\nimport { Integrations } from '@sentry/tracing';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn:\n      'https://2e937d9ae4044696992e8d4afba8d9b5@o551236.ingest.sentry.io/5674476',\n    integrations: [new Integrations.BrowserTracing()],\n\n    // Set tracesSampleRate to 1.0 to capture 100%\n    // of transactions for performance monitoring.\n    // We recommend adjusting this value in production\n    tracesSampleRate: 1.0\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}