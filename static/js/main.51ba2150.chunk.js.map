{"version":3,"sources":["Footer.tsx","ICLSchema.ts","matrix/index.tsx","normality/index.tsx","util.ts","patient/FieldWithUnit.tsx","patient/Biometrics.tsx","formulas.ts","patient/ICLPower.tsx","patient/Info.tsx","patient/SpectacleRefraction.tsx","patient/index.tsx","regression/index.tsx","types.ts","ICLContainer.tsx","App.tsx","index.tsx"],"names":["Footer","className","style","fontSize","color","href","process","target","rel","INVALID_ERROR","REQUIRED_ERROR","ACQ_INVALID_ERROR","KF_INVALID_ERROR","CCT_INVALID_ERROR","SPHERE_INVALID_ERROR","CYLINDRE_INVALID_ERROR","ICLSchema","Yup","shape","patient","dateOfBirth","optional","typeError","biometrics","ata","required","min","max","wtw","clr","acq","acan","acat","kf","cct","spectacleRefraction","sphere","cylindre","axis","vertex","Matrix","Normality","getClassName","error","touched","base","invalid","valid","join","UNITS","Map","UnitSufix","unit","title","get","FieldWithUnit","label","name","placeholder","value","disabled","htmlFor","type","autoComplete","component","Biometrics","errors","FACTOR0","FACTOR1","round","val","decimals","Math","pow","calcPosMeridian","calcNegMeridian","calcIclSphere","calcIclCylindre","posMer","negMer","calcIclCylindreEquivalent","negCylindre","ICLPower","values","calcAge","differenceInYears","Date","Info","id","maxLength","as","SpectacleRefraction","Patient","otherProps","Regression","INITIAL_VALUES","eye","ICLContainer","initialValues","validationSchema","onSubmit","resetForm","onClick","hashType","marginBottom","exact","activeClassName","to","path","App","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51ba2150.chunk.js","sourcesContent":["export const Footer = () => (\n  <footer\n    className=\"p-3 p-md-5 mt-5 bg-light text-center text-sm-left\"\n    style={{ fontSize: '0.875rem', color: '#63707c' }}\n  >\n    <div className=\"container\">\n      <ul className=\"bd-footer-links pl-0 mb-3\">\n        <li className=\"d-inline-block\">\n          <a\n            href={`https://github.com/ruipinge/icl-calc/releases/tag/v${process.env.REACT_APP_VERSION}`}\n          >\n            {`v${process.env.REACT_APP_VERSION}`}\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#instructions\">\n            Instructions\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#data\">\n            Data\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc\">GitHub</a>\n        </li>\n      </ul>\n      <p className=\"mb-0\">\n        Designed and built with love by{' '}\n        <a href=\"https://www.linkedin.com/in/pedro-serra-44697321/\">\n          Pedro Serra\n        </a>{' '}\n        and <a href=\"https://ruipinge.github.io/resume\">Rui Pinge</a>.\n      </p>\n      <p className=\"mb-0\">\n        Available under the{' '}\n        <a\n          href=\"https://github.com/ruipinge/icl-calc/blob/master/LICENSE\"\n          target=\"_blank\"\n          rel=\"license noopener\"\n        >\n          MIT License\n        </a>{' '}\n        without any kind of warranty.\n      </p>\n      <p className=\"mb-0\">\n        The authors cannot be held responsible for any consequense of its usage.\n      </p>\n    </div>\n  </footer>\n);\n","import * as Yup from 'yup';\n\nconst ACQ_MIN = 2.7,\n  ACQ_MAX = 6.0,\n  KF_MIN = 20,\n  KF_MAX = 70,\n  CCT_MIN = 300,\n  CCT_MAX = 700,\n  SPHERE_MIN = -25,\n  SPHERE_MAX = 0,\n  CYLINDRE_MIN = -8,\n  CYLINDRE_MAX = 0,\n  INVALID_ERROR = 'Invalid value.',\n  REQUIRED_ERROR = 'Required value.',\n  ACQ_INVALID_ERROR = `${INVALID_ERROR} [${ACQ_MIN}, ${ACQ_MAX}]`,\n  KF_INVALID_ERROR = `${INVALID_ERROR} [${KF_MIN}, ${KF_MAX}]`,\n  CCT_INVALID_ERROR = `${INVALID_ERROR} [${CCT_MIN}, ${CCT_MAX}]`,\n  SPHERE_INVALID_ERROR = `${INVALID_ERROR} [${SPHERE_MIN}, ${SPHERE_MAX}]`,\n  CYLINDRE_INVALID_ERROR = `${INVALID_ERROR} [${CYLINDRE_MIN}, ${CYLINDRE_MAX}]`;\n\nexport const ICLSchema = Yup.object().shape({\n  patient: Yup.object().shape({\n    dateOfBirth: Yup.date().optional().typeError('Invalid date. (yyyy-mm-dd)')\n  }),\n  biometrics: Yup.object().shape({\n    ata: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    wtw: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    clr: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(-1000, INVALID_ERROR)\n      .max(1000, INVALID_ERROR),\n    acq: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(ACQ_MIN, ACQ_INVALID_ERROR)\n      .max(ACQ_MAX, ACQ_INVALID_ERROR),\n    acan: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    acat: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    kf: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(KF_MIN, KF_INVALID_ERROR)\n      .max(KF_MAX, KF_INVALID_ERROR),\n    cct: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CCT_MIN, CCT_INVALID_ERROR)\n      .max(CCT_MAX, CCT_INVALID_ERROR)\n  }),\n  spectacleRefraction: Yup.object().shape({\n    sphere: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(SPHERE_MIN, SPHERE_INVALID_ERROR)\n      .max(SPHERE_MAX, SPHERE_INVALID_ERROR),\n    cylindre: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CYLINDRE_MIN, CYLINDRE_INVALID_ERROR)\n      .max(CYLINDRE_MAX, CYLINDRE_INVALID_ERROR),\n    axis: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(180, INVALID_ERROR),\n    vertex: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR)\n  })\n});\n","export const Matrix = () => <>Floating Matrix is coming soon...</>;\n","export const Normality = () => <>Normality Graphs are coming soon...</>;\n","export const getClassName = ({\n  error,\n  touched,\n  base = ['form-control'],\n  invalid = ['is-invalid'],\n  valid = []\n}: {\n  error?: string;\n  touched?: boolean;\n  base?: Array<string>;\n  invalid?: Array<string>;\n  valid?: Array<string>;\n}): string => [...base, ...(error && touched ? invalid : valid)].join(' ');\n","import * as React from 'react';\n\nimport { Field, ErrorMessage } from 'formik';\nimport { getClassName } from '../util';\n\ntype Unit = 'mm' | 'nm' | 'º' | 'dpt' | 'μm';\n\nconst UNITS: Map<Unit, string> = new Map([\n  ['mm', 'millimetres'],\n  ['nm', 'nanometres'],\n  ['º', 'degrees'],\n  ['dpt', 'dioptres'],\n  ['μm', 'micrometres']\n]);\n\ninterface FieldWithUnitProps {\n  label: string;\n  name: string;\n  unit: Unit;\n  touched?: boolean;\n  placeholder?: string;\n  error?: string;\n  value?: number;\n  disabled?: boolean;\n}\n\nconst UnitSufix = ({ unit }: { unit: Unit }) => (\n  <div className=\"input-group-append\">\n    <span className=\"input-group-text\" title={UNITS.get(unit)}>\n      {unit}\n    </span>\n  </div>\n);\n\nexport const FieldWithUnit: React.FC<FieldWithUnitProps> = ({\n  label,\n  name,\n  unit,\n  placeholder,\n  error,\n  touched,\n  value,\n  disabled\n}) => {\n  return (\n    <div className={'form-group row'}>\n      <label htmlFor={name + 'field'} className=\"col-sm-6 col-form-label\">\n        {label}\n      </label>\n      <div className=\"col-sm-6\">\n        <div className=\"input-group\">\n          {disabled ? (\n            <input\n              name={name}\n              value={value}\n              className=\"form-control text-right\"\n              disabled={true}\n            />\n          ) : (\n            <Field\n              type=\"number\"\n              name={name}\n              className={getClassName({\n                error: error,\n                touched: touched,\n                base: ['form-control', 'text-right']\n              })}\n              placeholder={placeholder}\n              autoComplete=\"off\"\n            />\n          )}\n          <UnitSufix unit={unit} />\n          <ErrorMessage\n            name={name}\n            component=\"div\"\n            className=\"invalid-feedback\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FormikState } from 'formik';\n\nimport { ICLInputs } from '../types';\nimport { FieldWithUnit } from './FieldWithUnit';\n\nexport const Biometrics = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'biometrics'>>) => (\n  <>\n    <h4>Biometrics</h4>\n    <FieldWithUnit\n      label=\"Angle to Angle (AtA)\"\n      name=\"biometrics.ata\"\n      unit=\"mm\"\n      error={errors.biometrics?.ata}\n      touched={touched.biometrics?.ata}\n    />\n    <FieldWithUnit\n      label=\"White to White (WtW)\"\n      name=\"biometrics.wtw\"\n      unit=\"mm\"\n      error={errors.biometrics?.wtw}\n      touched={touched.biometrics?.wtw}\n    />\n    <FieldWithUnit\n      label=\"Crystaline Lens Rise (CLR)\"\n      name=\"biometrics.clr\"\n      unit=\"nm\"\n      error={errors.biometrics?.clr}\n      touched={touched.biometrics?.clr}\n    />\n    <FieldWithUnit\n      label=\"Internal Anterior Chamber Depth (ACQ)\"\n      name=\"biometrics.acq\"\n      unit=\"mm\"\n      error={errors.biometrics?.acq}\n      touched={touched.biometrics?.acq}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle nasal (ACAn)\"\n      name=\"biometrics.acan\"\n      unit=\"º\"\n      error={errors.biometrics?.acan}\n      touched={touched.biometrics?.acan}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle temporal (ACAt)\"\n      name=\"biometrics.acat\"\n      unit=\"º\"\n      error={errors.biometrics?.acat}\n      touched={touched.biometrics?.acat}\n    />\n    <FieldWithUnit\n      label=\"Keratometry - Flat Meridian (Kf)\"\n      name=\"biometrics.kf\"\n      unit=\"dpt\"\n      error={errors.biometrics?.kf}\n      touched={touched.biometrics?.kf}\n    />\n    <FieldWithUnit\n      label=\"Central Corneal Thickness (CCT)\"\n      name=\"biometrics.cct\"\n      unit=\"μm\"\n      error={errors.biometrics?.cct}\n      touched={touched.biometrics?.cct}\n    />\n  </>\n);\n","const FACTOR0 = -1.33756,\n  FACTOR1 = 0.9446;\n\nexport const round = (val: number, decimals: number = 2) =>\n  Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\nexport const calcPosMeridian = (sphere: number) => {\n  return FACTOR0 + FACTOR1 * sphere;\n};\n\nexport const calcNegMeridian = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return FACTOR0 + FACTOR1 * (sphere + cylindre);\n};\n\nexport const calcIclSphere = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return round(calcNegMeridian({ sphere: sphere, cylindre: cylindre }));\n};\n\nexport const calcIclCylindre = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const posMer = calcPosMeridian(sphere),\n    negMer = calcNegMeridian({ sphere: sphere, cylindre: cylindre });\n\n  return round(posMer - negMer);\n};\n\nexport const calcIclAxis = (axis: number) => {\n  if (axis >= 0 && axis < 90) {\n    return round(axis + 90, 1);\n  }\n\n  if (axis > 90 && axis <= 180) {\n    return round(axis - 90, 1);\n  }\n\n  return round(axis, 1);\n};\n\nexport const calcIclCylindreEquivalent = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const negCylindre =\n    calcNegMeridian({ sphere: sphere, cylindre: cylindre }) -\n    calcPosMeridian(sphere);\n  return round(calcPosMeridian(sphere) + negCylindre / 2);\n};\n","import { FormikState } from 'formik';\n\nimport { ICLInputs } from '../types';\nimport { FieldWithUnit } from './FieldWithUnit';\nimport {\n  calcIclSphere,\n  calcIclCylindre,\n  calcIclAxis,\n  calcIclCylindreEquivalent\n} from '../formulas';\n\nexport const ICLPower = ({\n  errors,\n  touched,\n  values\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <>\n    <h4>ICL Power</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"iclSphere\"\n      value={calcIclSphere({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"iclCylindre\"\n      value={calcIclCylindre({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"iclAxis\"\n      value={calcIclAxis(values.spectacleRefraction.axis)}\n      unit=\"º\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Spherical Equivalent\"\n      value={calcIclCylindreEquivalent({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      name=\"iclSphericalEquivalent\"\n      unit=\"º\"\n      disabled={true}\n    />\n  </>\n);\n","import { Field, ErrorMessage, FormikState } from 'formik';\nimport { differenceInYears } from 'date-fns';\n\nimport { ICLInputs } from '../types';\nimport { getClassName } from '../util';\n\nexport const calcAge = ({\n  dateOfBirth,\n  error\n}: {\n  dateOfBirth?: string;\n  error?: string;\n}): number =>\n  (dateOfBirth &&\n    !error &&\n    differenceInYears(new Date(), new Date(dateOfBirth))) ||\n  0;\n\nexport const Info = ({\n  errors,\n  values,\n  touched\n}: FormikState<Pick<ICLInputs, 'patient'>>) => (\n  <>\n    <h4>Information</h4>\n    <div className=\"form-row\">\n      <div className=\"form-group col-md-4\">\n        <label htmlFor=\"fieldName\">Name</label>\n        <Field\n          name=\"patient.name\"\n          className=\"form-control\"\n          id=\"fieldName\"\n          placeholder=\"enter patient name\"\n          autoComplete=\"off\"\n        />\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldDateOfBirth\">Date of Birth</label>\n        <Field\n          name=\"patient.dateOfBirth\"\n          className={getClassName({\n            error: errors.patient?.dateOfBirth,\n            touched: touched.patient?.dateOfBirth\n          })}\n          id=\"fieldDateOfBirth\"\n          placeholder=\"yyyy-mm-dd\"\n          autoComplete=\"off\"\n          maxLength={10}\n        />\n        <ErrorMessage\n          name=\"patient.dateOfBirth\"\n          component=\"div\"\n          className=\"invalid-feedback\"\n        />\n      </div>\n      <div className=\"form-group col-md-2\">\n        <label htmlFor=\"fieldAge\">Age</label>\n        <div className=\"input-group\">\n          <input\n            name=\"age\"\n            className=\"form-control text-right\"\n            id=\"fieldAge\"\n            disabled={true}\n            value={calcAge({\n              dateOfBirth: values.patient?.dateOfBirth,\n              error: errors.patient?.dateOfBirth\n            })}\n          />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\" title=\"years\">\n              yr.\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldEye\">Eye</label>\n        <Field\n          as=\"select\"\n          name=\"patient.eye\"\n          className=\"form-control\"\n          id=\"fieldEye\"\n        >\n          <option value=\"\">Select...</option>\n          <option value=\"left\">Left</option>\n          <option value=\"right\">Right</option>\n        </Field>\n      </div>\n    </div>\n  </>\n);\n","import { FormikState } from 'formik';\n\nimport { ICLInputs } from '../types';\nimport { FieldWithUnit } from './FieldWithUnit';\n\nexport const SpectacleRefraction = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <>\n    <h4>Spectacle Refraction</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"spectacleRefraction.sphere\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.sphere}\n      touched={touched.spectacleRefraction?.sphere}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"spectacleRefraction.cylindre\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.cylindre}\n      touched={touched.spectacleRefraction?.cylindre}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"spectacleRefraction.axis\"\n      unit=\"º\"\n      error={errors.spectacleRefraction?.axis}\n      touched={touched.spectacleRefraction?.axis}\n    />\n    <FieldWithUnit\n      label=\"Vertex\"\n      name=\"spectacleRefraction.vertex\"\n      unit=\"mm\"\n      error={errors.spectacleRefraction?.vertex}\n      touched={touched.spectacleRefraction?.vertex}\n    />\n  </>\n);\n","import { FormikState } from 'formik';\n\nimport { Biometrics } from './Biometrics';\nimport { ICLInputs } from '../types';\nimport { ICLPower } from './ICLPower';\nimport { Info } from './Info';\nimport { SpectacleRefraction } from './SpectacleRefraction';\n\nexport const Patient = ({\n  errors,\n  touched,\n  values,\n  ...otherProps\n}: FormikState<ICLInputs>) => (\n  <>\n    <Info values={values} errors={errors} touched={touched} {...otherProps} />\n    <hr />\n    <div className=\"form-row\">\n      <div className=\"col-md-4\">\n        <Biometrics\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <SpectacleRefraction\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <ICLPower\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n    </div>\n  </>\n);\n","export const Regression = () => <>Regression is coming soon...</>;\n","export interface PatientInfo {\n  name: string;\n  dateOfBirth: string;\n  eye: 'left' | 'right';\n}\n\nexport interface Biometrics {\n  ata: number;\n  wtw: number;\n  clr: number;\n  acq: number;\n  acan: number;\n  acat: number;\n  kf: number;\n  cct: number;\n}\n\nexport interface SpectacleRefraction {\n  sphere: number;\n  cylindre: number;\n  axis: number;\n  vertex: number;\n}\n\nexport interface ICLInputs {\n  patient: PatientInfo;\n  biometrics: Biometrics;\n  spectacleRefraction: SpectacleRefraction;\n}\n\nexport const INITIAL_VALUES: ICLInputs = {\n  patient: {\n    name: '',\n    dateOfBirth: '',\n    eye: 'left'\n  },\n  biometrics: {\n    ata: 0,\n    wtw: 0,\n    clr: 0,\n    acq: 0,\n    acan: 0,\n    acat: 0,\n    kf: 0,\n    cct: 0\n  },\n  spectacleRefraction: {\n    sphere: 0,\n    cylindre: 0,\n    axis: 0,\n    vertex: 0\n  }\n};\n","import { Formik } from 'formik';\nimport { HashRouter as Router, NavLink, Route, Switch } from 'react-router-dom';\nimport { Footer } from './Footer';\nimport { ICLSchema } from './ICLSchema';\nimport { Matrix } from './matrix';\nimport { Normality } from './normality';\nimport { Patient } from './patient';\nimport { Regression } from './regression';\nimport { INITIAL_VALUES } from './types';\n\nexport const ICLContainer = () => {\n  const initialValues = INITIAL_VALUES;\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={ICLSchema}\n      onSubmit={\n        /* istanbul ignore next */\n        () => {}\n      }\n    >\n      {({ errors, touched, values, resetForm, ...otherProps }) => (\n        <>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark fixed-top\">\n            <div className=\"container\">\n              <a className=\"navbar-brand\" href={process.env.PUBLIC_URL || '/'}>\n                ICL Size Calc\n              </a>\n              <form className=\"form-inline\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => {\n                    resetForm();\n                  }}\n                >\n                  Reset\n                </button>\n              </form>\n            </div>\n          </nav>\n          <div className=\"container\">\n            <Router hashType=\"noslash\">\n              <ul className=\"nav nav-pills\" style={{ marginBottom: '1rem' }}>\n                <li className=\"nav-item\">\n                  <NavLink\n                    exact={true}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/\"\n                  >\n                    Patient\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    exact={true}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/normality\"\n                  >\n                    Biometric Normality\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    exact={true}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/matrix\"\n                  >\n                    Floating Matrix\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    exact={true}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/regression\"\n                  >\n                    Regression\n                  </NavLink>\n                </li>\n              </ul>\n              <hr />\n              <Switch>\n                <Route path=\"/normality\">\n                  <Normality />\n                </Route>\n                <Route path=\"/matrix\">\n                  <Matrix />\n                </Route>\n                <Route path=\"/regression\">\n                  <Regression />\n                </Route>\n                <Route path=\"/\">\n                  <Patient\n                    values={values}\n                    errors={errors}\n                    touched={touched}\n                    {...otherProps}\n                  />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n          <Footer />\n        </>\n      )}\n    </Formik>\n  );\n};\n","import { ICLContainer } from './ICLContainer';\n\nconst App = () => <ICLContainer />;\n\nexport default App;\n","import * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.scss';\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn:\n      'https://2e937d9ae4044696992e8d4afba8d9b5@o551236.ingest.sentry.io/5674476',\n    integrations: [new Integrations.BrowserTracing()],\n\n    // Set tracesSampleRate to 1.0 to capture 100%\n    // of transactions for performance monitoring.\n    // We recommend adjusting this value in production\n    tracesSampleRate: 1.0\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}