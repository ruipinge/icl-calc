{"version":3,"sources":["components/FieldWithUnit.tsx","ICLSchema.ts","formulas.ts","ICLForm.tsx","ICLContainer.tsx","App.tsx","index.tsx"],"names":["FieldWithUnit","label","name","unit","unitTitle","placeholder","error","value","disabled","className","htmlFor","type","autoComplete","title","component","INVALID_ERROR","REQUIRED_ERROR","ACQ_INVALID_ERROR","KF_INVALID_ERROR","CCT_INVALID_ERROR","SPHERE_INVALID_ERROR","CYLINDRE_INVALID_ERROR","ICLSchema","Yup","shape","patient","dateOfBirth","optional","typeError","biometrics","ata","required","min","max","wtw","clr","acq","acan","acat","kf","cct","spectacleRefraction","sphere","cylindre","axis","vertex","FACTOR0","FACTOR1","round","val","decimals","Math","pow","calcPosMeridian","calcNegMeridian","calcIclCylindre","posMer","negMer","calcIclCylindreEquivalent","negCylindre","ICLForm","initialValues","setStatus","validationSchema","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","errors","touched","id","maxLength","differenceInYears","Date","as","renderICLPower","param1","ICLContainer","href","eye","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30bb8c5d.chunk.js","sourcesContent":["import * as React from 'react';\n\nimport { Field, ErrorMessage } from 'formik';\n\ninterface FieldWithUnitProps {\n  label: string;\n  name: string;\n  unit?: string;\n  unitTitle?: string;\n  placeholder?: string;\n  error?: string;\n  value?: number;\n  disabled?: boolean;\n}\n\nexport const FieldWithUnit: React.FC<FieldWithUnitProps> = ({\n  label,\n  name,\n  unit,\n  unitTitle,\n  placeholder,\n  error,\n  value,\n  disabled\n}) => {\n  return (\n    <div className={'form-group row'}>\n      <label htmlFor={name + 'field'} className=\"col-sm-6 col-form-label\">\n        {label}\n      </label>\n      <div className=\"col-sm-6\">\n        <div className=\"input-group\">\n          {disabled ? (\n            <input\n              name={name}\n              value={value}\n              className={'form-control text-right'}\n              disabled={true}\n            />\n          ) : (\n            <Field\n              type=\"number\"\n              name={name}\n              className={\n                (error ? 'is-invalid' : '') + ' form-control text-right'\n              }\n              placeholder={placeholder}\n              autoComplete=\"off\"\n            />\n          )}\n          {unit ? (\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text\" title={unitTitle}>\n                {unit}\n              </span>\n            </div>\n          ) : null}\n          <ErrorMessage\n            name={name}\n            component=\"div\"\n            className=\"invalid-feedback\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as Yup from 'yup';\n\nconst ACQ_MIN = 2.7,\n  ACQ_MAX = 6.0,\n  KF_MIN = 20,\n  KF_MAX = 70,\n  CCT_MIN = 300,\n  CCT_MAX = 700,\n  SPHERE_MIN = -25,\n  SPHERE_MAX = 0,\n  CYLINDRE_MIN = -8,\n  CYLINDRE_MAX = 0,\n  INVALID_ERROR = 'Invalid value.',\n  REQUIRED_ERROR = 'Required value.',\n  ACQ_INVALID_ERROR = `${INVALID_ERROR} [${ACQ_MIN}, ${ACQ_MAX}]`,\n  KF_INVALID_ERROR = `${INVALID_ERROR} [${KF_MIN}, ${KF_MAX}]`,\n  CCT_INVALID_ERROR = `${INVALID_ERROR} [${CCT_MIN}, ${CCT_MAX}]`,\n  SPHERE_INVALID_ERROR = `${INVALID_ERROR} [${SPHERE_MIN}, ${SPHERE_MAX}]`,\n  CYLINDRE_INVALID_ERROR = `${INVALID_ERROR} [${CYLINDRE_MIN}, ${CYLINDRE_MAX}]`;\n\nexport const ICLSchema = Yup.object().shape({\n  patient: Yup.object().shape({\n    dateOfBirth: Yup.date().optional().typeError('Invalid date. (yyyy-mm-dd)')\n  }),\n  biometrics: Yup.object().shape({\n    ata: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    wtw: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    clr: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(-1000, INVALID_ERROR)\n      .max(1000, INVALID_ERROR),\n    acq: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(ACQ_MIN, ACQ_INVALID_ERROR)\n      .max(ACQ_MAX, ACQ_INVALID_ERROR),\n    acan: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    acat: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    kf: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(KF_MIN, KF_INVALID_ERROR)\n      .max(KF_MAX, KF_INVALID_ERROR),\n    cct: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CCT_MIN, CCT_INVALID_ERROR)\n      .max(CCT_MAX, CCT_INVALID_ERROR)\n  }),\n  spectacleRefraction: Yup.object().shape({\n    sphere: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(SPHERE_MIN, SPHERE_INVALID_ERROR)\n      .max(SPHERE_MAX, SPHERE_INVALID_ERROR),\n    cylindre: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CYLINDRE_MIN, CYLINDRE_INVALID_ERROR)\n      .max(CYLINDRE_MAX, CYLINDRE_INVALID_ERROR),\n    axis: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(180, INVALID_ERROR),\n    vertex: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR)\n  })\n});\n","const FACTOR0 = -1.33756,\n  FACTOR1 = 0.9446;\n\nconst round = (val: number, decimals: number = 2) =>\n  Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\nconst calcPosMeridian = (sphere: number) => {\n  return FACTOR0 + FACTOR1 * sphere;\n};\n\nconst calcNegMeridian = (sphere: number, cylindre: number) => {\n  return FACTOR0 + FACTOR1 * (sphere + cylindre);\n};\n\nexport const calcIclSphere = (sphere: number, cylindre: number) => {\n  return round(calcNegMeridian(sphere, cylindre));\n};\n\nexport const calcIclCylindre = (sphere: number, cylindre: number) => {\n  const posMer = calcPosMeridian(sphere),\n    negMer = calcNegMeridian(sphere, cylindre);\n\n  return round(posMer - negMer);\n};\n\nexport const calcIclAxis = (axis: number) => {\n  if (axis >= 0 && axis < 90) {\n    return round(axis + 90, 1);\n  }\n\n  if (axis > 90 && axis <= 180) {\n    return round(axis - 90, 1);\n  }\n\n  return round(axis, 1);\n};\n\nexport const calcIclCylindreEquivalent = (sphere: number, cylindre: number) => {\n  const negCylindre =\n    calcNegMeridian(sphere, cylindre) - calcPosMeridian(sphere);\n  return round(calcPosMeridian(sphere) + negCylindre / 2);\n};\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { differenceInYears } from 'date-fns';\n\nimport { FieldWithUnit } from './components/FieldWithUnit';\nimport { ICLSchema } from './ICLSchema';\nimport {\n  calcIclSphere,\n  calcIclCylindre,\n  calcIclAxis,\n  calcIclCylindreEquivalent\n} from './formulas';\n\ninterface Patient {\n  name: string;\n  dateOfBirth: string;\n  eye: 'left' | 'right';\n}\n\ninterface Biometrics {\n  ata: number;\n  wtw: number;\n  clr: number;\n  acq: number;\n  acan: number;\n  acat: number;\n  kf: number;\n  cct: number;\n}\n\ninterface SpectacleRefraction {\n  sphere: number;\n  cylindre: number;\n  axis: number;\n  vertex: number;\n}\n\nexport interface ICLInputs {\n  patient: Patient;\n  biometrics: Biometrics;\n  spectacleRefraction: SpectacleRefraction;\n}\n\ninterface ContainerProps {\n  initialValues: ICLInputs;\n  setStatus: (arg1: boolean) => void;\n}\n\nexport const ICLForm: React.FC<ContainerProps> = ({\n  initialValues,\n  setStatus\n}) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={ICLSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({ errors, touched, values }) => (\n        <Form>\n          <h2>Patient</h2>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"fieldName\">Name</label>\n              <Field\n                name=\"patient.name\"\n                className=\"form-control\"\n                id=\"fieldName\"\n                placeholder=\"enter patient name\"\n                autoComplete=\"off\"\n              />\n            </div>\n            <div className=\"form-group col-md-2 offset-md-1\">\n              <label htmlFor=\"fieldDateOfBirth\">Date of Birth</label>\n              <Field\n                name=\"patient.dateOfBirth\"\n                className={\n                  (errors.patient?.dateOfBirth && touched.patient?.dateOfBirth\n                    ? 'is-invalid'\n                    : '') + ' form-control'\n                }\n                id=\"fieldDateOfBirth\"\n                placeholder=\"yyyy-mm-dd\"\n                autoComplete=\"off\"\n                maxLength={10}\n              />\n              <ErrorMessage\n                name=\"patient.dateOfBirth\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group col-md-1 offset-md-1\">\n              <label htmlFor=\"fieldAge\">Age</label>\n              <div className=\"input-group\">\n                <input\n                  name=\"patient.age\"\n                  className=\"form-control text-right\"\n                  id=\"fieldAge\"\n                  disabled={true}\n                  value={\n                    values.patient.dateOfBirth && !errors.patient?.dateOfBirth\n                      ? differenceInYears(\n                          new Date(),\n                          new Date(values.patient.dateOfBirth)\n                        ) || ''\n                      : ''\n                  }\n                />\n                <div className=\"input-group-append\">\n                  <span className=\"input-group-text\" title=\"years\">\n                    yr.\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group col-md-2 offset-md-1\">\n              <label htmlFor=\"fieldEye\">Eye</label>\n              <Field\n                as=\"select\"\n                name=\"eye\"\n                className=\"form-control\"\n                id=\"fieldEye\"\n                autoComplete=\"off\"\n              >\n                <option value=\"\">Select...</option>\n                <option value=\"left\">Left</option>\n                <option value=\"right\">Right</option>\n              </Field>\n            </div>\n          </div>\n          <hr />\n          <div className=\"form-row\">\n            <div className=\"col-md-4\">\n              <h2>Biometrics</h2>\n              <FieldWithUnit\n                label=\"Angle to Angle (AtA)\"\n                name=\"biometrics.ata\"\n                unit=\"mm\"\n                error={errors.biometrics?.ata}\n              />\n              <FieldWithUnit\n                label=\"White to White (WtW)\"\n                name=\"biometrics.wtw\"\n                unit=\"mm\"\n                unitTitle=\"millimetres\"\n                error={errors.biometrics?.wtw}\n              />\n              <FieldWithUnit\n                label=\"Crystaline Lens Rise (CLR)\"\n                name=\"biometrics.clr\"\n                unit=\"nm\"\n                unitTitle=\"nanometres\"\n                error={errors.biometrics?.clr}\n              />\n              <FieldWithUnit\n                label=\"Internal Anterior Chamber Depth (ACQ)\"\n                name=\"biometrics.acq\"\n                unit=\"mm\"\n                unitTitle=\"millimetres\"\n                error={errors.biometrics?.acq}\n              />\n              <FieldWithUnit\n                label=\"Anterior Chamber Angle nasal (ACAn)\"\n                name=\"biometrics.acan\"\n                unit=\"º\"\n                unitTitle=\"degrees\"\n                error={errors.biometrics?.acan}\n              />\n              <FieldWithUnit\n                label=\"Anterior Chamber Angle temporal (ACAt)\"\n                name=\"biometrics.acat\"\n                unit=\"º\"\n                unitTitle=\"degrees\"\n                error={errors.biometrics?.acat}\n              />\n              <FieldWithUnit\n                label=\"Keratometry - Flat Meridian (Kf)\"\n                name=\"biometrics.kf\"\n                unit=\"dpt\"\n                unitTitle=\"dioptres\"\n                error={errors.biometrics?.kf}\n              />\n              <FieldWithUnit\n                label=\"Central Corneal Thickness (CCT)\"\n                name=\"biometrics.cct\"\n                unit=\"μm\"\n                unitTitle=\"micrometres\"\n                error={errors.biometrics?.cct}\n              />\n            </div>\n            <div className=\"col-md-3 offset-md-1\">\n              <h2>Spectacle Refraction</h2>\n              <FieldWithUnit\n                label=\"Sphere\"\n                name=\"spectacleRefraction.sphere\"\n                unit=\"dpt\"\n                unitTitle=\"dioptres\"\n                error={errors.spectacleRefraction?.sphere}\n              />\n              <FieldWithUnit\n                label=\"Cylindre\"\n                name=\"spectacleRefraction.cylindre\"\n                unit=\"dpt\"\n                unitTitle=\"dioptres\"\n                error={errors.spectacleRefraction?.cylindre}\n              />\n              <FieldWithUnit\n                label=\"Axis\"\n                name=\"spectacleRefraction.axis\"\n                unit=\"º\"\n                unitTitle=\"degrees\"\n                error={errors.spectacleRefraction?.axis}\n              />\n              <FieldWithUnit\n                label=\"Vertex\"\n                name=\"spectacleRefraction.vertex\"\n                unit=\"mm\"\n                unitTitle=\"millimetres\"\n                error={errors.spectacleRefraction?.vertex}\n              />\n            </div>\n            <div className=\"col-md-3 offset-md-1\">\n              <h2>ICL Power</h2>\n              <FieldWithUnit\n                label=\"Sphere\"\n                name=\"iclSphere\"\n                value={calcIclSphere(\n                  values.spectacleRefraction.sphere,\n                  values.spectacleRefraction.cylindre\n                )}\n                unit=\"dpt\"\n                unitTitle=\"dioptres\"\n                disabled={true}\n              />\n              <FieldWithUnit\n                label=\"Cylindre\"\n                name=\"iclCylindre\"\n                value={calcIclCylindre(\n                  values.spectacleRefraction.sphere,\n                  values.spectacleRefraction.cylindre\n                )}\n                unit=\"dpt\"\n                unitTitle=\"dioptres\"\n                disabled={true}\n              />\n              <FieldWithUnit\n                label=\"Axis\"\n                name=\"iclAxis\"\n                value={calcIclAxis(values.spectacleRefraction.axis)}\n                unit=\"º\"\n                unitTitle=\"degrees\"\n                disabled={true}\n              />\n              <FieldWithUnit\n                label=\"Spherical Equivalent\"\n                value={calcIclCylindreEquivalent(\n                  values.spectacleRefraction.sphere,\n                  values.spectacleRefraction.cylindre\n                )}\n                name=\"iclSphericalEquivalent\"\n                unit=\"º\"\n                unitTitle=\"degrees\"\n                disabled={true}\n              />\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React from 'react';\n\nimport { ICLForm, ICLInputs } from './ICLForm';\n\nconst renderICLPower = (param1: boolean) => <div>renderICLPower: {param1}</div>;\n\nexport const ICLContainer = () => {\n  const initialValues: ICLInputs = {\n    patient: {\n      name: '',\n      dateOfBirth: '',\n      eye: 'left'\n    },\n    biometrics: {\n      ata: 0,\n      wtw: 0,\n      clr: 0,\n      acq: 0,\n      acan: 0,\n      acat: 0,\n      kf: 0,\n      cct: 0\n    },\n    spectacleRefraction: {\n      sphere: 0,\n      cylindre: 0,\n      axis: 0,\n      vertex: 0\n    }\n  };\n\n  return (\n    <>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark fixed-top\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"#\">\n            ICL Size Calc\n          </a>\n          <ul className=\"navbar-nav mr-auto\">\n            {/*\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"#home\">Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">Link</a>\n            </li>\n            */}\n          </ul>\n          <form className=\"form-inline\">\n            <button type=\"button\" className=\"btn btn-danger\">\n              Reset\n            </button>\n          </form>\n        </div>\n      </nav>\n      <div className=\"container\">\n        <ICLForm initialValues={initialValues} setStatus={renderICLPower} />\n      </div>\n    </>\n  );\n};\n","import { ICLContainer } from './ICLContainer';\n\nconst App = () => <ICLContainer />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './App.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}