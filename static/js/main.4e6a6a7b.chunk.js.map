{"version":3,"sources":["misc/Footer.tsx","ICLSchema.ts","types.ts","db.ts","matrix/data.ts","matrix/components.tsx","formulas.ts","matrix/VaultDistributionRows.tsx","matrix/VaultStatRows.tsx","matrix/index.tsx","misc/NavBar.tsx","normality/index.tsx","util.ts","patient/FieldWithUnit.tsx","patient/Biometrics.tsx","patient/ICLPower.tsx","patient/Info.tsx","patient/SpectacleRefraction.tsx","patient/index.tsx","regression/index.tsx","misc/TabLinks.tsx","ICLContainer.tsx","App.tsx","index.tsx"],"names":["Footer","className","style","fontSize","color","href","process","target","rel","INVALID_ERROR","REQUIRED_ERROR","ACQ_INVALID_ERROR","KF_INVALID_ERROR","CCT_INVALID_ERROR","SPHERE_INVALID_ERROR","CYLINDRE_INVALID_ERROR","ICLSchema","Yup","shape","patient","dateOfBirth","optional","typeError","biometrics","ata","required","min","max","wtw","clr","acq","acan","acat","kf","cct","spectacleRefraction","sphere","cylindre","axis","vertex","INITIAL_VALUES","name","eye","DATA_POINTS","csv","split","reduce","memo","row","map","col","Number","filter","isNaN","mapCsvToRows","iclSize","iclSe","vault","NUM_DATA_POINTS","length","LENS_SIZES","label","id","value","MYOPIA_LEVELS","title","Infinity","getDataPoints","lens","myopia","dataPoints","point","filterFlatRows","memoLens","memoMyopia","level","MatrixRow","values","scope","val","i","DividerRow","colSpan","FACTOR0","FACTOR1","round","decimals","Math","pow","calcPosMeridian","calcNegMeridian","calcIclSphere","calcIclCylindre","posMer","negMer","calcIclCylindreEquivalent","negCylindre","getVaultDistribution","range","points","undefined","countByVaultRange","FORMATTERS","PercentVaultSizeRow","a","formatVaultSizeTexts","VAULT_SIZE_RANGES","VaultDistributionRows","index","getVaultVals","reducer","lessThan","b","greaterThan","getVaultMaxMin","comparator","VaultSizeRow","VAULT_STATS","func","VaultStatRows","stat","getNumEyes","rows","LensHeaderCol","MyopiaHeaderCol","MyopiaHeaderColGroup","Matrix","size","acc","NavBar","resetForm","type","onClick","Normality","getClassName","error","touched","base","invalid","valid","join","UNITS","Map","UnitSufix","unit","get","FieldWithUnit","placeholder","disabled","htmlFor","autoComplete","component","Biometrics","errors","ICLPower","calcAge","differenceInYears","Date","Info","maxLength","as","SpectacleRefraction","Patient","otherProps","Regression","LINKS","to","TabLinks","marginBottom","link","exact","activeClassName","ICLContainer","initialValues","validationSchema","onSubmit","hashType","path","App","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e6a6a7b.chunk.js","sourcesContent":["export const Footer = () => (\n  <footer\n    className=\"p-3 p-md-5 mt-5 bg-light text-center text-sm-left\"\n    style={{ fontSize: '0.875rem', color: '#63707c' }}\n  >\n    <div className=\"container\">\n      <ul className=\"bd-footer-links pl-0 mb-3\">\n        <li className=\"d-inline-block\">\n          <a\n            href={`https://github.com/ruipinge/icl-calc/releases/tag/v${process.env.REACT_APP_VERSION}`}\n          >\n            {`v${process.env.REACT_APP_VERSION}`}\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#instructions\">\n            Instructions\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc/blob/master/README.md#data\">\n            Data\n          </a>\n        </li>\n        <li className=\"d-inline-block ml-3\">\n          <a href=\"https://github.com/ruipinge/icl-calc\">GitHub</a>\n        </li>\n      </ul>\n      <p className=\"mb-0\">\n        Designed and built with love by{' '}\n        <a href=\"https://www.linkedin.com/in/pedro-serra-44697321/\">\n          Pedro Serra\n        </a>{' '}\n        and <a href=\"https://ruipinge.github.io/resume\">Rui Pinge</a>.\n      </p>\n      <p className=\"mb-0\">\n        Available under the{' '}\n        <a\n          href=\"https://github.com/ruipinge/icl-calc/blob/master/LICENSE\"\n          target=\"_blank\"\n          rel=\"license noopener noreferrer\"\n        >\n          MIT License\n        </a>{' '}\n        without any kind of warranty.\n      </p>\n      <p className=\"mb-0\">\n        The authors cannot be held responsible for any consequense of its usage.\n      </p>\n    </div>\n  </footer>\n);\n","import * as Yup from 'yup';\n\nconst ACQ_MIN = 2.7,\n  ACQ_MAX = 6.0,\n  KF_MIN = 20,\n  KF_MAX = 70,\n  CCT_MIN = 300,\n  CCT_MAX = 700,\n  SPHERE_MIN = -25,\n  SPHERE_MAX = 0,\n  CYLINDRE_MIN = -8,\n  CYLINDRE_MAX = 0,\n  INVALID_ERROR = 'Invalid value.',\n  REQUIRED_ERROR = 'Required value.',\n  ACQ_INVALID_ERROR = `${INVALID_ERROR} [${ACQ_MIN}, ${ACQ_MAX}]`,\n  KF_INVALID_ERROR = `${INVALID_ERROR} [${KF_MIN}, ${KF_MAX}]`,\n  CCT_INVALID_ERROR = `${INVALID_ERROR} [${CCT_MIN}, ${CCT_MAX}]`,\n  SPHERE_INVALID_ERROR = `${INVALID_ERROR} [${SPHERE_MIN}, ${SPHERE_MAX}]`,\n  CYLINDRE_INVALID_ERROR = `${INVALID_ERROR} [${CYLINDRE_MIN}, ${CYLINDRE_MAX}]`;\n\nexport const ICLSchema = Yup.object().shape({\n  patient: Yup.object().shape({\n    dateOfBirth: Yup.date().optional().typeError('Invalid date. (yyyy-mm-dd)')\n  }),\n  biometrics: Yup.object().shape({\n    ata: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    wtw: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR),\n    clr: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(-1000, INVALID_ERROR)\n      .max(1000, INVALID_ERROR),\n    acq: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(ACQ_MIN, ACQ_INVALID_ERROR)\n      .max(ACQ_MAX, ACQ_INVALID_ERROR),\n    acan: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    acat: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(70, INVALID_ERROR),\n    kf: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(KF_MIN, KF_INVALID_ERROR)\n      .max(KF_MAX, KF_INVALID_ERROR),\n    cct: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CCT_MIN, CCT_INVALID_ERROR)\n      .max(CCT_MAX, CCT_INVALID_ERROR)\n  }),\n  spectacleRefraction: Yup.object().shape({\n    sphere: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(SPHERE_MIN, SPHERE_INVALID_ERROR)\n      .max(SPHERE_MAX, SPHERE_INVALID_ERROR),\n    cylindre: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(CYLINDRE_MIN, CYLINDRE_INVALID_ERROR)\n      .max(CYLINDRE_MAX, CYLINDRE_INVALID_ERROR),\n    axis: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(180, INVALID_ERROR),\n    vertex: Yup.number()\n      .required(REQUIRED_ERROR)\n      .min(0, INVALID_ERROR)\n      .max(20, INVALID_ERROR)\n  })\n});\n","export interface PatientInfo {\n  name: string;\n  dateOfBirth: string;\n  eye: 'left' | 'right';\n}\n\nexport interface Biometrics {\n  ata: number;\n  wtw: number;\n  clr: number;\n  acq: number;\n  acan: number;\n  acat: number;\n  kf: number;\n  cct: number;\n}\n\nexport interface SpectacleRefraction {\n  sphere: number;\n  cylindre: number;\n  axis: number;\n  vertex: number;\n}\n\nexport interface ICLInputs {\n  patient: PatientInfo;\n  biometrics: Biometrics;\n  spectacleRefraction: SpectacleRefraction;\n}\n\nexport const INITIAL_VALUES: ICLInputs = {\n  patient: {\n    name: '',\n    dateOfBirth: '',\n    eye: 'left'\n  },\n  biometrics: {\n    ata: 0,\n    wtw: 0,\n    clr: 0,\n    acq: 0,\n    acan: 0,\n    acat: 0,\n    kf: 0,\n    cct: 0\n  },\n  spectacleRefraction: {\n    sphere: 0,\n    cylindre: 0,\n    axis: 0,\n    vertex: 0\n  }\n};\n","import raw from 'raw.macro';\n\nconst CSV = raw('./data.csv');\n\nexport interface DataPoint {\n  iclSize: number;\n  iclSe: number;\n  ata: number;\n  clr: number;\n  vault: number;\n}\n\nexport const mapCsvToRows = (csv: string): number[][] =>\n  csv\n    .split('\\n')\n    .reduce(\n      (memo, row) => [\n        ...memo,\n        row.split(';').map((col: string) => Number(col))\n      ],\n      [] as number[][]\n    )\n    .filter((row) => !!row[0] && !isNaN(row[0]));\n\nexport const mapRowsToDataPoint = (rows: number[][]): DataPoint[] =>\n  rows.map((row) => ({\n    iclSize: row[1],\n    iclSe: row[2],\n    ata: row[6],\n    clr: row[7],\n    vault: row[11]\n  }));\n\nconst mapCsvToDataPoint = (csv: string): DataPoint[] =>\n  mapRowsToDataPoint(mapCsvToRows(csv));\n\nexport const DATA_POINTS: DataPoint[] = mapCsvToDataPoint(CSV);\n","import { DATA_POINTS, DataPoint } from '../db';\n\nconst ATA_DEVIATION: number = 0.1; // millimetres\nconst CLR_DEVIATION: number = 100 * 0.001; // millimetres\n\nexport const NUM_DATA_POINTS = DATA_POINTS.length;\n\nexport interface VaultRange {\n  min?: number;\n  max?: number;\n}\n\ntype LensSizeId = 'small' | 'medium' | 'large';\ninterface LensSize {\n  id: LensSizeId;\n  label: string;\n  value: number;\n}\nexport const LENS_SIZES: LensSize[] = [\n  {\n    label: '12.6 mm',\n    id: 'small',\n    value: 12.6\n  },\n  {\n    label: '13.2 mm',\n    id: 'medium',\n    value: 13.2\n  },\n  {\n    label: '13.7 mm',\n    id: 'large',\n    value: 13.7\n  }\n];\n\ntype MyopiaId = 'low' | 'moderate' | 'high';\ninterface MyopiaLevel {\n  id: MyopiaId;\n  label: string;\n  title: string;\n  min: number;\n  max: number;\n}\nexport const MYOPIA_LEVELS: MyopiaLevel[] = [\n  {\n    id: 'low',\n    label: 'Low',\n    title: 'Spherical Equivalent (SE) less than -6 dpt',\n    min: -6,\n    max: Infinity\n  },\n  {\n    id: 'moderate',\n    label: 'Moderate',\n    title: 'Spherical Equivalent (SE) between -6 dpt and -12 dpt',\n    min: -12,\n    max: -6\n  },\n  {\n    id: 'high',\n    label: 'High',\n    title: 'Spherical Equivalent (SE) greater than -12 dpt',\n    min: -Infinity,\n    max: -12\n  }\n];\n\nexport interface MatrixFilter {\n  readonly ata: number;\n  readonly clr: number;\n  readonly dataPoints?: DataPoint[];\n}\n\ninterface CacheEntry {\n  lens: LensSize;\n  myopia: MyopiaLevel;\n  dataPoints?: DataPoint[];\n}\n\nexport const getDataPoints = ({\n  lens,\n  myopia,\n  dataPoints = DATA_POINTS\n}: CacheEntry): DataPoint[] =>\n  dataPoints.filter(\n    (point) =>\n      lens.value === point.iclSize &&\n      myopia.min <= point.iclSe &&\n      point.iclSe < myopia.max\n  );\n\nconst filter = ({\n  ata,\n  clr,\n  point\n}: {\n  ata: number;\n  clr: number;\n  point: DataPoint;\n}) =>\n  ata >= point.ata - ATA_DEVIATION &&\n  ata <= point.ata + ATA_DEVIATION &&\n  clr >= point.clr - CLR_DEVIATION && // clr in db is in millimetres\n  clr <= point.clr + CLR_DEVIATION; // clr in db is in millimetres\n\nexport const filterFlatRows = ({\n  ata,\n  clr,\n  dataPoints = DATA_POINTS\n}: MatrixFilter): DataPoint[][] =>\n  LENS_SIZES.reduce(\n    (memoLens, lens) => [\n      ...memoLens,\n      ...MYOPIA_LEVELS.reduce(\n        (memoMyopia, level) => [\n          ...memoMyopia,\n          ...[\n            getDataPoints({\n              lens: lens,\n              myopia: level,\n              dataPoints: dataPoints\n            }).filter((point: DataPoint) => filter({ ata, clr, point }))\n          ]\n        ],\n        [] as DataPoint[][]\n      )\n    ],\n    [] as DataPoint[][]\n  );\n","import { LENS_SIZES, MYOPIA_LEVELS } from './data';\n\nexport const MatrixRow = ({\n  label,\n  title,\n  values\n}: {\n  label: string;\n  title: string;\n  values: number[];\n}) => (\n  <tr>\n    <th scope=\"row\" title={title}>\n      {label}\n    </th>\n    {values.map((val, i) => (\n      <td key={i} className=\"text-right\">\n        {val}\n      </td>\n    ))}\n  </tr>\n);\n\nexport const DividerRow = () => (\n  <tr className=\"table-bordered\">\n    <td colSpan={LENS_SIZES.length * MYOPIA_LEVELS.length + 1} />\n  </tr>\n);\n","const FACTOR0 = -1.33756,\n  FACTOR1 = 0.9446;\n\nexport const round = (val: number, decimals: number = 2) =>\n  Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\nexport const calcPosMeridian = (sphere: number) => {\n  return FACTOR0 + FACTOR1 * sphere;\n};\n\nexport const calcNegMeridian = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return FACTOR0 + FACTOR1 * (sphere + cylindre);\n};\n\nexport const calcIclSphere = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  return round(calcNegMeridian({ sphere: sphere, cylindre: cylindre }));\n};\n\nexport const calcIclCylindre = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const posMer = calcPosMeridian(sphere),\n    negMer = calcNegMeridian({ sphere: sphere, cylindre: cylindre });\n\n  return round(posMer - negMer);\n};\n\nexport const calcIclAxis = (axis: number) => {\n  if (axis >= 0 && axis < 90) {\n    return round(axis + 90, 1);\n  }\n\n  if (axis > 90 && axis <= 180) {\n    return round(axis - 90, 1);\n  }\n\n  return round(axis, 1);\n};\n\nexport const calcIclCylindreEquivalent = ({\n  sphere,\n  cylindre\n}: {\n  sphere: number;\n  cylindre: number;\n}) => {\n  const negCylindre =\n    calcNegMeridian({ sphere: sphere, cylindre: cylindre }) -\n    calcPosMeridian(sphere);\n  return round(calcPosMeridian(sphere) + negCylindre / 2);\n};\n","import { MatrixFilter, VaultRange, filterFlatRows } from './data';\n\nimport { DataPoint } from '../db';\nimport { MatrixRow } from './components';\nimport { round } from '../formulas';\n\nexport const countByVaultRange = ({\n  points,\n  range\n}: {\n  points: DataPoint[];\n  range: VaultRange;\n}): number =>\n  points.filter((point) => {\n    if (range.min !== undefined && range.max !== undefined) {\n      return range.min <= point.vault && point.vault < range.max;\n    }\n    if (range.min !== undefined) {\n      return range.min <= point.vault;\n    }\n    if (range.max !== undefined) {\n      return point.vault < range.max;\n    }\n    return false;\n  }).length;\n\nexport const getVaultDistribution = ({\n  filter,\n  range\n}: {\n  filter: MatrixFilter;\n  range: VaultRange;\n}): number[] =>\n  filterFlatRows(filter).map((points) =>\n    points.length !== 0\n      ? round(countByVaultRange({ points, range }) / points.length, 3)\n      : 0\n  );\n\ninterface VaultDestributionTexts {\n  label: string;\n  title: string;\n}\n\nconst FORMATTERS = {\n  minMax: (min: number, max: number) => ({\n    title: `Percentage of Eyes with Vault size between ${min} mm and ${max} mm`,\n    label: `% ${min} < Vault < ${max}`\n  }),\n  min: (min: number) => ({\n    title: `Percentage of Eyes with Vault size greater or equal than ${min} mm`,\n    label: `% ${min} < Vault`\n  }),\n  max: (max: number) => ({\n    title: `Percentage of Eyes with Vault size less than ${max} mm`,\n    label: `% Vault < ${max}`\n  }),\n  empty: {\n    label: '',\n    title: ''\n  }\n};\n\nexport const formatVaultSizeTexts = (\n  range: VaultRange\n): VaultDestributionTexts => {\n  if (range.min !== undefined && range.max !== undefined) {\n    return FORMATTERS.minMax(range.min, range.max);\n  }\n  if (range.min !== undefined) {\n    return FORMATTERS.min(range.min);\n  }\n  if (range.max !== undefined) {\n    return FORMATTERS.max(range.max);\n  }\n  return FORMATTERS.empty;\n};\n\nconst PercentVaultSizeRow = ({\n  filter,\n  range\n}: {\n  filter: MatrixFilter;\n  range: VaultRange;\n}) => {\n  const a = formatVaultSizeTexts(range);\n  return (\n    <MatrixRow\n      label={a.label}\n      title={a.title}\n      values={getVaultDistribution({ range, filter })}\n    />\n  );\n};\n\ninterface VaultSizeRange {\n  min?: number;\n  max?: number;\n}\nconst VAULT_SIZE_RANGES: VaultSizeRange[] = [\n  {\n    max: 0.25\n  },\n  {\n    min: 0.25,\n    max: 0.5\n  },\n  {\n    min: 0.5,\n    max: 0.75\n  },\n  {\n    min: 0.75,\n    max: 1\n  },\n  {\n    min: 1\n  }\n];\n\nexport const VaultDistributionRows = (filter: MatrixFilter) => (\n  <>\n    {VAULT_SIZE_RANGES.map((range, index) => (\n      <PercentVaultSizeRow filter={filter} range={range} key={index} />\n    ))}\n  </>\n);\n","import { MatrixFilter, filterFlatRows } from './data';\n\nimport { DataPoint } from '../db';\nimport { MatrixRow } from './components';\nimport { round } from '../formulas';\n\nexport const getVaultVals = ({\n  filter,\n  reducer\n}: {\n  filter: MatrixFilter;\n  reducer: (points: DataPoint[]) => number;\n}): number[] =>\n  filterFlatRows(filter).map((points: DataPoint[]) =>\n    round(reducer(points), 5)\n  );\n\nexport const getVaultAverages = (filter: MatrixFilter): number[] =>\n  getVaultVals({\n    filter,\n    reducer: (points: DataPoint[]) =>\n      points.reduce((memo, point) => memo + point.vault, 0) / points.length || 0\n  });\n\ntype lessGreater = (a: number, b: number) => boolean;\nconst lessThan: lessGreater = (a: number, b: number) => a < b;\nconst greaterThan: lessGreater = (a: number, b: number) => a > b;\n\nexport const getVaultMaxMin = ({\n  filter,\n  comparator\n}: {\n  filter: MatrixFilter;\n  comparator: lessGreater;\n}): number[] =>\n  getVaultVals({\n    filter,\n    reducer: (points: DataPoint[]) =>\n      points.reduce(\n        (memo, point) =>\n          memo === 0 || comparator(memo, point.vault) ? point.vault : memo,\n        0\n      )\n  });\n\nexport const getVaultMaxs = (filter: MatrixFilter): number[] =>\n  getVaultMaxMin({ filter, comparator: lessThan });\n\nexport const getVaultMins = (filter: MatrixFilter): number[] =>\n  getVaultMaxMin({ filter, comparator: greaterThan });\n\nconst VaultSizeRow = ({\n  label,\n  values\n}: {\n  label: string;\n  values: number[];\n}) => (\n  <MatrixRow\n    label={`${label} Vault`}\n    title={`${label} Vault size in millimetres`}\n    values={values}\n  />\n);\n\ninterface VaultStat {\n  label: string;\n  func: (filter: MatrixFilter) => number[];\n}\nconst VAULT_STATS: VaultStat[] = [\n  {\n    label: 'Average',\n    func: getVaultAverages\n  },\n  {\n    label: 'Minimum',\n    func: getVaultMins\n  },\n  {\n    label: 'Maximum',\n    func: getVaultMaxs\n  }\n];\n\nexport const VaultStatRows = (filter: MatrixFilter) => (\n  <>\n    {VAULT_STATS.map((stat) => (\n      <VaultSizeRow\n        key={stat.label}\n        label={stat.label}\n        values={stat.func(filter)}\n      />\n    ))}\n  </>\n);\n","import { DividerRow, MatrixRow } from './components';\nimport {\n  LENS_SIZES,\n  MYOPIA_LEVELS,\n  MatrixFilter,\n  NUM_DATA_POINTS,\n  filterFlatRows\n} from './data';\n\nimport { DataPoint } from '../db';\nimport { VaultDistributionRows } from './VaultDistributionRows';\nimport { VaultStatRows } from './VaultStatRows';\n\nexport const getNumEyes = (filter: MatrixFilter): number[] =>\n  filterFlatRows(filter).map((rows: DataPoint[]) => rows.length);\n\nconst LensHeaderCol = ({ label }: { label: string }) => (\n  <th scope=\"col\" colSpan={MYOPIA_LEVELS.length} className=\"text-right\">\n    {label}\n  </th>\n);\n\nconst MyopiaHeaderCol = ({\n  label,\n  title\n}: {\n  label: string;\n  title: string;\n}) => (\n  <th scope=\"col\" className=\"text-right\" title={title}>\n    {label}\n  </th>\n);\n\nconst MyopiaHeaderColGroup = () => (\n  <>\n    {MYOPIA_LEVELS.map((level) => (\n      <MyopiaHeaderCol label={level.label} title={level.title} key={level.id} />\n    ))}\n  </>\n);\n\nexport const Matrix = (filter: MatrixFilter) => (\n  <>\n    <table className=\"table table-bordered table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Lens Size</th>\n          {LENS_SIZES.map((size) => (\n            <LensHeaderCol label={size.label} key={size.id} />\n          ))}\n        </tr>\n        <tr>\n          <th scope=\"col\">Myopia</th>\n          {LENS_SIZES.map((size) => (\n            <MyopiaHeaderColGroup key={size.id} />\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <MatrixRow\n          label=\"Number of Eyes\"\n          title=\"Number of Eyes matching the column criteria\"\n          values={getNumEyes(filter)}\n        />\n        <DividerRow />\n        <VaultStatRows {...filter} />\n        <DividerRow />\n        <VaultDistributionRows {...filter} />\n      </tbody>\n    </table>\n    <ul className=\"list-inline\">\n      <li className=\"list-inline-item\">\n        <strong>Angle to Angle (AtA): </strong>\n        {filter.ata} mm.\n      </li>\n      <li className=\"list-inline-item\">\n        <strong>Crystaline Lens Rise (CLR): </strong>\n        {filter.clr} mm.\n      </li>\n      <li className=\"list-inline-item\">\n        <strong>Number of matching Eyes: </strong>\n        {getNumEyes(filter).reduce((acc, a) => acc + a, 0)}/{NUM_DATA_POINTS}.\n      </li>\n    </ul>\n  </>\n);\n","export const NavBar = ({ resetForm }: { resetForm: (a?: any) => void }) => (\n  <nav className=\"navbar navbar-expand navbar-dark bg-dark fixed-top\">\n    <div className=\"container\">\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL || '/'}>\n        ICL Size Calc\n      </a>\n      <form className=\"form-inline\">\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={() => {\n            resetForm();\n          }}\n        >\n          Reset\n        </button>\n      </form>\n    </div>\n  </nav>\n);\n","export const Normality = () => <>Normality Graphs are coming soon...</>;\n","export const getClassName = ({\n  error,\n  touched,\n  base = ['form-control'],\n  invalid = ['is-invalid'],\n  valid = []\n}: {\n  error?: string;\n  touched?: boolean;\n  base?: Array<string>;\n  invalid?: Array<string>;\n  valid?: Array<string>;\n}): string => [...base, ...(error && touched ? invalid : valid)].join(' ');\n","import * as React from 'react';\n\nimport { ErrorMessage, Field } from 'formik';\nimport { getClassName } from '../util';\n\ntype Unit = 'mm' | 'nm' | 'º' | 'dpt' | 'μm';\n\nconst UNITS: Map<Unit, string> = new Map([\n  ['mm', 'millimetres'], // 10^(-3) metres\n  ['μm', 'micrometres'], // 10^(-6) metres (aka \"micron\", or \"micra\")\n  ['nm', 'nanometres'], // 10^(-9) metres\n  ['º', 'degrees'],\n  ['dpt', 'dioptres']\n]);\n\ninterface FieldWithUnitProps {\n  label: string;\n  name: string;\n  unit: Unit;\n  touched?: boolean;\n  placeholder?: string;\n  error?: string;\n  value?: number;\n  disabled?: boolean;\n}\n\nconst UnitSufix = ({ unit }: { unit: Unit }) => (\n  <div className=\"input-group-append\">\n    <span className=\"input-group-text\" title={UNITS.get(unit)}>\n      {unit}\n    </span>\n  </div>\n);\n\nexport const FieldWithUnit: React.FC<FieldWithUnitProps> = ({\n  label,\n  name,\n  unit,\n  placeholder,\n  error,\n  touched,\n  value,\n  disabled\n}) => {\n  return (\n    <div className={'form-group row'}>\n      <label htmlFor={name + 'field'} className=\"col-sm-6 col-form-label\">\n        {label}\n      </label>\n      <div className=\"col-sm-6\">\n        <div className=\"input-group\">\n          {disabled ? (\n            <input\n              name={name}\n              value={value}\n              className=\"form-control text-right\"\n              disabled={true}\n            />\n          ) : (\n            <Field\n              type=\"number\"\n              name={name}\n              className={getClassName({\n                error: error,\n                touched: touched,\n                base: ['form-control', 'text-right']\n              })}\n              placeholder={placeholder}\n              autoComplete=\"off\"\n            />\n          )}\n          <UnitSufix unit={unit} />\n          <ErrorMessage\n            name={name}\n            component=\"div\"\n            className=\"invalid-feedback\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const Biometrics = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'biometrics'>>) => (\n  <>\n    <h4>Biometrics</h4>\n    <FieldWithUnit\n      label=\"Angle to Angle (AtA)\"\n      name=\"biometrics.ata\"\n      unit=\"mm\"\n      error={errors.biometrics?.ata}\n      touched={touched.biometrics?.ata}\n    />\n    <FieldWithUnit\n      label=\"White to White (WtW)\"\n      name=\"biometrics.wtw\"\n      unit=\"mm\"\n      error={errors.biometrics?.wtw}\n      touched={touched.biometrics?.wtw}\n    />\n    <FieldWithUnit\n      label=\"Crystaline Lens Rise (CLR)\"\n      name=\"biometrics.clr\"\n      unit=\"μm\"\n      error={errors.biometrics?.clr}\n      touched={touched.biometrics?.clr}\n    />\n    <FieldWithUnit\n      label=\"Internal Anterior Chamber Depth (ACQ)\"\n      name=\"biometrics.acq\"\n      unit=\"mm\"\n      error={errors.biometrics?.acq}\n      touched={touched.biometrics?.acq}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle nasal (ACAn)\"\n      name=\"biometrics.acan\"\n      unit=\"º\"\n      error={errors.biometrics?.acan}\n      touched={touched.biometrics?.acan}\n    />\n    <FieldWithUnit\n      label=\"Anterior Chamber Angle temporal (ACAt)\"\n      name=\"biometrics.acat\"\n      unit=\"º\"\n      error={errors.biometrics?.acat}\n      touched={touched.biometrics?.acat}\n    />\n    <FieldWithUnit\n      label=\"Keratometry - Flat Meridian (Kf)\"\n      name=\"biometrics.kf\"\n      unit=\"dpt\"\n      error={errors.biometrics?.kf}\n      touched={touched.biometrics?.kf}\n    />\n    <FieldWithUnit\n      label=\"Central Corneal Thickness (CCT)\"\n      name=\"biometrics.cct\"\n      unit=\"μm\"\n      error={errors.biometrics?.cct}\n      touched={touched.biometrics?.cct}\n    />\n  </>\n);\n","import {\n  calcIclAxis,\n  calcIclCylindre,\n  calcIclCylindreEquivalent,\n  calcIclSphere\n} from '../formulas';\n\nimport { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const ICLPower = ({\n  errors,\n  touched,\n  values\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <>\n    <h4>ICL Power</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"iclSphere\"\n      value={calcIclSphere({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"iclCylindre\"\n      value={calcIclCylindre({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      unit=\"dpt\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"iclAxis\"\n      value={calcIclAxis(values.spectacleRefraction.axis)}\n      unit=\"º\"\n      disabled={true}\n    />\n    <FieldWithUnit\n      label=\"Spherical Equivalent (SE)\"\n      value={calcIclCylindreEquivalent({\n        sphere: values.spectacleRefraction.sphere,\n        cylindre: values.spectacleRefraction.cylindre\n      })}\n      name=\"iclSphericalEquivalent\"\n      unit=\"º\"\n      disabled={true}\n    />\n  </>\n);\n","import { ErrorMessage, Field, FormikState } from 'formik';\n\nimport { ICLInputs } from '../types';\nimport { differenceInYears } from 'date-fns';\nimport { getClassName } from '../util';\n\nexport const calcAge = ({\n  dateOfBirth,\n  error\n}: {\n  dateOfBirth?: string;\n  error?: string;\n}): number =>\n  (dateOfBirth &&\n    !error &&\n    differenceInYears(new Date(), new Date(dateOfBirth))) ||\n  0;\n\nexport const Info = ({\n  errors,\n  values,\n  touched\n}: FormikState<Pick<ICLInputs, 'patient'>>) => (\n  <>\n    <h4>Information</h4>\n    <div className=\"form-row\">\n      <div className=\"form-group col-md-4\">\n        <label htmlFor=\"fieldName\">Name</label>\n        <Field\n          name=\"patient.name\"\n          className=\"form-control\"\n          id=\"fieldName\"\n          placeholder=\"enter patient name\"\n          autoComplete=\"off\"\n        />\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldDateOfBirth\">Date of Birth</label>\n        <Field\n          name=\"patient.dateOfBirth\"\n          className={getClassName({\n            error: errors.patient?.dateOfBirth,\n            touched: touched.patient?.dateOfBirth\n          })}\n          id=\"fieldDateOfBirth\"\n          placeholder=\"yyyy-mm-dd\"\n          autoComplete=\"off\"\n          maxLength={10}\n        />\n        <ErrorMessage\n          name=\"patient.dateOfBirth\"\n          component=\"div\"\n          className=\"invalid-feedback\"\n        />\n      </div>\n      <div className=\"form-group col-md-2\">\n        <label htmlFor=\"fieldAge\">Age</label>\n        <div className=\"input-group\">\n          <input\n            name=\"age\"\n            className=\"form-control text-right\"\n            id=\"fieldAge\"\n            disabled={true}\n            value={calcAge({\n              dateOfBirth: values.patient?.dateOfBirth,\n              error: errors.patient?.dateOfBirth\n            })}\n          />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\" title=\"years\">\n              yr.\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group col-md-2 offset-md-1\">\n        <label htmlFor=\"fieldEye\">Eye</label>\n        <Field\n          as=\"select\"\n          name=\"patient.eye\"\n          className=\"form-control\"\n          id=\"fieldEye\"\n        >\n          <option value=\"\">Select...</option>\n          <option value=\"left\">Left</option>\n          <option value=\"right\">Right</option>\n        </Field>\n      </div>\n    </div>\n  </>\n);\n","import { FieldWithUnit } from './FieldWithUnit';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\n\nexport const SpectacleRefraction = ({\n  errors,\n  touched\n}: FormikState<Pick<ICLInputs, 'spectacleRefraction'>>) => (\n  <>\n    <h4>Spectacle Refraction</h4>\n    <FieldWithUnit\n      label=\"Sphere\"\n      name=\"spectacleRefraction.sphere\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.sphere}\n      touched={touched.spectacleRefraction?.sphere}\n    />\n    <FieldWithUnit\n      label=\"Cylindre\"\n      name=\"spectacleRefraction.cylindre\"\n      unit=\"dpt\"\n      error={errors.spectacleRefraction?.cylindre}\n      touched={touched.spectacleRefraction?.cylindre}\n    />\n    <FieldWithUnit\n      label=\"Axis\"\n      name=\"spectacleRefraction.axis\"\n      unit=\"º\"\n      error={errors.spectacleRefraction?.axis}\n      touched={touched.spectacleRefraction?.axis}\n    />\n    <FieldWithUnit\n      label=\"Vertex\"\n      name=\"spectacleRefraction.vertex\"\n      unit=\"mm\"\n      error={errors.spectacleRefraction?.vertex}\n      touched={touched.spectacleRefraction?.vertex}\n    />\n  </>\n);\n","import { Biometrics } from './Biometrics';\nimport { FormikState } from 'formik';\nimport { ICLInputs } from '../types';\nimport { ICLPower } from './ICLPower';\nimport { Info } from './Info';\nimport { SpectacleRefraction } from './SpectacleRefraction';\n\nexport const Patient = ({\n  errors,\n  touched,\n  values,\n  ...otherProps\n}: FormikState<ICLInputs>) => (\n  <>\n    <Info values={values} errors={errors} touched={touched} {...otherProps} />\n    <hr />\n    <div className=\"form-row\">\n      <div className=\"col-md-4\">\n        <Biometrics\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <SpectacleRefraction\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n      <div className=\"col-md-3 offset-md-1\">\n        <ICLPower\n          values={values}\n          errors={errors}\n          touched={touched}\n          {...otherProps}\n        />\n      </div>\n    </div>\n  </>\n);\n","export const Regression = () => <>Regression is coming soon...</>;\n","import { NavLink } from 'react-router-dom';\n\ninterface Link {\n  to: string;\n  label: string;\n}\n\nconst LINKS: Link[] = [\n  {\n    to: '/',\n    label: 'Patient'\n  },\n  {\n    to: '/normality',\n    label: 'Biometric Normality'\n  },\n  {\n    to: '/matrix',\n    label: 'Floating Matrix'\n  },\n  {\n    to: '/regression',\n    label: 'Regression'\n  }\n];\n\nexport const TabLinks = () => (\n  <ul className=\"nav nav-pills\" style={{ marginBottom: '1rem' }}>\n    {LINKS.map((link, index) => (\n      <li className=\"nav-item\" key={index}>\n        <NavLink\n          exact={true}\n          className=\"nav-link\"\n          activeClassName=\"active\"\n          to={link.to}\n        >\n          {link.label}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n","import { Route, HashRouter as Router, Switch } from 'react-router-dom';\n\nimport { Footer } from './misc/Footer';\nimport { Formik } from 'formik';\nimport { ICLSchema } from './ICLSchema';\nimport { INITIAL_VALUES } from './types';\nimport { Matrix } from './matrix';\nimport { NavBar } from './misc/NavBar';\nimport { Normality } from './normality';\nimport { Patient } from './patient';\nimport { Regression } from './regression';\nimport { TabLinks } from './misc/TabLinks';\n\nexport const ICLContainer = () => {\n  const initialValues = INITIAL_VALUES;\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={ICLSchema}\n      onSubmit={\n        /* istanbul ignore next */\n        () => {}\n      }\n    >\n      {({ errors, touched, values, resetForm, ...otherProps }) => (\n        <>\n          <NavBar resetForm={resetForm} />\n          <div className=\"container\">\n            <Router hashType=\"noslash\">\n              <TabLinks />\n              <hr />\n              <Switch>\n                <Route path=\"/normality\">\n                  <Normality />\n                </Route>\n                <Route path=\"/matrix\">\n                  <Matrix\n                    ata={values.biometrics.ata}\n                    clr={values.biometrics.clr * 0.001} // CLR in Matrix is in millimetres\n                  />\n                </Route>\n                <Route path=\"/regression\">\n                  <Regression />\n                </Route>\n                <Route path=\"/\">\n                  <Patient\n                    values={values}\n                    errors={errors}\n                    touched={touched}\n                    {...otherProps}\n                  />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n          <Footer />\n        </>\n      )}\n    </Formik>\n  );\n};\n","import { ICLContainer } from './ICLContainer';\n\nconst App = () => <ICLContainer />;\n\nexport default App;\n","import './App.scss';\n\nimport * as Sentry from '@sentry/react';\n\nimport App from './App';\nimport { Integrations } from '@sentry/tracing';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn:\n      'https://2e937d9ae4044696992e8d4afba8d9b5@o551236.ingest.sentry.io/5674476',\n    integrations: [new Integrations.BrowserTracing()],\n\n    // Set tracesSampleRate to 1.0 to capture 100%\n    // of transactions for performance monitoring.\n    // We recommend adjusting this value in production\n    tracesSampleRate: 1.0\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}